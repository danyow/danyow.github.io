"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9285],{6267:function(n){n.exports=JSON.parse('{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","versionLabel":"v0 \ud83d\udea7","versionPath":"/docs","tagsPath":"/docs/tags","versionBanner":null,"versionBadge":false,"versionClassName":"docs-version-current","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/danyow.github.io/danyow.github.io/website/sidebars.js","contentPath":"/home/runner/work/danyow.github.io/danyow.github.io/website/docs","contentPathLocalized":"/home/runner/work/danyow.github.io/danyow.github.io/website/i18n/zh-Hans/docusaurus-plugin-content-docs/current","docs":[{"unversionedId":"placeholder","id":"placeholder","title":"Placeholder","description":"","source":"@site/docs/placeholder.md","sourceDirName":".","slug":"/","permalink":"/docs/","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","tags":[],"version":"current","lastUpdatedBy":"danyow","lastUpdatedAt":1648649947,"formattedLastUpdatedAt":"2022/3/30","frontMatter":{"id":"placeholder","title":"Placeholder","slug":"/"},"sidebar":"docs"}],"sidebars":{"docs":[{"type":"doc","id":"placeholder"}],"unity":[],"lua":[]},"mainDocId":"placeholder","categoryGeneratedIndices":[]}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"All our posts","blogPosts":[{"id":"/2021/archwsl","metadata":{"permalink":"/blog/2021/archwsl","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2021/archwsl.mdx","title":"\u5b89\u88c5ArchWSL","description":"\u5148\u51b3\u6761\u4ef6","date":"2022-03-15T09:42:42.000Z","formattedDate":"2022\u5e743\u670815\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":1.165,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u5b89\u88c5ArchWSL","tags":["Mac","\u7b14\u8bb0"],"comments":true,"date":"2022-03-15 09:42:42 +0800","published":true},"nextItem":{"title":"\u7b14\u8bb0","permalink":"/blog/2021/note"}},"content":"## \u5148\u51b3\u6761\u4ef6\\n\\n- Windows 10 1709 \u79cb\u5b63\u521b\u610f\u8005\u66f4\u65b0\u6216\u8005\u66f4\u9ad8\u7248\u672c\\n- \u5f00\u542f `\u9002\u7528\u4e8e Linux \u7684 Windows \u5b50\u7cfb\u7edf` \u529f\u80fd\\n- \u5176\u4e2d\u6709\u4e00\u6b65\u6bd4\u8f83\u91cd\u8981: [`\u4e0b\u8f7d Linux \u5185\u6838\u66f4\u65b0\u5305`][Linux-Update]\\n\\n## \u5b89\u88c5 `ArchWSL`\\n\\n1. `scoop bucket add extras`\\n2. ` scoop install archwsl`\\n\\n## \u542f\u52a8\u5e76\u521d\u59cb\u5316\\n\\n### \u8bbe\u7f6e `Root` \u5bc6\u7801\\n\\n```shell\\n> arch.exe\\n[root@danyow]# passwd\\n```\\n\\n### \u8bbe\u7f6e\u9ed8\u8ba4\u7528\u6237\\n```shell\\n[root@danyow]# echo \\"%wheel ALL=(ALL) ALL\\" > /etc/sudoers.d/wheel\\n[root@danyow]# useradd -m -G wheel -s /bin/bash danyow\\n[root@danyow]# passwd danyow\\n[root@danyow]# exit\\n> arch.exe config --default-user danyow\\n```\\n\\n#### \u91cd\u542f `LxssManager` (\u53ef\u9009)\\n\\n```shell\\nnet stop lxssmanager | net start lxssmanager\\n```\\n\\n#### \u521d\u59cb\u5316\u5bc6\u94a5\u73af `keyring`\\n\\n```shell\\n> arch.exe\\n[danyow@danyow]$ sudo pacman-key --init\\n\\n[danyow@danyow]$ sudo pacman-key --populate\\n\\n[danyow@danyow]$ sudo pacman -Syy archlinux-keyring\\n```\\n\\n#### \u6dfb\u52a0\u6e90 `aur`\\n\\n```shell\\nsudo vim /etc/pacman.conf\\n### \u52a0\u5165\u5185\u5bb9\\n[archlinuxcn]\\nServer = https://repo.archlinuxcn.org/$arch\\n### \u7ed3\u675f\\nsudo pacman -Syy && sudo pacman -S archlinuxcn-keyring && sudo pacman -S yay\\n```\\n\\n\\n#### \u5b89\u88c5 `glibc-linux4`\\n\\n`sudo pacman -S glibc-linux4` or `yay -S glibc-linux4`\\n\\n#### \u5b89\u88c5 `fakeroot-tcp`\\n\\n`yay -S fakeroot-tcp`\\n\\n#### \u5b89\u88c5 `make` `gcc` `cargo`\\n\\n`yay -S make gcc cargo`\\n\\n#### \u5b89\u88c5 `genie-systemd-git`\\n\\n`yay -S genie-systemd-git`\\n\\n[Linux-Update]: https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package"},{"id":"/2021/note","metadata":{"permalink":"/blog/2021/note","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2021/note.mdx","title":"\u7b14\u8bb0","description":"Windows","date":"2022-03-15T09:42:42.000Z","formattedDate":"2022\u5e743\u670815\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":0.46,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u7b14\u8bb0","tags":["Mac","\u7b14\u8bb0"],"comments":true,"date":"2022-03-15 09:42:42 +0800","published":true},"prevItem":{"title":"\u5b89\u88c5ArchWSL","permalink":"/blog/2021/archwsl"},"nextItem":{"title":"Scoop\u7684\u5b89\u88c5","permalink":"/blog/2019/scoop"}},"content":"## Windows\\n\\n### \u67e5\u770b\u7aef\u53e3\u88ab\u5360\u7528\\n\\n`netstat \u2013ano`\\n\\n`netstat`\\n\\n\\n[//]: # (---)\\n\\n[//]: # (title: Hello world!)\\n\\n[//]: # (authors: danyow)\\n\\n[//]: # (tags: [general, personal page])\\n\\n[//]: # (---)\\n\\n[//]: # ()\\n[//]: # (```text)\\n\\n[//]: # (Hello world!)\\n\\n[//]: # (```)\\n\\n[//]: # ()\\n[//]: # (It was hard getting all these done, but now this webpage is all set \u2014 docusaurus is configured, auto CI is up, we have an organization account on GitHub to host this site... I\'d say we are good to go!)"},{"id":"/2019/scoop","metadata":{"permalink":"/blog/2019/scoop","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/scoop.mdx","title":"Scoop\u7684\u5b89\u88c5","description":"Title: \u76ee\u524d\u6682\u4e0d\u63a8\u8350, \u56e0\u4e3a\u81ea\u5e26\u7684\u8f6f\u4ef6\u8f83\u5c11, \u800c\u4e14\u66f4\u591a\u7684\u9700\u8981\u4f7f\u7528\u5230\u522b\u4eba\u7684 Bucket .","date":"2020-06-14T14:55:00.000Z","formattedDate":"2020\u5e746\u670814\u65e5","tags":[{"label":"Windows","permalink":"/blog/tags/windows"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"scoop","permalink":"/blog/tags/scoop"}],"readingTime":2.6,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Scoop\u7684\u5b89\u88c5","tags":["Windows","\u7b14\u8bb0","scoop"],"comments":true,"date":"2020/6/14 14:55:00 +0800","published":true},"prevItem":{"title":"\u7b14\u8bb0","permalink":"/blog/2021/note"},"nextItem":{"title":"\u90e8\u7f72\u65b0\u5b89\u88c5\u7684centos\u670d\u52a1\u5668","permalink":"/blog/2020/server"}},"content":"Title: ~~\u76ee\u524d\u6682\u4e0d\u63a8\u8350, \u56e0\u4e3a\u81ea\u5e26\u7684\u8f6f\u4ef6\u8f83\u5c11, \u800c\u4e14\u66f4\u591a\u7684\u9700\u8981\u4f7f\u7528\u5230\u522b\u4eba\u7684 *Bucket* .~~\\n\\n\u53cd\u7701\u4e00\u4e0b\uff0c\u6bd4\u8d77\u4e4b\u524d\u7684 _Chocolatey_ \u6765\u8bf4\uff0c\u8fd8\u662f\u63a8\u8350\u7684\uff0c\u56e0\u4e3a\u5b83\u66f4\u52a0\u9002\u5408\u7a0b\u5e8f\u5458\u548c\u5177\u6709\u9ad8\u5ea6\u5f3a\u8feb\u75c7\u7684\u60a3\u8005\u3002\\n\\n> \u4f18\u70b9\uff1a\\n\\n1. \u73af\u5883\u548c\u540e\u7eed\u5b89\u88c5\u7684\u8f6f\u4ef6\u90fd\u53ef\u4ee5\u4e0d\u653e\u5728**C**\u76d8\\n2. \u6269\u5c55\u5305\u4e5f\u6bd4\u8f83\u4e30\u5bcc\\n\\n> \u7f3a\u70b9\uff1a\\n\\n1. \u5982\u679c\u7f51\u901f\u6162\u7684\u60c5\u51b5\u4e0b\uff08\u56e0\u4e3a\u4f7f\u7528\u5230\u4e86 _github_ \uff09\u5b89\u88c5\u67d0\u4e2a\u5305\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u534a\u5929\u5b89\u88c5\u4e0d\u4e0a\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\u53d6\u6d88\u7684\u8bdd\u4f1a\u4f7f\u5f97 _scoop_ \u8bef\u4ee5\u4e3a\u5b89\u88c5\u5b8c\u6210\uff0c\u8fd9\u65f6\u9700\u8981\u5378\u8f7d\u3002\\n2. \u540e\u7eed\u4f9d\u636e\u4f7f\u7528\u60c5\u51b5\u8865\u5145\\n\\n## Scoop\u7684\u5b89\u88c5\\n\\n1. _PowerShell_ \u4e0b\u8fd0\u884c\u4e0b\u8ff0\u5185\u5bb9\uff0c\u786e\u4fdd _PowerShell_ \u5141\u8bb8\u53ef\u4ee5\u6267\u884c\u672c\u5730\u811a\u672c\u3002\\n\\n    `Set-ExecutionPolicy RemoteSigned -scope CurrentUser`\\n\\n2. \u7136\u540e\u5b89\u88c5 _Scoop_ \uff0c\u770b\u7f51\u901f\u6765\u7684\u3002\\n\\n    `Invoke-Expression (New-Object System.Net.WebClient).DownloadString(\'https://get.scoop.sh\')`\\n\\n    or \u66f4\u77ed\u7684\\n\\n    `iwr -useb get.scoop.sh | iex`\\n\\n3. \u8fdb\u5165\u6876\u5b50\u73af\u5883\u51c6\u5907\u9636\u6bb5\u3002\u5373\u6dfb\u52a0 _Bucket_ \u5e93\u3002\u4f46\u7531\u4e8e _Bucket_ \u662f\u4f9d\u6258\u4e8e _Github_ \uff0c\u6240\u4ee5\u8981\u5148\u5b89\u88c5 _git_ \u73af\u5883\\n\\n    `scoop install git`\\n\\n\u5982\u679c\u4f60\u6ca1\u6709 7zip \u7684\u8bdd\uff0c\u4f1a\u987a\u624b\u7ed9\u4f60\u5b89\u88c5git\u7684\u4f9d\u8d56\u3002\\n\\n```txt\\n  7zip 21.06 [main]\\n  adb 31.0.3 [main]\\n  adopt8-hotspot 8u292-b10 [java]\\n  android-sdk 4333796 [extras]\\n  ant 1.10.12 [main]\\n  archwsl 21.8.28.0 [extras]\\n  beyondcompare-zh-cn 4.4.0.25886 [dorado]\\n  brotli 1.0.9_6 [main]\\n  cacert 2021-10-26 [main]\\n  ccleaner 5.87.9306 [extras]\\n  clash-for-windows 0.19.1 [dorado]\\n  cmake 3.22.1 [main]\\n  codeblocks-mingw 20.03 [extras]\\n  curl 7.80.0 [main]\\n  dark 3.11.2 [main]\\n  dingtalk 6.3.5.10278702 [dorado]\\n  DirectX 9.29.1974.1-June2010 [Scoop-Ash258]\\n  diskgenius 5.4.2.1239 [extras]\\n  docker-machine 0.16.2 [silver886]\\n  docker-nightly nightly-20211121 [main]\\n  dotnet-sdk 6.0.100 [main]\\n  EpicGamesLauncher 13.0.0 [dorado]\\n  gcc 11.2.0-9.0.0-r3 [main]\\n  git 2.34.1.windows.1 [main]\\n  github 2.9.5 [extras]\\n  gradle-bin 7.3.1 [main]\\n  innounp 0.50 [main]\\n  ipfs-desktop 0.17.0 [extras]\\n  jetbrains-toolbox 1.22.10774 [extras]\\n  k2pdfopt 2.53 [seu]\\n  lcow v4.14.35-v0.3.9 [main]\\n  lessmsi 1.10.0 [main]\\n  meshlab 2021.10 [extras]\\n  microsoftedge  *failed*\\n  mls-software-openssh 8.8p1-1 [main]\\n  mongodb 5.2.0-rc0 [main]\\n  motrix 1.6.11 [extras]\\n  msys2 2021-11-30 [main]\\n  nginx 1.21.4 [main]\\n  nodejs-lts 16.13.1 [main]\\n  nuget 6.0.0 [main]\\n  nuwen-mingw-gcc 11.2.0-18.0 [dorado]\\n  nvidia-display-driver-dch-np 7 *failed*\\n  obs-studio 27.1.3 [extras]\\n  office-tool-plus 8.1.5.15 [Master-Hash]\\n  openjdk 17.0.1-12 [java]\\n  openssl 3.0.0 [main]\\n  oraclejdk8 8u291 [iszy]\\n  oraclejre8 8u311 [java]\\n  poedit 3.0.6387 [extras]\\n  potplayer 211118 [extras]\\n  powertoys-np 0.51.1 [nonportable]\\n  premake 5.0.0-beta1 [main]\\n  protobuf 3.19.1 [extras]\\n  pxcook 3.9.960.202101211055 [dorado]\\n  python 3.10.1 [main]\\n  python27 2.7.18 [versions]\\n  RevokeMsgPatcher 1.1 [Darkatse]\\n  rime-weasel-np 0.14.3.0 [scoop-jingyu9575]\\n  ruby 3.0.3-1 [main]\\n  rufus 3.17 [extras]\\n  Sejda-pdf 7.3.7 [extras]\\n  SogouPinyin-Portable 0.3 [scoop-zapps]\\n  sourcetree 3.4.7 [extras]\\n  steam nightly-20200928 [extras]\\n  sudo 0.2020.01.26 [main]\\n  telnet msys-inetutils-1.7-1 [main]\\n  todesk 4.1.0 [dorado]\\n  TranslucentTb 2020.2 [dorado]\\n  VcXsrv 1.20.9.0 [extras]\\n  virtualbox-np 6.1.30 [nonportable]\\n  vscode 1.63.0 [extras]\\n  wechat nightly-20200613 [dorado]\\n  wget 1.21.2 [main]\\n  winscp 5.19.5 [extras]\\n  Writage 2.7.2 [cvp]\\n  yarn 1.22.15 [main]\\n```"},{"id":"/2020/server","metadata":{"permalink":"/blog/2020/server","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2020/server.mdx","title":"\u90e8\u7f72\u65b0\u5b89\u88c5\u7684centos\u670d\u52a1\u5668","description":"\u670d\u52a1\u5668\u94fe\u63a5\u8d85\u65f6\u89e3\u51b3","date":"2020-01-28T09:42:42.000Z","formattedDate":"2020\u5e741\u670828\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":2.47,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u90e8\u7f72\u65b0\u5b89\u88c5\u7684centos\u670d\u52a1\u5668","tags":["Mac","\u7b14\u8bb0"],"comments":true,"date":"2020-01-28 09:42:42 +0800","published":true},"prevItem":{"title":"Scoop\u7684\u5b89\u88c5","permalink":"/blog/2019/scoop"},"nextItem":{"title":"Rust","permalink":"/blog/2019/rust"}},"content":"## \u670d\u52a1\u5668\u94fe\u63a5\u8d85\u65f6\u89e3\u51b3\\n\\n`vim /etc/ssh/sshd_config` \u4fee\u6539\u91cc\u9762\u7684\u4e24\u4e2a\u53c2\u6570\\n\\n```config\\nClientAliveInterval 60\\nClientAliveCountMax 60\\n```\\n\\n\u7136\u540e\u91cd\u542f`ssh`\\n\\n`systemctl restart ssh`\\n\\n## \u51fa\u73b0\u62a5\u9519\\n\\n\u5185\u5bb9`Failed to set locale, defaulting to C.UTF-8`\\n\\n\u6267\u884c`echo \\"export LC_ALL=en_US.UTF-8\\"  >>  /etc/profile`\\n\\n## \u5b89\u88c5`docker`\\n\\n1. \u5378\u8f7d\u65e7\u7684\u7248\u672c\\n\\n    ```shell\\n    sudo yum remove docker \\\\\\n                    docker-client \\\\\\n                    docker-client-latest \\\\\\n                    docker-common \\\\\\n                    docker-latest \\\\\\n                    docker-latest-logrotate \\\\\\n                    docker-logrotate \\\\\\n                    docker-engine\\n    ```\\n\\n2. \u5b89\u88c5\u4f9d\u8d56\\n\\n    `sudo yum install -y yum-utils  device-mapper-persistent-data  lvm2`\\n    `sudo yum-config-manager  --add-repo   https://download.docker.com/linux/centos/docker-ce.repo`\\n    `sudo yum install docker-ce docker-ce-cli containerd.io`\\n\\n3. \u66f4\u65b0containerd.io\\n\\n    `dnf install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm`\\n\\n4. \u5b89\u88c5\\n\\n    `sudo yum install docker-ce docker-ce-cli containerd.io`\\n\\n5. \u542f\u52a8docker\\n\\n    `sudo systemctl start docker`\\n\\n## \u521b\u5efa `Dockerfile`\\n\\n1. \u521b\u5efa `docker/Dockerfile`\\n\\n    `mkdir docker && cd docker && vim Dockerfile`\\n\\n2. \u52a0\u5165\u4e0b\u9762\u5185\u5bb9\\n\\n    ```docker\\n    FROM jenkins/jenkins:lts\\n    USER root\\n    WORKDIR /dotnet\\n    RUN wget -O dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/c4b503d6-2f41-4908-b634-270a0a1dcfca/c5a20e42868a48a2cd1ae27cf038044c/dotnet-sdk-3.1.101-linux-x64.tar.gz\\n    RUN tar zxf dotnet.tar.gz -C ./\\n    RUN rm -rf dotnet.tar.gz\\n    ENV PATH=\\"${PATH}:/dotnet:/var/jenkins_home/.dotnet/tools\\"\\n    ENV DOTNET_ROOT=\\"/dotnet\\"\\n    RUN apt update -y\\n    RUN apt install icu-devtools vim zip unzip -y\\n    RUN usermod -a -G root jenkins\\n    USER jenkins\\n    ```\\n\\n    1. \u8fd9\u4e2aDocker\u955c\u50cf\u57fa\u4e8ejenkins\\n    2. \u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u4e3aroot\uff0c\u56e0\u4e3a\u540e\u9762\u5b89\u88c5\u9700\u8981\u4f7f\u7528root\\n    3. \u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e3adotnet\\n    4. \u4e0b\u8f7ddotnet SDK\u5305\uff0c\u4fdd\u5b58\u4e3adotnet.tar.gz\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\u4e0b\u8f7d\u6b63\u786e\u7248\u672c\u7684SDK\uff0c\u53ef\u524d\u5f80\u5fae\u8f6f\u5b98\u65b9\u7f51\u7ad9\u83b7\u53d6\u4e0b\u8f7d\u94fe\u63a5\uff1ahttps://dotnet.microsoft.com/download\\n    5. \u89e3\u538bdotnet SDK\u5230\u5f53\u524d\u76ee\u5f55\uff0c\u5373/dotnet\u76ee\u5f55\\n    6. \u5220\u9664dotnet SDK\u5305\\n    7. \u628adotnet\u76ee\u5f55\u548cdotnet tools\u76ee\u5f55\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cfPATH\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528dotnet\u547d\u4ee4\u4e86\\n    8. \u8bbe\u7f6eDOTNET_ROOT\u53d8\u91cf\\n    9. \u66f4\u65b0\u6e90\\n    10. \u5b89\u88c5\u4e00\u4e9b\u5fc5\u9700\u7684\uff0c\u5e38\u7528\u7684\u5de5\u5177\u5305\uff0c\u5176\u4e2dicu-devtools\u662f\u8fd0\u884cdotnet\u9700\u8981\u7684\\n    11. \u4fee\u6539jenkins\u7528\u6237\u5230root\u9644\u52a0\u7ec4\\n    12. \u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u4e3ajenkins\\n3. \u751f\u6210\u955c\u50cf\\n\\n    `docker build -t jenkins:dotnet .`\\n\\n4. \u67e5\u770b\u6240\u6709\u955c\u50cf\\n\\n    `docker image`\\n\\n5. \u8fd0\u884c`docker`\u5b9e\u4f8b\\n\\n    `docker run -p 8080:8080 -p 50000:50000 --name jenkins jenkins:dotnet`\\n\\n6. \u83b7\u53d6\u5bc6\u7801\u548c\u8bbf\u95ee\u94fe\u63a5\\n\\n    1. \u81ea\u5b9a\u4e49\u5b89\u88c5\\n    2. \u8865\u5145\u5b89\u88c5`GitHub`\u548c`Publish Over SSH`\\n\\n7. \u6dfb\u52a0\u7f16\u8bd1\u6267\u884c\u811a\u672c\\n\\n    `dotnet publish`\\n\\n8. \u6784\u5efa\\n\\n9. \u6dfb\u52a0 `github webhook`\\n\\n## \u76f4\u63a5\u90e8\u7f72\u9879\u76ee\\n\\n1. \u5b89\u88c5`git`\\n\\n    `yum install git`\\n\\n2. \u514b\u9686\\n3. `docker build -t dotnet .`\\n4. `docker run -d -p 8080:80 dotnet`"},{"id":"/2019/rust","metadata":{"permalink":"/blog/2019/rust","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/rust.mdx","title":"Rust","description":"Title: Mac \u4e0b\u5b66\u4e60\u4f7f\u7528 Rust","date":"2019-12-04T22:39:06.000Z","formattedDate":"2019\u5e7412\u67084\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"Rust","permalink":"/blog/tags/rust"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":35.855,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Rust","tags":["Mac","Rust","\u7b14\u8bb0"],"comments":true,"date":"2019-12-04 22:39:06 +0800","published":true},"prevItem":{"title":"\u90e8\u7f72\u65b0\u5b89\u88c5\u7684centos\u670d\u52a1\u5668","permalink":"/blog/2020/server"},"nextItem":{"title":"mac\u4e0a\u542f\u52a8\u6587\u4ef6\u670d\u52a1\u5668","permalink":"/blog/2019/mac"}},"content":"Title: Mac \u4e0b\u5b66\u4e60\u4f7f\u7528 *Rust*\\n\\n## \u5b89\u88c5\\n\\n### brew \u5b89\u88c5\\n\\n\u6d4b\u8bd5\u4e4b\u540e, \u73af\u5883\u6709\u5f88\u591a\u5185\u5bb9\u6709\u6ca1\u5b89\u88c5\u4e0a, \u4f30\u8ba1\u4e5f\u662f\u6ca1\u6709\u914d\u7f6e\u73af\u5883\u7684\u539f\u56e0\\n\\n### \u5b98\u7f51\u65b9\u6cd5\\n\\n1. `curl --proto \'=https\' --tlsv1.2 -sSf https://sh.rustup.rs | sh`\\n\\n2. \u5bfc\u5165\u73af\u5883\u53c2\u6570 `export PATH=\\"$PATH:$HOME/.cargo/bin\\"`\\n\\n3. `rustc --version`\\n\\n## \u5165\u95e8\\n\\n### rustc \u7f16\u8bd1\\n\\n\u968f\u4fbf\u5199\u4e00\u4e2a `main.rs` \u6587\u4ef6, \u7136\u540e\u952e\u5165\u4e0b\u8ff0\u5185\u5bb9.\\n\\n```rust\\nfn main() {\\n    println!(\\"Hello, world!\\");\\n}\\n```\\n\\n\u7136\u540e\u6267\u884c`rustc main.rs`\u5f97\u5230\u7f16\u8bd1\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6`./main`\u5373\u53ef\u770b\u5230\u6253\u5370\\n\\n### Cargo\\n\\n\u5982\u679c\u5b89\u88c5\u7684\u65f6\u5019\u7528\u7684\u662f\u5b98\u7f51\u7684\u65b9\u6cd5\u7684\u8bdd, \u662f\u4f1a\u8ba9\u4f60\u9009\u62e9\u7b2c\u51e0\u4e2a\u5b89\u88c5\u65b9\u5f0f, \u6211\u4eec\u901a\u5e38\u9009\u62e9\u7b2c\u4e00\u4e2a\u91c7\u7528\u9ed8\u8ba4\u7684\u65b9\u5f0f, \u8fd9\u6837\u5c31\u4f1a\u628aCargo\u6240\u9700\u8981\u7684\u4e5f\u5c31\u4e00\u8d77\u4e0b\u8f7d\u5b89\u88c5\u4e0b\u6765\u4e86. \u5728\u5230\u6211\u4eec\u914d\u7f6e\u73af\u5883\u8f93\u5165\u7684`PATH`\u4e5f\u662f\u4e00\u6837\\n\\n1. \u65b0\u5efa\u9879\u76ee\\n   `cargo new hello_cargo`\\n\\n2. \u7f16\u8bd1\u9879\u76ee\\n   `cargo build` or `cargo build --release`\\n\\n3. \u8fd0\u884c\u9879\u76ee\\n   `cargo run`\\n\\n### \u7f16\u5199\u731c\u8c1c\u6e38\u620f\\n\\n1. \u76f4\u63a5\u7f16\u5199\\n\\n    ```rust\\n    use std::io;    // \u4f7f\u7528\u6807\u51c6\u5e93\u7684io\\n\\n    fn main() {\\n        println!(\\"Guess the number!\\");\\n\\n        println!(\\"Please input your guess.\\");\\n\\n        let mut guess = String::new(); // \u5b9a\u4e49\u4e00\u4e2a\u53ef\u53d8\u7684\u53d8\u91cf\\n\\n        io::stdin().read_line(&mut guess)   // \u6362\u884c\u7684\u539f\u56e0\u53ea\u662f\u56e0\u4e3a\u8fc7\u957f\u4e86\\n            .expect(\\"Failed to read line\\"); // \u5904\u7406\u53ef\u80fd\u7684\u62a5\u9519\\n\\n        println!(\\"You guessed: {}\\", guess);\\n    }\\n    ```\\n\\n2. \u52a0\u5165`rand`\u5e93\\n\\n    \u5728`Cargo.toml`\u6587\u4ef6\u4e2d\u52a0\u5165\\n\\n    ```toml\\n    [dependencies]\\n\\n    rand = \\"0.3.14\\"\\n    ```\\n\\n    \u7136\u540e\u7f16\u8bd1`cargo build`\u6216\u8005\u662f`cargo run`\u53ef\u80fd\u4f1a\u9047\u5230\\n    `Blocking waiting for file lock on package cache`\\n    \u5982\u679c\u6267\u884c\u5f97\u662f`cargo update`\u5c31\u4e0d\u4f1a\u9047\u5230`Cargo.lock`\u6587\u4ef6\u4e86\\n\\n    \u8fd9\u91cc\u6307\u5b9a\u4e86`0.3.14`\u7248\u672c\u5e76\u4e0d\u662f\u771f\u7684\u5c31\u53ea\u4f7f\u7528\u8be5\u7248\u672c, \u800c\u662f\u4f1a\u4f7f\u7528\u517c\u5bb9\u8be5\u7248\u672c\u7684\u66f4\u9ad8\u7248\u672c\\n\\n    ```rust\\n    use std::io;\\n    use rand::Rng;  // \u5bfc\u5165 \u968f\u673a\u5e93\\n\\n    fn main() {\\n        println!(\\"Guess the number!\\");\\n\\n        let secret_number = rand::thread_rng().gen_range(1, 101);   // \u751f\u6210\u4e00\u4e2a 0 ~ 100 \u7684\u968f\u673a\u6570\\n\\n        println!(\\"The secret number is: {}\\", secret_number);    // \u6d4b\u8bd5\u6253\u5370\\n\\n        println!(\\"Please input your guess.\\");\\n\\n        let mut guess = String::new();\\n\\n        io::stdin().read_line(&mut guess)\\n            .expect(\\"Failed to read line\\");\\n\\n        // trim \u7684\u662f\u5c31\u662f\u5220\u9664\u67d0\u4e9b\u4e1c\u897f \u7531\u4e8e \u952e\u5165\u7684\u65f6\u5019\u6700\u540e\u9762\u4f1a\u6572\u51fb\u56de\u8f66 \u5bfc\u81f4\\\\n\u4f1a\u52a0\u5165\u8fdb\u6765\\n        let guess: u32 = guess.trim().parse()   // \u7528 \u540c\u4e00\u4e2a\u53d8\u91cf\u540d \u53bb\u8986\u76d6 guess \u5e76\u8f6c\u6210 u32\u7c7b\u578b\\n            .expect(\\"Please type a number!\\");   // \u8f6c\u6362\u7c7b\u578b\u4e5f\u662f\u6709\u53ef\u80fd\u62a5\u9519\u7684\\n\\n        println!(\\"You guessed: {}\\", guess);\\n\\n        match guess.cmp(&secret_number) {\\n            Ordering::Less => println!(\\"Too small!\\"),\\n            Ordering::Greater => println!(\\"Too big!\\"),\\n            Ordering::Equal => println!(\\"You win!\\"),\\n        }\\n    }\\n    ```\\n\\n3. \u52a0\u5165\u5faa\u73af\\n\\n    ```rust\\n    // --snip--\\n\\n        println!(\\"The secret number is: {}\\", secret_number);\\n\\n        loop {  // \u52a0\u5165\u5faa\u73af\\n            println!(\\"Please input your guess.\\");\\n\\n            // --snip--\\n\\n            match guess.cmp(&secret_number) {\\n                Ordering::Less => println!(\\"Too small!\\"),\\n                Ordering::Greater => println!(\\"Too big!\\"),\\n                Ordering::Equal => {\\n                    println!(\\"You win!\\");\\n                    break;  // \u5728\u8fd9\u91cc\u9000\u51fa\u5faa\u73af\\n                },\\n            }\\n        }\\n    }\\n    ```\\n\\n4. \u5904\u7406\u975e\u6570\u5b57\u7684\u8f93\u5165\\n\\n    ```rust\\n    // --snip--\\n\\n    io::stdin().read_line(&mut guess)\\n        .expect(\\"Failed to read line\\");\\n\\n    // \u52a0\u5165match\u6765\u5bf9\u62a5\u9519\u7684 continue\u6765\u5904\u7406\u975e\u6570\u5b57\u7684\u8f93\u5165\\n    let guess: u32 = match guess.trim().parse() {\\n        Ok(num) => num,\\n        Err(_) => continue,\\n    };\\n\\n    println!(\\"You guessed: {}\\", guess);\\n\\n    // --snip--\\n    ```\\n\\n### \u901a\u7528\u7f16\u7a0b\u6982\u5ff5\\n\\n#### \u53d8\u91cf\u548c\u53ef\u53d8\u6027\\n\\n1. \u8fd9\u91cc\u7684\u53d8\u91cf\u4e0d\u662f\u6307\u80fd\u53d8\u7684\u91cf, \u800c\u662f\u4e00\u4e2a\u5b9a\u4e49, \u4f46\u53ea\u8981\u8d4b\u4e88\u4e86 `mut` \u624d\u662f\u771f\u7684\u53ef\u4ee5\u53d8\\n2. \u5e38\u91cf\u7684\u547d\u540d\u89c4\u5219 \u5355\u8bcd\u5168\u5927\u5199 \u4e0b\u5212\u7ebf\u5206\u9694 \u5c31\u8fdeint `100,000` \u90fd\u53ef\u4ee5\u8868\u793a\u4e3a `100_000`\\n3. \u53d8\u91cf\u53ef\u4ee5\u88ab\u91cd\u590d\u58f0\u660e\u5e76\u8986\u76d6\u539f\u503c \u4f46\u4e0d\u80fd\u6539\u53d8\u539f\u6709\u6570\u636e\u7c7b\u578b \u4e5f\u5c31\u662f\u4e0d\u80fd string => int\\n\\n#### \u8d44\u6599\u7c7b\u578b\\n\\n1. \u7f16\u8bd1\u65f6\u9700\u8981\u5e2e\u5fd9\u786e\u5b9a\u7c7b\u578b\\n\\n    ```rust\\n    let guess: u32 = \\"42\\".parse().expect(\\"Not a number!\\");\\n    ```\\n\\n2. \u6574\u578b\u7684\u8868\u793a\u5f62\u5f0f\u6709\\n\\n    ```rust\\n    /*\\n        \u5c0f\u6570        98_222\\n        \u5341\u516d        0xff\\n        \u516b\u8fdb        0o77\\n        \u4e8c\u5143        0b1111_0000\\n        \u5b57\u8282\uff08u8\u4ec5\uff09 b\'A\'\\n    */\\n    ```\\n\\n3. bool\u7c7b\u578b\u5c31\u53ea\u6709\u771f\u5047 \u4e0d\u4f1a\u9ed8\u8ba4\u5e2e\u5fd9\u8f6c\u6362\\n4. \u5143\u7ec4\\n\\n    ```rust\\n    fn main() {\\n        let x: (i32, f64, u8) = (500, 6.4, 1);\\n        let five_hundred = x.0;\\n        let six_point_four = x.1;\\n        let one = x.2;\\n    }\\n    ```\\n\\n5. \u6570\u7ec4\\n\\n    ```rust\\n    fn main() {\\n        let c: [i32; 5] = [1, 2, 3, 4, 5];\\n        let b = [3; 5];\\n        let a = [1, 2, 3, 4, 5];\\n        let first = a[0];\\n        let second = a[1];\\n    }\\n    ```\\n\\n#### \u51fd\u6570\\n\\n1. \u4e0d\u5e26;\u8868\u793a\u8fd4\u56de\u503c\\n2. \u6307\u5b9a\u8fd4\u56de\u503c\\n\\n    ```rust\\n    fn plus_one(x: i32) -> i32 {\\n        x + 1\\n    }\\n    ```\\n\\n#### \u6ce8\u91ca\\n\\n\u8bb2\u89e3Crates.io\u7684\u65f6\u5019\u624d\u8bf4\\n\\n#### \u63a7\u5236\u6d41\\n\\n1. \u4f7f\u7528`if`\u7684`let`\u8bed\u53e5\\n\\n   ```rust\\n    fn main() {\\n        let condition = true;\\n        let number = if condition {\\n            5\\n        } else {\\n            6\\n        };\\n\\n        println!(\\"The value of number is: {}\\", number);\\n    }\\n   ```\\n\\n2. \u4ece\u5faa\u73af\u91cc\u9762\u8fd4\u56de\u503c\u51fa\u6765\\n\\n    ```rust\\n    fn main() {\\n        let mut counter = 0;\\n\\n        let result = loop {\\n            counter += 1;\\n\\n            if counter == 10 {\\n                break counter * 2;// \u6211\u5728\u60f3 \u8fd9\u91cc\u6ca1\u6709; \u4e3a\u4ec0\u4e48\u4e5f\u80fd\u6709\u503c\u8fd4\u56de\u51fa\u53bb\u5462?\\n            }\\n        };\\n\\n        println!(\\"The result is {}\\", result);\\n    }\\n    ```\\n\\n3. \u904d\u5386\\n\\n    ```rust\\n    fn main() {\\n        let a = [10, 20, 30, 40, 50];\\n\\n        // \u65b9\u6cd51\\n        for element in a.iter() {\\n            println!(\\"the value is: {}\\", element);\\n        }\\n        // \u65b9\u6cd52\\n        for number in (1..4).rev() {\\n            println!(\\"{}!\\", number);\\n        }\\n        // \u65b9\u6cd53\\n        while index < 5 {\\n            println!(\\"the value is: {}\\", a[index]);\\n            index += 1;\\n        }\\n    }\\n    ```\\n\\n### \u6240\u6709\u6743\\n\\n#### \u4ec0\u4e48\u662f\u6240\u6709\u6743\\n\\n1. \u6bcf\u4e2a\u5185\u5b58\u53ea\u80fd\u88ab\u6240\u6709\u4e00\u6b21, \u4e00\u65e6\u88ab\u63a5\u7ba1\u4e86\u5c31\u6ca1\u4e86.\\n\\n    ```rust\\n    // \u4e0b\u8ff0\u4ee3\u7801\u5c31\u4f1a\u62a5\u9519\\n    let s1 = String::from(\\"hello\\");\\n    let s2 = s1;\\n\\n    println!(\\"{}, world!\\", s1);\\n\\n    /*\\n        error[E0382]: use of moved value: `s1`\\n        --\x3e src/main.rs:5:28\\n        |\\n        3 |     let s2 = s1;\\n        |         -- value moved here\\n        4 |\\n        5 |     println!(\\"{}, world!\\", s1);\\n        |                            ^^ value used here after move\\n        |\\n        = note: move occurs because `s1` has type `std::string::String`, which does\\n        not implement the `Copy` trait\\n    */\\n    ```\\n\\n2. \u5982\u679c\u60f3\u8981\u62ff\u5230\u4e00\u6837\u7684\u5185\u5bb9\u7684\u8bdd \u4f7f\u7528 `clone`\\n3. \u5bf9\u57fa\u7840\u6570\u636e\u7c7b\u578b\u64cd\u4f5c\u7684\u662f \u4f1a\u81ea\u52a8\u8c03\u7528 `copy`, \u7531\u4e8e\u90fd\u662f\u5728\u6808\u533a, \u4e0d\u4f1a\u4ea7\u751f\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\\n4. \u5982\u679c\u76f4\u63a5\u628a\u67d0\u4e2a\u53d8\u91cf\u4ea4\u4ed8\u7ed9\u67d0\u4e2a\u51fd\u6570, \u800c\u8be5\u51fd\u6570\u6ca1\u6709\u79fb\u4ea4\u6240\u6709\u6743\u51fa\u6765\u7684\u8bdd, \u4ed6\u5c06\u4e0d\u80fd\u518d\u88ab\u4f7f\u7528\u4e86\\n\\n### \u5f15\u7528\u548c\u501f\u9605\\n\\n1. `&` \u8868\u793a\u5f15\u7528\u8be5\u53c2\u6570, \u4f46\u4e0d\u80fd\u8fdb\u884c\u53d8\u66f4, \u5982\u679c\u8981\u53d8\u66f4\u7684\u8bdd \u9700\u8981 `&mut`\\n\\n    ```rust\\n    fn main() {\\n        let mut s = String::from(\\"hello\\");\\n\\n        change(&mut s);\\n    }\\n\\n    fn change(some_string: &mut String) {\\n        some_string.push_str(\\", world\\");\\n    }\\n    ```\\n\\n2. \u4e0d\u80fd\u6709\u4e24\u6b21\u53ef\u53d8\u5f15\u7528, \u56e0\u4e3a\u4e0d\u77e5\u9053\u4f9d\u636e\u8c01\u7684\u6539\u53d8\\n3. \u540c\u4e0a, \u5982\u679c\u8fd8\u5b58\u5728\u591a\u4e2a\u540e\u7eed\u4f9d\u65e7\u4f1a\u4f7f\u7528\u7684\u4e0d\u53ef\u53d8\u5f15\u7528\u65f6\u5019, \u4e0d\u80fd\u521b\u5efa\u53ef\u53d8\u5f15\u7528, \u56e0\u4e3a\u4e0d\u53ef\u53d8\u7684\u5f15\u7528\u662f\u4e0d\u77e5\u9053\u53ef\u53d8\u5f15\u7528\u7684\u5b58\u5728\u7684, \u4f46\u5982\u679c\u5728\u4f7f\u7528\u540e\u5e76\u4e14\u540e\u7eed\u4e0d\u518d\u4f7f\u7528\u4e86\u4e4b\u540e, \u5c31\u5141\u8bb8\u521b\u5efa\u53ef\u53d8\u5f15\u7528\u4e86\\n\\n    ```rust\\n    let mut s = String::from(\\"hello\\");\\n\\n    let r1 = &s; // no problem\\n    let r2 = &s; // no problem\\n    println!(\\"{} and {}\\", r1, r2);  // \u8fd9\u91cc\u4f7f\u7528\u4e4b\u540e \u540e\u7eed\u5c31\u4e0d\u518d\u4f7f\u7528\u4e86 \u8bf4\u660e\u662f\u53ef\u4ee5\u7684\\n    // r1 and r2 are no longer used after this point\\n\\n    let r3 = &mut s; // no problem\\n    println!(\\"{}\\", r3);\\n    ```\\n\\n4. \u60ac\u7a7a, \u4ec0\u4e48\u610f\u601d\u5462, \u53ef\u4ee5\u7406\u89e3\u4e3a\u50f5\u5c38\u6307\u9488\\n\\n    ```rust\\n     fn main() {\\n        let reference_to_nothing = dangle();\\n    }\\n\\n    fn dangle() -> &String {    // \u8fd9\u91cc\u5c06\u8fd4\u56de\u4e00\u4e2a\u5e26\u6709\u5f15\u7528\u7684\u6570\u636e\u7c7b\u578b\\n        let s = String::from(\\"hello\\");  // \u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u7c7b\u578b, \u5f00\u8f9f\u53ef\u4ee5\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\\n\\n        &s  // \u79fb\u4ea4\u5f15\u7528\u51fa\u53bb \u4ee3\u8868\u662f \u6211\u53ea\u662f\u501f\u4f60\u62ff\u53bb\u7528\u7684\u610f\u601d\\n    }   // \u4f46\u8fd9\u91cc\u5c31\u5df2\u7ecf\u88ab\u91ca\u653e\u4e86 \u4ea7\u751f \u50f5\u5c38\u6307\u9488\\n\\n    fn no_dangle() -> String {\\n        let s = String::from(\\"hello\\");\\n\\n        s   // \u8fd9\u91cc\u662f\u628a\u6240\u6709\u6743\u7ed9\u51fa\u53bb\u4e86 \u4ee3\u8868\u662f \u6211\u5f00\u8f9f\u7684\u7a7a\u95f4 \u6211\u4e0d\u8981\u4e86 \u4f60\u62ff\u53bb\u7528\u5427\\n    }   // \u8fd9\u6837\u7ed9\u51fa\u53bb\u7684\u5185\u5b58\u5c31\u4e0d\u4f1a\u88ab\u91ca\u653e\u4e86\\n    ```\\n\\n#### \u5207\u7247\u7c7b\u578b\\n\\n1. \u5148\u770b\u4e00\u4e2a\u83b7\u53d6\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u51fd\u6570\\n\\n    ```rust\\n    // \u501f\u9605\u4e00\u4e2a\u5b57\u7b26\u4e32   \u8fd4\u56de\u5355\u8bcd\u7684\u4e0b\u6807\\n    fn first_word(s: &String) -> usize {\\n        // \u8f6c\u6362\u4e3a\u6570\u7ec4\\n        let bytes = s.as_bytes();\\n\\n        // \u904d\u5386 bytes.iter() \u5e76\u4e14\u521b\u5efa\u8fed\u4ee3\u5668 enumerate() \u53ef\u4ee5\u7406\u89e3\u4e3a enumerate() \u4f1a\u4ea7\u751f\u51fa\u4e00\u4e2a\u5143\u7ec4\u6765\\n        for (i, &item) in bytes.iter().enumerate() {\\n            //  \u501f\u9605\u5230\u4e86 item\\n            if item == b\' \' {\\n                return i;\\n            }\\n        }\\n\\n        s.len() // \u4e4d\u4e00\u770b\u6ca1\u6709\u95ee\u9898 \u4f46, \u5176\u5b9e\u8fd9\u91cc\u6d89\u53ca\u5230\u4e86\u5f88\u591a\u95ee\u9898, \u6bd4\u65b9\u5355\u8bcd\u957f\u5ea6\u672a\u77e5\u548c s \u88ab\u9500\u6bc1\u4e86 \u8fd9\u7ec4\u6570\u636e\u5c31\u5931\u6548\u4e86\\n    }\\n    ```\\n\\n2. \u5f15\u5165\u5207\u7247\\n\\n    ```rust\\n\\n    fn main() {\\n        let s = String::from(\\"hello\\");\\n\\n        let len = s.len();\\n        let slice = &s[0..2];\\n        let slice = &s[..2];\\n        let slice = &s[3..len];\\n        let slice = &s[3..];\\n        let slice = &s[0..len];\\n        let slice = &s[..];\\n    }\\n    ```\\n\\n3. `&str` \u8868\u793a\u7684\u662f\u5207\u7247\u7c7b\u578b `&String` \u8868\u793a\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\\n\\n4. \u6709\u4e86\u5207\u7247\u8fd9\u4e2a\u6982\u5ff5\u4e4b\u540e\u5c31\u53ef\u4ee5\u6539\u5199\u53d6\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u51fd\u6570\u4e86\\n\\n    ```rust\\n    fn first_word(s: &String) -> &str {\\n        let bytes = s.as_bytes();\\n\\n        for (i, &item) in bytes.iter().enumerate() {\\n            if item == b\' \' {\\n                return &s[0..i];    // \u76f4\u63a5\u8fd4\u56de\u5207\u7247\\n            }\\n        }\\n        // \u521a\u597d\u8fd9\u91cc\u7684 s \u662f\u501f\u6765\u7684 \u6240\u4ee5\u76f4\u63a5\u62ff\u7740\u8fd9\u73a9\u610f \u8f6c\u501f\u7ed9\u522b\u4eba\u5c31\u884c\u4e86 \u6ca1\u6211\u5565\u4e8b\u4e86\u7684\u610f\u601d\\n        &s[..]\\n    }\\n    ```\\n\\n5. \u4f7f\u7528\u4e0a\u8ff0\u4ee3\u7801\\n\\n    ```rust\\n    fn main() {\\n        let mut s = String::from(\\"hello world\\");\\n\\n        let word = first_word(&s); // \u8fd9\u4e2a\u5207\u7247\u8fd8\u662f\u7528\u7684 s \u7684\\n\\n        s.clear(); // \u8fd9\u91cc\u5c31\u4f1a\u76f4\u63a5\u62a5\u9519\u4e86 \u56e0\u4e3a\u4f1a\u83b7\u53d6s\u7684\u53ef\u53d8\u5f15\u7528\u5e76\u4e14\u628a\u5b83\u6e05\u7a7a, \u800c world\u662f first_word \u501f\u4e86s\u53c8\u8f6c\u624b\u7ed9\u4e86word\u7684\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5f15\u7528\\n\\n        println!(\\"the first word is: {}\\", word);\\n    }\\n    ```\\n\\n6. \u628a\u4f20\u5165\u7684 `&String` \u7c7b\u578b\u53d8\u6210 `&str` \u7c7b\u578b \u5c31\u53ef\u4ee5\u63a5\u53d7 \u5207\u7247\u548c\u5b57\u7b26\u4e32\u4e86 \u56e0\u4e3a\u5b57\u7b26\u4e32\u5c31\u662f\u5168\u5207\u7247\\n7. \u5176\u4ed6\u7684\u5207\u7247\\n\\n    ```rust\\n        let a = [1, 2, 3, 4, 5];    // \u4ed6\u7684\u7c7b\u578b\u662f   [i32; 5]\\n        let slice = &a[1..3];       // \u5207\u7247\u7684\u7c7b\u578b\u662f &[i32]\\n    ```\\n\\n### \u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u6784\u9020\u76f8\u5173\u6570\u636e\\n\\n#### \u5b9a\u4e49\u548c\u5b9e\u4f8b\u5316\u7ed3\u6784\\n\\n1. \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\\n\\n    ```rust\\n    struct User {\\n        username: String,   // \u73b0\u5728\u5148\u4e0d\u58f0\u660e\u4e3a &str \u5207\u7247\u7c7b\u578b \u4f1a\u6d89\u53ca\u5230\u751f\u547d\u5468\u671f\\n        email: String,\\n        sign_in_count: u64,\\n        active: bool,\\n    }\\n\\n    fn build_user(email: String, username: String) -> User {\\n        User {\\n            email: email,\\n            username: username,\\n            active: true,\\n            sign_in_count: 1,\\n        }\\n    }\\n    // \u7b80\u5316\u5199\u6cd5\\n    fn build_user(email: String, username: String) -> User {\\n        User {\\n            email,\\n            username,\\n            active: true,\\n            sign_in_count: 1,\\n        }\\n    }\\n\\n    fn main() {\\n        let mut user1 = User {\\n            email: String::from(\\"someone@example.com\\"),\\n            username: String::from(\\"someusername123\\"),\\n            active: true,\\n            sign_in_count: 1,\\n        };\\n\\n        // \u70b9\u8bed\u6cd5\u76f4\u63a5\u66f4\u6539\\n        user1.email = String::from(\\"anotheremail@example.com\\");\\n\\n        // \u65b0\u5efauser2\\n        let user2 = User {\\n            email: String::from(\\"another@example.com\\"),\\n            username: String::from(\\"anotherusername567\\"),\\n            active: user1.active,\\n            sign_in_count: user1.sign_in_count,\\n        };\\n\\n        // \u4f46\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\\n        let user2 = User {\\n            email: String::from(\\"another@example.com\\"),\\n            username: String::from(\\"anotherusername567\\"),\\n            ..user1 // \u5176\u4ed6\u5b57\u6bb5\u6cbf\u7528\u8be5\u5b9e\u4f8b\\n        };\\n    }\\n    ```\\n\\n2. \u5143\u7ec4\u7ed3\u6784\\n\\n    ```rust\\n    struct Color(i32, i32, i32);\\n    struct Point(i32, i32, i32);\\n\\n    let black = Color(0, 0, 0);\\n    let origin = Point(0, 0, 0);\\n    ```\\n\\n3. \u6253\u5370\u7ed3\u6784 \u9996\u5148\u6dfb\u52a0 `#[derive(Debug)]` \u548c \u7136\u540e\u6539 `{}` \u4e3a `{:?}` \u6216 `{:#?}` \u591a\u884c\u6253\u5370\\n   \u5355\u884c\u6253\u5370 : \u8868\u793a\u6253\u5370\u51fa\u6765\u7684\u952e\u503c\u4e2d\u95f4\u7684 : ? \u8868\u793a\u7684\u662f \u503c # \u8868\u793a\u7acb\u8d77\u6765 \u53d8\u6210\u591a\u884c \u5f62\u5f0f\u4e3b\u4e49.. \u4e2a\u4eba\u7406\u89e3\\n\\n    ```rust\\n    #[derive(Debug)]\\n    struct Rectangle {\\n        width: u32,\\n        height: u32,\\n    }\\n\\n    fn test_rect() {\\n        let rect1 = Rectangle { width: 30, height: 50 };\\n\\n        println!(\\"rect1 is {:?}\\", rect1);   // \u8868\u793a\u7684\u610f\u601d\u662f\\n        println!(\\"rect1 is {:#?}\\", rect1);\\n    }\\n\\n    ```\\n\\n#### \u65b9\u5757\u8bed\u6cd5\\n\\n1. \u5b9e\u73b0\u4e00\u4e2a\u65b9\u6cd5\\n\\n    ```rust\\n    #[derive(Debug)]\\n    struct Rectangle {\\n        width: u32,\\n        height: u32,\\n    }\\n\\n    // \u5b9e\u73b0 \u53ef\u4ee5\u6709\u591a\u4e2a\u5b9e\u73b0\\n    impl Rectangle {\\n        // \u8fd9\u91cc\u7684self\u90fd\u53ea\u662f\u501f\u6765\u7684 \u53ea\u505a\u8bbf\u95ee\u53d8\u91cf\u4f7f\u7528\\n        // \u4f46\u5982\u679c\u8981\u7528\u6765\u4fee\u6539\u5176\u5185\u5bb9\u7684\u8bdd \u4e5f\u662f\u9700\u8981\u52a0\u4e0amut\\n        fn area(&self) -> u32 {\\n            self.width * self.height\\n        }\\n    }\\n\\n    impl Rectangle {\\n        // \u53ef\u4ee5\u7406\u89e3\u4e3a\u5b9a\u4e49\u4e86\u4e00\u4e2a \u7c7b\u51fd\u6570 \u53ea\u80fd\u901a\u8fc7\u7c7b\u6765\u8c03\u7528 \u8c03\u7528\u65b9\u5f0f \u91c7\u7528 :: \u53cc\u5192\u53f7\u5f62\u5f0f\\n        fn square(size: u32) -> Rectangle {\\n            Rectangle { width: size, height: size }\\n        }\\n    }\\n\\n    fn main() {\\n        let rect1 = Rectangle { width: 30, height: 50 };\\n\\n        println!(\\n            \\"The area of the rectangle is {} square pixels.\\",\\n            rect1.area()\\n        );\\n\\n        let sq = Rectangle::square(3)\\n    }\\n\\n    ```\\n\\n2. \u81ea\u52a8\u4fee\u6539\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b, \u4ec5\u4ec5\u9488\u5bf9 `self` \u53c2\u6570   \u4f1a\u81ea\u52a8\u6dfb\u52a0\u4ed6\u7684\u53d8\u4f53 `&`\uff0c`&mut` \u6216 `*`\\n\\n    ```rust\\n    #![allow(unused_variables)]\\n    fn main() {\\n        #[derive(Debug,Copy,Clone)]\\n        struct Point {\\n            x: f64,\\n            y: f64,\\n        }\\n\\n        impl Point {\\n            fn distance(&self, other: &Point) -> f64 {\\n                let x_squared = f64::powi(other.x - self.x, 2);\\n                let y_squared = f64::powi(other.y - self.y, 2);\\n\\n                f64::sqrt(x_squared + y_squared)\\n            }\\n        }\\n        let p1 = Point { x: 0.0, y: 0.0 };\\n        let p2 = Point { x: 5.0, y: 6.5 };\\n        // \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u8c03\u7528\u65f6\u4e00\u65e0\u6240\u8c13\u7684\\n        p1.distance(&p2);\\n        (&p1).distance(&p2);\\n    }\\n    ```\\n\\n#### \u679a\u4e3e\\n\\n1. \u4e0d\u5f97\u4e0d\u627f\u8ba4 \u8fd9\u4e48\u6ca1\u6709\u5f88\u5438\u5f15\u6211\\n\\n    ```rust\\n    // \u6b63\u5e38\u4f7f\u7528\\n    enum IpAddrKind {\\n        V4,\\n        V6,\\n    }\\n    // \u6df7\u7528\\n    enum IpAddr {\\n        V4(u8, u8, u8, u8),\\n        V6(String),\\n    }\\n\\n    struct Ipv4Addr {\\n    // --snip--\\n    }\\n\\n    struct Ipv6Addr {\\n        // --snip--\\n    }\\n\\n    // \u7ed3\u6784\u4f53\u4f7f\u7528\\n    enum IpAddr {\\n        V4(Ipv4Addr),\\n        V6(Ipv6Addr),\\n    }\\n\\n    // \u5f3a\u5927\u6240\u5728\\n    enum Message {\\n        Quit,\\n        Move { x: i32, y: i32 },\\n        Write(String),\\n        ChangeColor(i32, i32, i32),\\n    }\\n\\n    impl Message {\\n        // \u8fd8\u80fd...\u5b9e\u73b0 \u51fd\u6570!!!\\n        fn call(&self) {\\n            // method body would be defined here\\n        }\\n    }\\n\\n    ```\\n\\n2. Option\\n    null\u7684\u53d1\u660e\u8005Tony Hoare\u57282009\u5e74\u7684\u6f14\u8bb2\u201c Null References\uff1a\u5341\u4ebf\u7f8e\u5143\u7684\u9519\u8bef\u201d\u4e2d\u8bf4\uff1a\\n\\n    ```text\\n        \u6211\u79f0\u4e4b\u4e3a\u6211\u7684\u5341\u4ebf\u7f8e\u5143\u9519\u8bef\u3002\u5f53\u65f6\uff0c\u6211\u6b63\u5728\u8bbe\u8ba1\u7b2c\u4e00\u4e2a\u5168\u9762\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u4ee5\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u8fdb\u884c\u5f15\u7528\u3002\u6211\u7684\u76ee\u6807\u662f\u786e\u4fdd\u6240\u6709\u5f15\u7528\u7684\u4f7f\u7528\u90fd\u7edd\u5bf9\u5b89\u5168\uff0c\u5e76\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u6267\u884c\u68c0\u67e5\u3002\u4f46\u662f\u6211\u5fcd\u4e0d\u4f4f\u8981\u63d2\u5165\u4e00\u4e2a\u7a7a\u5f15\u7528\u7684\u8bf1\u60d1\uff0c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5b83\u662f\u5982\u6b64\u5bb9\u6613\u5b9e\u73b0\u3002\u8fd9\u5bfc\u81f4\u4e86\u65e0\u6570\u9519\u8bef\uff0c\u6f0f\u6d1e\u548c\u7cfb\u7edf\u5d29\u6e83\uff0c\u5728\u6700\u8fd1\u56db\u5341\u5e74\u4e2d\u53ef\u80fd\u9020\u6210\u5341\u4ebf\u7f8e\u5143\u7684\u75db\u82e6\u548c\u7834\u574f\u3002\\n    ```\\n\\n    ```rust\\n    enum Option<T> {\\n        Some(T),    // \u6cdb\u578b\\n        None,\\n    }\\n    fn main() {\\n        let some_number = Some(5);\\n        let some_string = Some(\\"a string\\");     // Some \u76f4\u63a5\u8d4b\u503c\u5373\u53ef\u63a8\u6d4b\u7c7b\u578b\u4e86\\n        let absent_number: Option<i32> = None;  // None \u6ca1\u6709\u7c7b\u578b \u90a3\u4e48\u5c31\u9700\u8981\u6307\u4ee3\u7c7b\u578b\\n    }\\n    ```\\n\\n    \u52a0\u5165Option \u65e8\u5728\u9650\u5236null\u7684\u666e\u904d\u6027\u5e76\u63d0\u9ad8Rust\u4ee3\u7801\u7684\u5b89\u5168\u6027\u3002\\n\\n3. \u5339\u914d\u63a7\u5236\u6d41 `match`\\n\\n    \u4e00\u4e2a\u5f3a\u5927\u7684\u6b66\u5668\\n\\n    ```rust\\n    enum UsState {\\n        Alabama,\\n        Alaska,\\n        // --snip--\\n    }\\n\\n    enum Coin {\\n        Penny,      // 1 \u7f8e\u5206\\n        Nickel,     // 5 \u7f8e\u5206\\n        Dime,       // 10 \u7f8e\u5206\\n        Quarter(UsState),    // 25 \u7f8e\u5206\\n    }\\n\\n    fn value_in_cents(coin: Coin) -> u8 {\\n        match coin {\\n            // \u7c7b\u51fd\u6570\u7684\u8c03\u7528\u65b9\u5f0f \u6307\u5b9a \u679a\u4e3e\u7684\u6bcf\u4e2a\u503c\\n            Coin::Penny => {    // => \u5339\u914d\u540e\u76f4\u63a5\u8d4b\u503c\u7684\u610f\u601d\\n                println!(\\"Lucky penny!\\");\\n                1   // \u8fd4\u56de\u503c\u4e3a1\\n            },\\n            Coin::Nickel => 5,\\n            Coin::Dime => 10,\\n            Coin::Quarter(state) => {\\n                println!(\\"State quarter from {:?}!\\", state);\\n                25\\n            },\\n        }\\n    }\\n    ```\\n\\n4. `match` \u642d\u914d `Option<T>`\\n\\n    ```rust\\n    fn plus_one(x: Option<i32>) -> Option<i32> {\\n        match x {\\n            None => None,\\n            Some(i) => Some(i + 1),\\n        }\\n    }\\n\\n    let five = Some(5);\\n    let six = plus_one(five);\\n    let none = plus_one(None);\\n    ```\\n\\n5. `_` \u5360\u4f4d\u7b26 \u7c7b\u4f3c\u4e8e `default`\\n\\n    ```rust\\n    let some_u8_value = 0u8; // \u7b49\u4ef7\u4e8e  let some_u8_value : u8 = 1; \\n    match some_u8_value {\\n        1 => println!(\\"one\\"),\\n        3 => println!(\\"three\\"),\\n        5 => println!(\\"five\\"),\\n        7 => println!(\\"seven\\"),\\n        _ => (),\\n    }\\n    ```\\n\\n6. \u5c31\u7b97\u4f7f\u7528\u4e86\u5360\u4f4d\u7b26 \u4f46\u5982\u679c\u6211\u4eec\u53ea\u8981\u5339\u914d\u4e00\u79cd\u6a21\u5f0f\u7684\u8bdd \u7528`match`\u6709\u70b9\u7109\u7528\u725b\u5200\u7684\u611f\u89c9\u4e86 \u6240\u4ee5\u5f15\u5165\u4e86 `if let`\\n\\n    ```rust\\n    // \u725b\u5200\u6a21\u5f0f\\n    let some_u8_value = Some(0u8);\\n    match some_u8_value {\\n        Some(3) => println!(\\"three\\"),\\n        _ => (),\\n    }\\n    // \u7b80\u7ea6\u6a21\u5f0f\\n    if let Some(3) = some_u8_value {\\n        println!(\\"three\\");\\n    }\\n\\n    ```\\n\\n    \u6362\u53e5\u8bdd\u8bf4\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176`if let`\u89c6\u4e3a`match`\u5f53\u503c\u5339\u914d\u4e00\u4e2a\u6a21\u5f0f\u7136\u540e\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u503c\u65f6\u8fd0\u884c\u4ee3\u7801\u7684\u8bed\u6cd5\u8bed\u6cd5\u3002\\n\\n### \u4f7f\u7528\u5305(\u5934\u6587\u4ef6)\\n\\n#### \u5305\\n\\n1. \u5728\u4f7f\u7528`cargo`\u7684\u65f6\u5019, \u751f\u6210\u51fa\u6765\u7684 `src` \u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5305\\n\\n#### \u6a21\u5757 `mod`\\n\\n1. \u6837\u677f\\n\\n    ```rust\\n    mod front_of_house {\\n        // \u5982\u679c\u8fd9\u91cc\u4e0d\u6dfb\u52a0 pub \u7684\u8bdd \u662f\u6ca1\u6709\u529e\u6cd5\u5728\u5916\u90e8\u4f7f\u7528\u7684\\n        pub mod hosting {\\n            pub fn add_to_waitlist() {}\\n            fn seat_at_table() {}\\n        }\\n\\n        mod serving {\\n            fn take_order() {}\\n            fn serve_order() {}\\n            fn take_payment() {}\\n        }\\n    }\\n\\n\\n    pub fn eat_at_restaurant() {\\n        // \u7edd\u5bf9\u8def\u5f84\u8c03\u7528\u7684\u65f6\u5019 \u91c7\u7528\u7684\u5173\u952e\u5b57\u662f crate \u7bb1\u5b50 \u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a\u5f53\u524d\u76ee\u5f55 root\\n        crate::front_of_house::hosting::add_to_waitlist();\\n\\n        // \u76f8\u5bf9\u8def\u5f84\u8c03\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u7701\u7565\\n        front_of_house::hosting::add_to_waitlist();\\n    }\\n    ```\\n\\n2. \u6a21\u5757\u6811\\n\\n    ```rust\\n    crate\\n    \u2514\u2500\u2500 front_of_house\\n        \u251c\u2500\u2500 hosting\\n        \u2502   \u251c\u2500\u2500 add_to_waitlist\\n        \u2502   \u2514\u2500\u2500 seat_at_table\\n        \u2514\u2500\u2500 serving\\n            \u251c\u2500\u2500 take_order\\n            \u251c\u2500\u2500 serve_order\\n            \u2514\u2500\u2500 take_payment\\n    ```\\n\\n3. \u8d77\u59cb\u76f8\u5bf9\u8def\u5f84 `super`\\n\\n    ```rust\\n    fn serve_order() {}\\n\\n    mod back_of_house {\\n        fn fix_incorrect_order() {\\n            cook_order();\\n            // \u8fd9\u91cc\u7684super\u610f\u601d\u5c31\u662f back_of_house \u800c\u4e14 serve_order \u548c super \u540c\u7ea7\\n            super::serve_order();\\n        }\\n\\n        fn cook_order() {}\\n    }\\n    fn main() {}\\n\\n    ```\\n\\n#### \u4f7f\u7528 `use` \u6765\u5f15\u5165\u8def\u5f84 \u7f29\u77ed\u8def\u5f84\\n\\n1. \u6b63\u5e38\u4f7f\u7528\\n\\n    ```rust\\n    mod front_of_house {\\n        pub mod hosting {\\n            pub fn add_to_waitlist() {}\\n        }\\n    }\\n\\n    use crate::front_of_house::hosting;\\n\\n    pub fn eat_at_restaurant() {\\n        // \u7edd\u5bf9\u8def\u5f84\u4e0b\\n        crate::front_of_house::hosting::add_to_waitlist();\\n        // \u76f8\u5bf9\u8def\u5f84\u4e0b\\n        front_of_house::hosting::add_to_waitlist();\\n        // \u88ab\u7f29\u77ed\u7684\u4f7f\u7528\u65b9\u5f0f\\n        hosting::add_to_waitlist();\\n    }\\n    ```\\n\\n2. `as` \u6765\u91cd\u5199\u547d\u540d\\n\\n    ```rust\\n    fn main() {\\n        use std::fmt::Result;\\n        use std::io::Result as IoResult;\\n\\n        fn function1() -> Result {\\n            // --snip--\\n            Ok(())\\n        }\\n\\n        fn function2() -> IoResult<()> {\\n            // --snip--\\n            Ok(())\\n        }\\n    }\\n    ```\\n\\n3. \u5bfc\u51fa `pub use`\\n\\n    ```rust\\n    mod front_of_house {\\n        pub mod hosting {\\n            pub fn add_to_waitlist() {}\\n        }\\n    }\\n    // \u5916\u90e8\u8bbf\u95ee\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee hosting::add_to_waitlist()\\n    pub use crate::front_of_house::hosting;\\n\\n    pub fn eat_at_restaurant() {\\n        hosting::add_to_waitlist();\\n        hosting::add_to_waitlist();\\n        hosting::add_to_waitlist();\\n    }\\n    fn main() {}\\n\\n    ```\\n\\n4. \u5bf9\u4e8e\u540c\u4e00\u5305\u4e0b\u7684\u591a\u4e2a\u8def\u5f84\u4f7f\u7528\u5d4c\u5957\u5904\u7406 `{ , }`\\n\\n    ```rust\\n    use std::io;\\n    use std::io::Write;\\n    use std::cmp::Ordering;\\n\\n    use std::{cmp::Ordering, io};\\n    // \u5bf9\u4e8e\u8def\u5f84\u672c\u8eab \u4f7f\u7528 self\\n    use std::io::{self, Write};\\n    ```\\n\\n5. \u5bfc\u5165\u6240\u6709\u7684\u516c\u5171\u9879\u76ee\\n\\n    ```rust\\n    use std::collections::*;\\n    ```\\n\\n6. \u6a21\u5757 `mod` \u5206\u6587\u4ef6\u5b58\u653e\\n\\n    \u8fd9\u4e2a\u4e0d\u9700\u8981\u592a\u591a\u7684\u5185\u5bb9\u53bb\u5199 \u5927\u6982\u5c31\u662f\u548c\u5b89\u5353\u7684\u673a\u5236\u7c7b\u4f3c \u6587\u4ef6\u5939\u5b58\u653e\u5373\u53ef\\n\\n### \u5e38\u7528\u7684\u4e00\u4e9b\u952e\u503c\u4fdd\u5b58\u7684\u4e1c\u897f\\n\\n#### \u77e2\u91cf\\n\\n1. \u77e2\u91cf `Vec` \u53ef\u4ee5\u5b58\u653e\u4efb\u4f55\u7c7b\u578b, \u4f46\u4ec5\u9650\u4e8e\u540c\u4e00\u7c7b\u578b\u7684, \u6240\u4ee5\u53ef\u4ee5\u501f\u52a9 `enum` \u6765\u8fbe\u5230\u6df7\u5b58\u7684\u529f\u80fd\\n\\n    ```rust  \\n    let v: Vec<i32> = Vec::new();\\n    v.push(5);\\n    v.push(6);\\n    let v = vec![1, 2, 3];\\n\\n    enum SpreadsheetCell {\\n        Int(i32),\\n        Float(f64),\\n        Text(String),\\n    }\\n\\n    let row = vec![\\n        SpreadsheetCell::Int(3),\\n        SpreadsheetCell::Text(String::from(\\"blue\\")),\\n        SpreadsheetCell::Float(10.12),\\n    ];\\n    ```\\n\\n2. \u5982\u679c\u5df2\u7ecf\u751f\u6210\u8fc7\u4e86\u4e2a \u4e0d\u53ef\u53d8 \u7684\u5f15\u7528\u4e4b\u540e, \u518d\u7ee7\u7eed\u5bf9\u5176push\\n\\n    ```rust\\n    let mut v = vec![1, 2, 3, 4, 5];\\n    let first = &v[0];  // \u4ea7\u751f\u4e0d\u53ef\u53d8\u7684\u5f15\u7528\u4e4b\u540e\\n    v.push(6);          // \u8fd9\u91cc\u4f1a\u751f\u6210 \u53ef\u53d8\\n    println!(\\"The first element is: {}\\", first);\\n    ```\\n\\n3. \u53ef\u4ee5\u76f4\u63a5\u5bf9\u5176\u904d\u5386\\n\\n    ```rust\\n    let v = vec![100, 32, 57];\\n    for i in &v {\\n        println!(\\"{}\\", i);\\n    }\\n    // \u5982\u679c\u8981\u6539\u503c\u5f97\u8bdd \u9700\u8981\u52a0 mut\\n    for i in &mut v {\\n        // \u751a\u81f3\u662f\u76f4\u63a5\u904d\u5386\u7684\u65f6\u5019\u66f4\u6539\u4ed6\u7684\u503c\\n        *i += 50; // * \u6709\u70b9\u5f3a\u4e70\u5f3a\u5356\u7684\u95ee\u9053\\n    }\\n    ```\\n\\n#### String\\n\\n1. \u4e0d\u80fd\u5bf9 `String` \u7d22\u5f15\\n\\n    ```rust\\n    let hello = \\"\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435\\";\\n    let answer = &hello[0]; // \u56e0\u4e3aUnicode\u5417\u7684\u5b57\u8282\u957f\u5ea6\u662f\u4e0d\u5b9a\u7684\\n    ```\\n\\n2. \u5b57\u7b26\u4e32\u7684\u4e00\u4e9b\u76f8\u5173\u64cd\u4f5c\\n\\n    ```rust\\n    // \u8ffd\u52a0\\n    let mut s1 = String::from(\\"foo\\");\\n    let s2 = \\"bar\\";\\n    s1.push_str(s2); // \u8fd9\u91cc\u5e76\u4e0d\u4f1a\u8f6c\u8ba9\u6240\u6709\u6743\\n    println!(\\"s2 is {}\\", s2);\\n\\n    let mut s = String::from(\\"lo\\");\\n    s.push(\'l\');\\n\\n    // \u5408\u5e76\\n    // \u52a0\u53f7\\n    let s1 = String::from(\\"Hello, \\");\\n    let s2 = String::from(\\"world!\\");\\n    let s3 = s1 + &s2; // s1 \u7684\u6240\u6709\u6743\u88ab\u79fb\u4ea4\u51fa\u53bb\u4e86 + \u53f7\u5176\u5b9e\u8c03\u7528\u7684\u662f add \u65b9\u6cd5\\n\\n    // \u683c\u5f0f\u5316\\n    let s1 = String::from(\\"tic\\");\\n    let s2 = String::from(\\"tac\\");\\n    let s3 = String::from(\\"toe\\");\\n    let s = format!(\\"{}-{}-{}\\", s1, s2, s3);\\n    ```\\n\\n3. \u4f46\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u505a\u8303\u56f4\u5207\u7247 \u4f46\u662f\u4f1a\u53ef\u80fd\u62a5\u9519\\n\\n    ```rust\\n    let hello = \\"\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435\\"; // \u8fd9\u91cc\u7684\u4e00\u4e2a\u5b57\u7b26\u5360\u4e24\u4e2a\u5b57\u8282\\n    let s = &hello[0..4];       // \u6240\u4ee5 0\u52304 \u53d6\u51fa\u6765\u7684\u662f \'\u0417\u0434\'\\n    // \u4e00\u65e6\u53d6\u4e86 [0..1] \u6216\u8005\u662f [0..3] \u5c31\u4f1a\u5bfc\u81f4\u5b57\u7b26\u65e0\u6cd5\u88ab\u6b63\u5e38\u5207\u51fa\u6765 \u4f1a\u62a5\u9519\\n    ```\\n\\n4. \u904d\u5386\u5b57\u7b26\u4e32\u7684\u771f\u6b63\u5b57\u7b26 \u4f7f\u7528 `chars`\\n\\n    ```rust\\n    for c in \\"\u0928\u092e\u0938\u094d\u0924\u0947\\".chars() {\\n        println!(\\"{}\\", c);\\n    }\\n    ```\\n\\n5. \u6216\u8005\u904d\u5386\u5b57\u7b26\u4e32\u7684\u5b57\u8282\u7801 \u4f7f\u7528 `bytes`\\n\\n    ```rust\\n    for b in \\"\u0928\u092e\u0938\u094d\u0924\u0947\\".bytes() {\\n        println!(\\"{}\\", b);\\n    }\\n    ```\\n\\n#### HashMap\\n\\n1. \u6240\u6709\u7684\u952e\u503c\u5fc5\u987b\u4e00\u81f4, \u4e5f\u5c31\u662f\u952e\u7684\u7c7b\u578b\u8981\u4e00\u81f4, \u503c\u7684\u7c7b\u578b\u4e5f\u8981\u4e00\u81f4\\n\\n2. \u4f7f\u7528\\n\\n    ```rust\\n    use std::collections::HashMap;\\n\\n    let mut scores = HashMap::new();\\n    // \u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\\n    scores.insert(String::from(\\"Blue\\"), 10);\\n    scores.insert(String::from(\\"Yellow\\"), 50);\\n\\n    // \u5148\u521b\u5efa\u6240\u6709\u7684\u952e \u548c \u503c \u5b58\u653e\u5230 vec\u5f53\u4e2d\\n    let teams  = vec![String::from(\\"Blue\\"), String::from(\\"Yellow\\")];\\n    let initial_scores = vec![10, 50];\\n\\n    // \u8fd9\u91cc\u7684 \u4e0b\u5212\u7ebf\u662f\u53ef\u4ee5\u7f16\u8bd1\u5668 \u81ea\u5df1\u53bb\u731c\u6d4b\u7684\\n    let scores: HashMap<_, _> = teams.iter().zip(initial_scores.iter()).collect();\\n    ```\\n\\n3. \u4f1a\u63a5\u6536\u6240\u6709\u6743\\n\\n    ```rust\\n    let field_name = String::from(\\"Favorite color\\");\\n    let field_value = String::from(\\"Blue\\");\\n\\n    let mut map = HashMap::new();\\n    map.insert(field_name, field_value);\\n    // \u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u4f1a\u62a5\u9519\u7684 \u6240\u6709\u6743\u5931\u6548\u4e86\\n    println!(\\"{}, {}\\", field_name, field_value);\\n    ```\\n\\n4. \u83b7\u53d6\u503c `get` \u8fd4\u56de\u7684\u662f\u4e2a `Option` \u503c \u56e0\u4e3a\u662f\u6709\u53ef\u80fd\u4e3a `None`\u7684\\n\\n    ```rust\\n    scores.insert(String::from(\\"Blue\\"), 10);\\n    scores.insert(String::from(\\"Yellow\\"), 50);\\n\\n    let team_name = String::from(\\"Blue\\");\\n    let score = scores.get(&team_name);\\n    // score => Some(10)\\n    ```\\n\\n5. \u4ec5\u5f53\u952e\u6ca1\u6709\u503c\u65f6\u624d\u63d2\u5165\u503c `entry` `or_insert`\\n\\n    ```rust\\n    let mut scores = HashMap::new();\\n    scores.insert(String::from(\\"Blue\\"), 10);\\n\\n    scores.entry(String::from(\\"Yellow\\")).or_insert(50);\\n    scores.entry(String::from(\\"Blue\\")).or_insert(50);   // \u8fd9\u91cc\u4e0d\u4f1a\u751f\u6548\\n\\n    println!(\\"{:?}\\", scores);\\n    ```\\n\\n6. \u66f4\u65b0\u503c \u4f46\u8fd9\u91cc\u611f\u89c9\u6709\u70b9\u95ee\u9898\\n\\n    ```rust\\n    let text = \\"hello world wonderful world\\";\\n\\n    let mut map = HashMap::new();\\n\\n    for word in text.split_whitespace() {\\n        let count = map.entry(word).or_insert(0);\\n        *count += 1; // \u5728\u8fd9\u91cc\u66f4\u65b0\u4e86 \u4f46\u662f\u5c31\u600e\u4e48\u90a3\u4e48\u602a\u5462\\n    }\\n\\n    println!(\\"{:?}\\", map);\\n\\n\\n    // \u5982\u679c\u6309\u7167\u4e0a\u8ff0\u8fd9\u4e2a\u601d\u8def\u7684\u8bdd\\n    let score = scores.entry(String::from(\\"Blue\\")).or_insert(1);\\n    *score += 1;\\n    ```\\n\\n### \u62a5\u9519 `panic!`\\n\\n1. \u5173\u4e8e `panic!`\\n\\n2. `Result`\\n\\n    \u8fd9\u662f\u4e00\u4e2a\u679a\u4e3e, \u8868\u793a\u8fd9\u4e2a\u503c\u53ef\u4ee5\u662f\u6709\u4e24\u79cd\u7ed3\u679c, \u5982\u679c\u662f`OK`\u4f1a\u9644\u5e26\u5bf9\u5e94\u7684`<T>`\u7c7b\u578b, \u5982\u679c\u662f`Err`\u7684\u8bdd, \u5c06\u4f1a\u662f\u62a5\u9519\\n\\n    ```rust\\n    enum Result<T, E> {\\n        Ok(T),\\n        Err(E),\\n    }\\n    use std::fs::File;\\n\\n    fn main() {\\n        let f = File::open(\\"hello.txt\\");\\n\\n        let f = match f {\\n            Ok(file) => file,\\n            Err(error) => {\\n                // \u8fd9\u91cc\u7684 panic! \u8868\u793a\u4f1a\u76f4\u63a5\u505c\u6b62\u5728\u8fd9\u91cc\\n                panic!(\\"Problem opening the file: {:?}\\", error)\\n            },\\n        };\\n    }\\n\\n    // \u751a\u81f3\u53ef\u4ee5\u5339\u914d\u4e0d\u540c\u7684\u9519\u8bef \u4e5f\u5c31\u662f\u9488\u5bf9 err \u7684\u9519\u8bef\u7c7b\u578b\u505a\u6587\u7ae0\\n    use std::fs::File;\\n    use std::io::ErrorKind;\\n\\n    fn main() {\\n        let f = File::open(\\"hello.txt\\");\\n\\n        let f = match f {\\n            Ok(file) => file,\\n            Err(error) => match error.kind() {\\n                ErrorKind::NotFound => match File::create(\\"hello.txt\\") {\\n                    Ok(fc) => fc,\\n                    Err(e) => panic!(\\"Problem creating the file: {:?}\\", e),\\n                },\\n                other_error => panic!(\\"Problem opening the file: {:?}\\", other_error),\\n            },\\n        };\\n    }\\n    ```\\n\\n3. \u95ed\u5305\\n\\n    \u5982\u679c\u5728\u4f7f\u7528\u591a\u4e2a`match`\u4f1a\u4f7f\u5f97\u4ee3\u7801\u770b\u8d77\u6765\u5f88\u539f\u59cb\\n\\n    ```rust\\n    use std::fs::File;\\n    use std::io::ErrorKind;\\n\\n    fn main() {\\n        let f = File::open(\\"hello.txt\\").unwrap_or_else(|error| {\\n            if error.kind() == ErrorKind::NotFound {\\n                File::create(\\"hello.txt\\").unwrap_or_else(|error| {\\n                    panic!(\\"Problem creating the file: {:?}\\", error);\\n                })\\n            } else {\\n                panic!(\\"Problem opening the file: {:?}\\", error);\\n            }\\n        });\\n    }\\n    ```\\n\\n4. \u65b0\u7684\u5173\u952e\u5b57\u7528\u6765\u5355\u72ec\u89e3\u51b3\u62a5\u9519 `unwrap` \u548c `expect`\\n\\n    ```rust\\n    use std::fs::File;\\n\\n    fn main() {\\n        let f = File::open(\\"hello.txt\\").unwrap();   // \u5982\u679c\u62a5\u9519 \u4f1a\u76f4\u63a5\u4e2d\u65ad\u5728\u8fd9\u91cc\\n    }\\n\\n    fn main() {\\n        let f = File::open(\\"hello.txt\\").expect(\\"Failed to open hello.txt\\"); // \u5982\u679c\u62a5\u9519 \u4f1a\u76f4\u63a5\u663e\u793a\u9519\u8bef\u4fe1\u606f \u5e76\u4e14\u4e2d\u65ad\\n    }\\n    ```\\n\\n5. \u4f20\u9012\u62a5\u9519\\n\\n    ```rust\\n    fn main() {\\n        use std::io;\\n        use std::io::Read;\\n        use std::fs::File;\\n\\n        // \u9996\u5148\u770b\u8fd4\u56de\u503c \u662f\u4e2a Result\\n        fn read_username_from_file() -> Result<String, io::Error> {\\n            let f = File::open(\\"hello.txt\\");\\n            // \u5224\u65ad f \u662f\u5426\u662f\u9519\u8bef \u5982\u679c\u662f\u7684\u8bdd\u76f4\u63a5\u8fd4\u56de\u62a5\u9519 \u5426\u5219\u76f4\u63a5\u8d4b\u503c\u4e3a\u6587\u4ef6\u7684 \u53e5\u67c4\\n            let mut f = match f {\\n                Ok(file) => file,\\n                Err(e) => return Err(e),\\n            };\\n\\n            let mut s = String::new();\\n\\n            // \u5339\u914d\u6587\u4ef6\u8bfb\u51fa\u6765\u7684\u5185\u5bb9\u7ed9\u5230 \u65b0\u5efa\u7684 s \u5f53\u4e2d\u53bb\\n            match f.read_to_string(&mut s) {\\n                Ok(_) => Ok(s),\\n                Err(e) => Err(e),\\n            }   // \u8fd9\u91cc\u6ca1\u6709 ; \u8868\u793a\u8fd9\u91cc\u5c31\u662f\u8fd4\u56de\u503c\u4e86\\n        }\\n    }\\n    ```\\n\\n6. \u7531\u4e8e\u4ee5\u4e0a\u4f20\u9012 \u975e\u5e38\u5e38\u89c1 \u5bfc\u81f4\u53ef\u4ee5 \u7528 `?` \u4f7f\u5176\u7cbe\u7b80 \\n\\n    ```rust\\n    use std::io;\\n    use std::io::Read;\\n    use std::fs::File;\\n\\n    fn read_username_from_file() -> Result<String, io::Error> {\\n        let mut f = File::open(\\"hello.txt\\")?;\\n        let mut s = String::new();\\n        f.read_to_string(&mut s)?;\\n        Ok(s)\\n    }\\n    ```\\n\\n    \u8be5`?`\u653e\u5728\u540e`Result`\u503c\u5b9a\u4e49\u4e3a\u5de5\u4f5c\u5728\u51e0\u4e4e\u76f8\u540c\u7684\u65b9\u5f0f`match`\u8868\u8fbe\u6211\u4eec\u5b9a\u4e49\u6765\u5904\u7406`Result`\\n    \u4e5f\u5c31\u662f\u53ef\u4ee5\u76f4\u63a5\u505a\u5230\u7b80\u5316\u8fd4\u56de\u64cd\u4f5c\u7684\u80fd\u529b\\n    \u751a\u81f3\u66f4\u52a0\u7684\u7cbe\u7b80\\n\\n    ```rust\\n    use std::io;\\n    use std::io::Read;\\n    use std::fs::File;\\n\\n    fn read_username_from_file() -> Result<String, io::Error> {\\n        let mut s = String::new();\\n        File::open(\\"hello.txt\\")?.read_to_string(&mut s)?;\\n        Ok(s)\\n    }\\n    ```\\n\\n    \u597d\u5427 \u5176\u5b9e\u8fd8\u53ef\u4ee5\u8d85\u7ea7\u7cbe\u7b80\\n\\n    ```rust\\n    use std::io;\\n    use std::fs;\\n\\n    fn read_username_from_file() -> Result<String, io::Error> {\\n        // \u6211\u89c9\u5f97\u8fd9\u91cc\u5df2\u7ecf\u766b\u4e86 \u76f4\u63a5\u5e2e\u4f60\u5199\u597d\u4e86 \u6253\u5f00\u6587\u4ef6\u5939\u5e76\u4e14\u83b7\u53d6\u5185\u5bb9 \u5e76\u4e14\u8fd4\u56de\u51fa\u53bb...\\n        fs::read_to_string(\\"hello.txt\\")\\n    }\\n    ```\\n\\n7. \u90a3\u4e48\u8fd9\u4e2a`?`\u80fd\u7528\u5728\u522b\u7684\u5730\u65b9\u5417? \u4e0d\u80fd\u7684 \u53ea\u80fd\u7528\u5728\u8fd4\u56de\u503c\u4e3a `Result` \u7684\u51fd\u6570\u4e0a\\n\\n    ```rust\\n    // \u9519\u8bef\u4ee3\u7801\\n\\n    use std::fs::File;\\n\\n    fn main() {\\n        let f = File::open(\\"hello.txt\\")?;\\n    }\\n    ```\\n\\n    \u8fd9\u91cc\u8bf4\u4e00\u5634 `main` \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f `()` \u6211\u5b8c\u5168\u4e0d\u77e5\u9053\u8fd9\u662f\u4e2a\u4ec0\u4e48\u7c7b\u578b...\\n\\n    \u4f46\u4f60\u53ef\u4ee5\u8fd9\u4e48\u5199\\n\\n    ```rust\\n    use std::error::Error;\\n    use std::fs::File;\\n\\n    fn main() -> Result<(), Box<dyn Error>> {\\n        let f = File::open(\\"hello.txt\\")?;\\n        // \u8fd4\u56de\u4e86 () \u7684\u540c\u65f6 \u8036 \u5b8c\u6210\u4e86 ?\\n        Ok(())\\n    }\\n    ```\\n\\n    \u4f46\u8fd9\u91cc\u51fa\u73b0\u4e86\u4e2a\u65b0\u7684\u73a9\u610f `Box<dyn Error>` `Box` \u770b\u4e86\u6587\u6863\u4e0d\u662f\u5f88\u61c2 `pub struct Box<T: ?Sized>(Unique<T>);`\\n    \u4f46 `dyn` \u8868\u793a\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\\n    \u6240\u4ee5 `Box<dyn Error>` \u53ef\u4ee5\u7406\u89e3\u4e3a \u4efb\u4f55\u7c7b\u578b\u7684\u9519\u8bef\\n\\n### \u6cdb\u578b \u7279\u5f81 \u548c \u751f\u547d\u5468\u671f\\n\\n#### \u7279\u5f81\\n\\n1. \u5b9a\u4e49\u5171\u540c\u63a5\u53e3\\n\\n    ```rust\\n    pub trait Summary {\\n        fn summarize(&self) -> String;\\n    }\\n\\n    pub struct NewsArticle {\\n        pub headline: String,\\n        pub location: String,\\n        pub author: String,\\n        pub content: String,\\n    }\\n\\n    // \u5b9e\u73b0\u63a5\u53e3 \u5bf9\u4e8e NewsArticle \u8fd9\u4e2a\u7ed3\u6784\u4f53\u6765\u8bf4\\n    impl Summary for NewsArticle {\\n        fn summarize(&self) -> String {\\n            format!(\\"{}, by {} ({})\\", self.headline, self.author, self.location)\\n        }\\n    }\\n\\n    pub struct Tweet {\\n        pub username: String,\\n        pub content: String,\\n        pub reply: bool,\\n        pub retweet: bool,\\n    }\\n\\n    // \u5b9e\u73b0\u63a5\u53e3 \u5bf9\u4e8e Tweet \u8fd9\u4e2a\u7ed3\u6784\u4f53\u6765\u8bf4\\n    impl Summary for Tweet {\\n        fn summarize(&self) -> String {\\n            format!(\\"{}: {}\\", self.username, self.content)\\n        }\\n    }\\n\\n    ```\\n\\n2. \u4e0d\u80fd\u5b9e\u73b0\u5916\u90e8\u7279\u5f81, \u53ea\u80fd\u672c\u5730\u4f7f\u7528\\n\\n3. \u53ef\u4ee5\u9ed8\u8ba4\u5b9e\u73b0\u7279\u5f81, \u8fd9\u6837\u672c\u5730\u5c31\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e86\\n\\n4. \u7279\u5f81\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570, \u4e5f\u5c31\u662f\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e2a\u7279\u5f81\u7684\u4efb\u610f\u7c7b\u578b\\n\\n    ```rust\\n    // \u5355\u72ec\u4f7f\u7528\\n    pub fn notify(item: impl Summary) {\\n        println!(\\"Breaking news! {}\\", item.summarize());\\n    }\\n\\n    // \u63d0\u53d6\u51fa\u6765\u4f7f\u7528\\n    pub fn notify<T: Summary>(item: T) {\\n        println!(\\"Breaking news! {}\\", item.summarize());\\n    }\\n\\n    // \u6b63\u5e38\u5355\u72ec\u4f7f\u7528\u591a\u4e2a\\n    pub fn notify(item1: impl Summary, item2: impl Summary) {\\n\\n    }\\n\\n    // \u4f46\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\\n    pub fn notify<T: Summary>(item1: T, item2: T) {\\n\\n    }\\n\\n    // \u53ef\u4ee5\u76f8\u52a0\\n    pub fn notify(item: impl Summary + Display) {\\n\\n    }\\n\\n    // \u5f53\u7136\u4e5f\u53ef\u4ee5\u63d0\u53d6\u51fa\u6765\\n    pub fn notify<T: Summary + Display>(item: T) {\\n\\n    }\\n\\n    // \u4f46\u5982\u679c\u6709\u591a\u4e2a\u7684\u65f6\u5019 \u5c31\u4f1a\u5f88\u4e71\\n    fn some_function<T: Display + Clone, U: Clone + Debug>(t: T, u: U) -> i32 {\\n\\n    }\\n\\n    // \u53ef\u4ee5\u4f7f\u7528 where \u6765\u540e\u7eed\u8865\u5145\u8bf4\u660e\\n    fn some_function<T, U>(t: T, u: U) -> i32\\n        where T: Display + Clone,\\n            U: Clone + Debug\\n    {\\n\\n    }\\n    ```\\n\\n5. \u65e2\u7136\u80fd\u505a\u53c2\u6570, \u90a3\u4e48\u4e5f\u80fd\u505a\u8fd4\u56de\u503c\\n\\n    ```rust\\n    fn returns_summarizable() -> impl Summary {\\n        Tweet {\\n            username: String::from(\\"horse_ebooks\\"),\\n            content: String::from(\\"of course, as you probably already know, people\\"),\\n            reply: false,\\n            retweet: false,\\n        }\\n    }\\n\\n    // \u4f46\u6709\u5c40\u9650\u6027 \u4e5f\u5c31\u662f\u8bf4 \u8fd9\u6837\u662f\u4e0d\u5141\u8bb8\u7684 \u53ea\u5141\u8bb8\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\\n    fn returns_summarizable(switch: bool) -> impl Summary {\\n        if switch {\\n            NewsArticle {\\n                // ...\\n            }\\n        } else {\\n            Tweet {\\n                // ...\\n            }\\n        }\\n    }\\n    ```\\n\\n6. \u5b8c\u6210\u4e4b\u524d\u7684\u6bd4\u5927\u5c0f\\n\\n    ```rust\\n    // PartialOrd \u53ef\u4ee5\u6bd4\u8f83 Copy \u53ef\u4ee5\u8fdb\u884c\u62f7\u8d1d \u4ee3\u8868\u5c31\u662f\u5728\u5806\u4e0a\u7684\u503c\\n    fn largest<T: PartialOrd + Copy>(list: &[T]) -> T {\\n        let mut largest = list[0];\\n\\n        for &item in list.iter() {\\n            if item > largest {\\n                largest = item;\\n            }\\n        }\\n\\n        largest\\n    }\\n    ```\\n\\n#### `lifetime` \u5bff\u547d\\n\\n1. \u4e09\u6761\u89c4\u5219\\n   1. \u4f5c\u4e3a\u5f15\u7528\u7684\u53c2\u6570\u90fd\u6709\u5176\u81ea\u5df1\u7684\u5bff\u547d `fn foo<\'a, \'b>(x: &\'a i32, y: &\'b i32);`\\n   2. \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6709\u8f93\u5165\u5bff\u547d\u7684\u53c2\u6570\u7684\u65f6\u5019, \u90a3\u4e48\u8fd4\u56de\u7684\u4e5f\u5f97\u662f\u8fd9\u4e2a\u5e26\u6709\u5bff\u547d\u7684\u53c2\u6570\\n   3. \u5982\u679c\u6709\u591a\u4e2a\u4e0d\u540c\u5bff\u547d\u53c2\u6570, \u4f46\u5176\u4e2d\u6709\u7684\u662f `&self` \u6216\u8005\u662f `&mut self`, \u90a3\u4e48\u5c31\u628a `self` \u5206\u914d\u7ed9\u6240\u6709\u8f93\u51fa\u5bff\u547d\u53c2\u6570???\\n\\n    ```rust\\n    // \u5206\u6790 1\\n    fn first_word(s: &str) -> &str {\\n    // \u7531\u4e8e\u6ca1\u6709\u6307\u5b9a \u90a3\u4e48\u5c31\u7b97\u662f \u5148\u6267\u884c\u7b2c\u4e00\u6761\u89c4\u5219 \u7ed9\u6240\u6709\u7684\u5f15\u7528\u53c2\u6570\u6307\u5b9a\u5bff\u547d\\n    fn first_word(s: &\'a str) -> &str {\\n    // \u53c8\u53ea\u6709\u4e00\u4e2a\u5bff\u547d\u7c7b\u578b, \u90a3\u4e48\u628a\u8f93\u5165\u7684\u5bff\u547d\u7ed9\u5230\u8f93\u51fa\\n    fn first_word(s: &\'a str) -> &\'a str {\\n    // \u90a3\u4e48\u73b0\u5728\uff0c\u6b64\u51fd\u6570\u6240\u6709\u5f15\u7528\u90fd\u5177\u6709\u5bff\u547d\uff0c\u5e76\u4e14\u7f16\u8bd1\u5668\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u5206\u6790\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u7528\u7f16\u5199\u8fd9\u4e2a\u5bff\u547d\u4e86\\n\\n\\n    // \u5206\u6790 2\\n    fn longest(x: &str, y: &str) -> &str {\\n    // \u7531\u4e8e\u6ca1\u6709\u6307\u5b9a \u5165\u53c2\u7684\u5bff\u547d \u6240\u4ee5\u5148\u6267\u884c\u7b2c\u4e00\u6761\u89c4\u5219\\n    fn longest(x: &\'a str, y: &\'b str) -> &str {\\n    // \u7b2c\u4e8c\u6761\u89c4\u5219\u9002\u7528? \u7531\u4e8e\u6709\u591a\u4e2a\u4e0d\u9002\u7528\\n    // \u7b2c\u4e09\u6761\u89c4\u5219\u5462? \u6ca1\u6709 self \u4e5f\u4e0d\u9002\u7528\\n    // \u6240\u4ee5\u8fd9\u4e2a\u7f16\u8bd1\u7684\u65f6\u5019 \u5c31\u4f1a\u62a5\u9519\\n    ```\\n\\n### \u81ea\u52a8\u5316\u6d4b\u8bd5\\n\\n### \u6784\u5efa\u547d\u4ee4\u884c\u7a0b\u5e8f\\n\\n### \u95ed\u5305\u548c\u8fed\u4ee3\u5668\\n\\n#### \u95ed\u5305\\n\\n1. \u53ef\u4ee5\u4e0d\u6307\u5b9a\u6570\u636e\u7c7b\u578b, \u4f46\u4f7f\u7528\u7684\u65f6\u5019 \u4e0d\u80fd\u4e71\u7528, \u4ed6\u4e0d\u662f\u6cdb\u578b\\n\\n    ```rust\\n    fn  add_one_v1   (x: u32) -> u32 { x + 1 }  // \u51fd\u6570 \u5b8c\u6574\u7248\\n    let add_one_v2 = |x: u32| -> u32 { x + 1 }; // \u95ed\u5305 \u5b8c\u6574\u7248\\n    let add_one_v3 = |x|             { x + 1 }; // \u95ed\u5305 \u5220\u9664\u6307\u5b9a\u6570\u636e\u7c7b\u578b\\n    let add_one_v4 = |x|               x + 1  ; // \u95ed\u5305 \u5220\u9664\u82b1\u62ec\u53f7\\n\\n\\n    // \u4f46\u5728\u4f7f\u7528\u540e\u4e0a\\n    let example_closure = |x| x;\\n\\n    let s = example_closure(String::from(\\"hello\\")); // \u4f7f\u7528\u4e86\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\\n    let n = example_closure(5);                     // \u53c8\u4f7f\u7528\u4e86 \u6570\u5b57  \u8fd9\u91cc\u4f1a\u5d29\\n    ```\\n\\n2. \u95ed\u5305\u4e5f\u662f\u6709\u7279\u5f81\u7684, \u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u6cdb\u578b\u7684\u53c2\u6570\u4f20\u5165\u4e86 `Fn` `FnMut` `FnOnce`\\n\\n    ```rust\\n    struct Cacher<T>\\n        where T: Fn(u32) -> u32\\n    {\\n        calculation: T,\\n        value: Option<u32>,\\n    }\\n    ```\\n\\n3. \u95ed\u5305\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8\u7684\u53d8\u91cf\\n\\n    ```rust\\n    fn main() {\\n        let x = 4;\\n\\n        let equal_to_x = |z| z == x;    // \u4f7f\u7528\u4e86 x\\n        // fn equal_to_x(z: i32) -> bool { z == x } //\u8fd9\u4e2a\u5c31\u4f1a\u5d29\\n\\n        let y = 4;\\n\\n        assert!(equal_to_x(y));\\n    }\\n    ```\\n\\n    \u6240\u4ee5\u8bf4\u95ed\u5305\u662f\u4f1a\u5f3a\u5236\u83b7\u53d6\u6240\u6709\u6743\u7684\\n    `FnOnce`    \u83b7\u53d6\u5b8c\u540e \u4f46\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\\n    `FnMut`     \u53ef\u53d8\u7684\u5f62\u5f0f\u83b7\u53d6\u4e86\u503c\\n    `Fn`        \u4e0d\u53ef\u53d8\u7684\u5f62\u5f0f\u83b7\u53d6\u4e86\u503c\\n\\n#### \u8fed\u4ee3\u5668\\n\\n1. \u7279\u5f81\u4e3a `Iterator` \u548c \u5177\u6709 `next` \u65b9\u6cd5\\n\\n    ```rust\\n    pub trait Iterator {\\n        type Item;\\n\\n        fn next(&mut self) -> Option<Self::Item>;\\n    }\\n    ```\\n\\n2. `next` \u662f\u4f1a\u6d88\u8017\u6389\u7684\\n\\n    ```rust\\n    #[test]\\n    fn iterator_demonstration() {\\n        let v1 = vec![1, 2, 3];\\n\\n        let mut v1_iter = v1.iter();\\n\\n        assert_eq!(v1_iter.next(), Some(&1));\\n        assert_eq!(v1_iter.next(), Some(&2));\\n        assert_eq!(v1_iter.next(), Some(&3));\\n        assert_eq!(v1_iter.next(), None);\\n    }\\n\\n    fn iterator_sum() {\\n        let v1 = vec![1, 2, 3];\\n        let v1_iter = v1.iter();\\n        let total: i32 = v1_iter.sum();\\n        assert_eq!(total, 6);\\n    }\\n    ```\\n\\n3. \u8fed\u4ee3\u5668\u662f\u4e0d\u4f1a\u81ea\u5df1\u8c03\u7528\u7684\\n\\n    ```rust\\n    let v1: Vec<i32> = vec![1, 2, 3];\\n\\n    v1.iter().map(|x| x + 1);   // \u8fd9\u4e48\u4f7f\u7528\u65f6\u4f1a\u6536\u5230\u8b66\u544a \u8bf4\u660e\u8fd9\u884c\u4ee3\u7801\u6ca1\u6709\u8d77\u5230\u4efb\u4f55\u4f5c\u7528\\n\\n    let v2: Vec<_> = v1.iter().map(|x| x + 1).collect();    // \u76f4\u63a5\u8fdb\u884c\u8fed\u4ee3\\n\\n    assert_eq!(v2, vec![2, 3, 4]);\\n    ```\\n\\n4. \u4f7f\u7528\u573a\u666f\\n\\n    ```rust\\n    #![allow(unused_variables)]\\n    fn main() {\\n    #[derive(PartialEq, Debug)]\\n    struct Shoe {\\n        size: u32,\\n        style: String,\\n    }\\n\\n    fn shoes_in_my_size(shoes: Vec<Shoe>, shoe_size: u32) -> Vec<Shoe> {\\n        shoes.into_iter()\\n            .filter(|s| s.size == shoe_size)\\n            .collect()\\n    }\\n\\n    #[test]\\n    fn filters_by_size() {\\n        let shoes = vec![\\n            Shoe { size: 10, style: String::from(\\"sneaker\\") },\\n            Shoe { size: 13, style: String::from(\\"sandal\\") },\\n            Shoe { size: 10, style: String::from(\\"boot\\") },\\n        ];\\n\\n        let in_my_size = shoes_in_my_size(shoes, 10);\\n\\n        assert_eq!(\\n            in_my_size,\\n            vec![\\n                Shoe { size: 10, style: String::from(\\"sneaker\\") },\\n                Shoe { size: 10, style: String::from(\\"boot\\") },\\n            ]\\n        );\\n    }\\n    }\\n    ```\\n\\n### Crates.io\\n\\n### \u667a\u80fd\u6307\u9488\\n\\n1. `Rc<T>` \u5141\u8bb8\u5bf9\u4e00\u4e2a\u53d8\u91cf\u6709\u591a\u4e2a\u6240\u6709\u8005\uff1b`Box<T>` \u548c `RefCell<T>` \u53ea\u80fd\u6709\u4e00\u4e2a\u6240\u6709\u8005\u3002\\n2. `Box<T>` \u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u68c0\u67e5\u662f\u4e0d\u53ef\u53d8\u8fd8\u662f\u53ef\u53d8\u7684\uff1b`Rc<T>` \u53ea\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u68c0\u67e5\u4e0d\u53ef\u53d8\u7684\u5f15\u7528\uff1b`RefCell<T>` \u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u4e0d\u53ef\u53d8\u6216\u53ef\u53d8\u7684\u5f15\u7528\u3002\\n3. \u7531\u4e8e`RefCell<T>`\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u53ef\u53d8\u5f15\u7528\uff0c\u56e0\u6b64 `RefCell<T>` \u5373\u4f7f`RefCell<T>` \u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4e5f\u53ef\u4ee5\u5728\u5185\u90e8\u6539\u53d8\u503c\u3002\\n\\n### \u5e76\u53d1\\n\\n#### \u7ebf\u7a0b\\n\\n1. \u521b\u5efa\u7ebf\u7a0b `thread::spawn`\\n\\n2. \u7b49\u5f85\u8be5\u7ebf\u7a0b\u8dd1\u5b8c `join` \u963b\u585e\u7684\\n\\n3. \u7ebf\u7a0b\u5185\u4f7f\u7528\u5916\u90e8\u7684\u503c \u5176\u5b9e\u4e5f\u53ef\u4ee5\u770b\u505a\u662f \u95ed\u5305\u5185\u4f7f\u7528\u5916\u90e8\u53d8\u91cf \u4f46\u95ed\u5305\u662f\u5728\u5355\u4e00\u7ebf\u7a0b\u4e0b\u4f7f\u7528\u7684 `move` \u662f\u9488\u5bf9\u7ebf\u7a0b\u95ed\u5305\u7684 \u6240\u4ee5 \u4f1a\u5f3a\u5236\u83b7\u53d6\u6240\u6709\u6743\\n\\n#### \u901a\u9053\\n\\n1. \u4f8b\u5b50\\n\\n    ```rust\\n    use std::thread;\\n    use std::sync::mpsc;\\n\\n    fn main() {\\n        let (tx, rx) = mpsc::channel();\\n\\n        thread::spawn(move || {\\n            let val = String::from(\\"hi\\");\\n            tx.send(val).unwrap();  // \u79fb\u4ea4\u6240\u6709\u6743\\n        });\\n\\n        let received = rx.recv().unwrap();\\n        println!(\\"Got: {}\\", received);\\n    }\\n    ```\\n\\n#### \u4e0a\u9501 \\n\\n1. \u4e92\u65a5 \u548c \u539f\u5b50\u5f15\u7528\u8ba1\u6570\\n\\n    ```rust\\n    use std::sync::{Mutex, Arc};\\n    use std::thread;\\n\\n    fn main() {\\n        let counter = Arc::new(Mutex::new(0));\\n        let mut handles = vec![];\\n\\n        for _ in 0..10 {\\n            let counter = Arc::clone(&counter);\\n            let handle = thread::spawn(move || {\\n                let mut num = counter.lock().unwrap();\\n\\n                *num += 1;\\n            });\\n            handles.push(handle);\\n        }\\n\\n        for handle in handles {\\n            handle.join().unwrap();\\n        }\\n\\n        println!(\\"Result: {}\\", *counter.lock().unwrap());\\n    }\\n    ```"},{"id":"/2019/mac","metadata":{"permalink":"/blog/2019/mac","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/mac.mdx","title":"mac\u4e0a\u542f\u52a8\u6587\u4ef6\u670d\u52a1\u5668","description":"Title: \u4f7f\u7528 mac \u81ea\u5e26\u7684apache \u542f\u52a8\u6587\u4ef6\u670d\u52a1\u5668","date":"2019-09-10T22:39:06.000Z","formattedDate":"2019\u5e749\u670810\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":0.22,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"mac\u4e0a\u542f\u52a8\u6587\u4ef6\u670d\u52a1\u5668","tags":["Mac","\u7b14\u8bb0"],"comments":true,"date":"2019-09-10 22:39:06 +0800","published":true},"prevItem":{"title":"Rust","permalink":"/blog/2019/rust"},"nextItem":{"title":"ruby\u5728mac\u4e0a\u7684\u5347\u7ea7","permalink":"/blog/2019/ruby"}},"content":"Title: \u4f7f\u7528 *mac* \u81ea\u5e26\u7684*apache* \u542f\u52a8\u6587\u4ef6\u670d\u52a1\u5668\\n\\n1. \u5f00\u542f *apache*\\n\\n    `sudo apachectl start`\\n\\n2. `cd` \u5230\u5bf9\u5e94\u7684\u76ee\u5f55\u4e0b\\n3. \u5f00\u542f *HttpServer*\\n\\n    `python -m SimpleHTTPServer`\\n\\n4. \u8bbf\u95ee\u94fe\u63a5\\n\\n    `http://localhost:8000`"},{"id":"/2019/ruby","metadata":{"permalink":"/blog/2019/ruby","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/ruby.mdx","title":"ruby\u5728mac\u4e0a\u7684\u5347\u7ea7","description":"Title: mac\u81ea\u5e26\u7684ruby\u7248\u672c\u8fc7\u4f4e","date":"2019-09-07T00:40:54.000Z","formattedDate":"2019\u5e749\u67087\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"ruby","permalink":"/blog/tags/ruby"}],"readingTime":0.25,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"ruby\u5728mac\u4e0a\u7684\u5347\u7ea7","tags":["Mac","\u7b14\u8bb0","ruby"],"comments":true,"date":"2019-09-07 00:40:54 +0800","published":true},"prevItem":{"title":"mac\u4e0a\u542f\u52a8\u6587\u4ef6\u670d\u52a1\u5668","permalink":"/blog/2019/mac"},"nextItem":{"title":"vscode\u63d2\u4ef6\u5f00\u53d1","permalink":"/blog/2019/vscode/plugin"}},"content":"Title: *mac*\u81ea\u5e26\u7684*ruby*\u7248\u672c\u8fc7\u4f4e\\n\\n## \u5b89\u88c5*rvm*\u73af\u5883\u6765\u5b89\u88c5*ruby*\u73af\u5883\\n\\n    `curl -L https://get.rvm.io | bash -s stable`\\n\\n## \u67e5\u770b\u5f53\u524d\u7248\u672c\\n\\n    `rvm list known`\\n\\n## \u5b89\u88c5\u6307\u5b9a*ruby*\u7248\u672c\\n\\n    `rvm install 2.6.3`\\n\\ndone!"},{"id":"/2019/vscode/plugin","metadata":{"permalink":"/blog/2019/vscode/plugin","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/vscode/plugin.mdx","title":"vscode\u63d2\u4ef6\u5f00\u53d1","description":"Title:\u76ee\u7684\u662f\u4e3a\u4e86\u5c06\u526a\u5207\u677f\u91cc\u9762\u7684\u56fe\u7247\u4e00\u952ebase64\u5230markdown\u5f53\u4e2d, \u7701\u53bb\u5efa\u7acb\u56fe\u5e8a\u7684\u6b65\u9aa4. \u5f53\u7136\u540e\u7eed\u662f\u6709\u53ef\u80fd\u642d\u5efa\u56fe\u5e8a\u53bb\u4fdd\u5b58\u56fe\u7247.","date":"2019-08-22T22:35:39.000Z","formattedDate":"2019\u5e748\u670822\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"vscode","permalink":"/blog/tags/vscode"}],"readingTime":0.495,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"vscode\u63d2\u4ef6\u5f00\u53d1","tags":["Mac","\u7b14\u8bb0","vscode"],"comments":true,"date":"2019-08-22 22:35:39 +0800","published":true},"prevItem":{"title":"ruby\u5728mac\u4e0a\u7684\u5347\u7ea7","permalink":"/blog/2019/ruby"},"nextItem":{"title":"zsh\u7684\u4f7f\u7528","permalink":"/blog/2019/zsh"}},"content":"Title:\u76ee\u7684\u662f\u4e3a\u4e86\u5c06\u526a\u5207\u677f\u91cc\u9762\u7684\u56fe\u7247\u4e00\u952ebase64\u5230markdown\u5f53\u4e2d, \u7701\u53bb\u5efa\u7acb\u56fe\u5e8a\u7684\u6b65\u9aa4. \u5f53\u7136\u540e\u7eed\u662f\u6709\u53ef\u80fd\u642d\u5efa\u56fe\u5e8a\u53bb\u4fdd\u5b58\u56fe\u7247.\\n\\n## \u524d\u671f\u51c6\u5907\\n\\n* \u9700\u8981\u5b89\u88c5 *node.js* `brew install node`\\n* \u5229\u7528 *npm* \u5b89\u88c5 \u53e6\u5916\u4e24\u4e2a\u5de5\u5177 *Yeoman* \u548c *VS Code Extension generator* . \u7c7b\u4f3c\u4e8e\u811a\u624b\u67b6 `npm install -g yo generator-code`\\n\\n## \u751f\u6210\u5de5\u7a0b\\n\\n`yo code` \u5373\u53ef"},{"id":"/2019/zsh","metadata":{"permalink":"/blog/2019/zsh","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/zsh.mdx","title":"zsh\u7684\u4f7f\u7528","description":"Title:\u8c8c\u4f3c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u7684\u7ec8\u7aef\u53d8\u5f97\u5f88\u597d\u770b\u5462","date":"2019-08-21T23:33:55.000Z","formattedDate":"2019\u5e748\u670821\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"item2","permalink":"/blog/tags/item-2"},{"label":"zsh","permalink":"/blog/tags/zsh"},{"label":"antigen","permalink":"/blog/tags/antigen"}],"readingTime":2.605,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"zsh\u7684\u4f7f\u7528","tags":["Mac","\u7b14\u8bb0","item2","zsh","antigen"],"comments":true,"date":"2019-08-21 23:33:55 +0800","published":true},"prevItem":{"title":"vscode\u63d2\u4ef6\u5f00\u53d1","permalink":"/blog/2019/vscode/plugin"},"nextItem":{"title":"Mac\u7684\u5305\u7ba1\u7406\u5de5\u5177brew","permalink":"/blog/2019/brew"}},"content":"Title:\u8c8c\u4f3c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u7684\u7ec8\u7aef\u53d8\u5f97\u5f88\u597d\u770b\u5462\\n\\n## \u4f7f\u7528 *zsh*\\n\\n\u5207\u6362\u9ed8\u8ba4\u7684\u7ec8\u7aef *zsh*, \u8fd9\u4f1a\u63d0\u793a\u4f60\u8f93\u5165\u5bc6\u7801.\\n\\n`chsh -s /bin/zsh`\\n\\n\u5982\u679c\u60f3\u6539\u56de\u6765\u7684\u8bdd\\n\\n`chsh -s /bin/bash`\\n\\n## \u4f7f\u7528 *antigen* \u6765\u5b89\u88c5 *oh my zsh*\\n\\n`brew install antigen`\\n\\n\u8fd9\u91cc\u5b89\u88c5\u5b8c\u540e\u4f1a\u6709\u4e2a\u63d0\u793a\u8bf4: \u6e90\u76ee\u5f55\u5728\u67d0\u4e2a\u4f4d\u7f6e, \u8ba9\u4f60\u81ea\u5df1\u5199\u5230 **.zshrc** \u91cc\u9762\u53bb.\\n\\n### \u5173\u4e8e *antigen* \u7684\u7b80\u5355\u4ecb\u7ecd\\n\\n> \u4e00\u6b3e\u7c7b\u4f3c\u5728 *bash* \u4e0b\u7ba1\u7406\u7684 *brew* \u5de5\u5177, \u56e0\u4e3a\u76f4\u63a5\u4f7f\u7528 *oh my zsh* \u4f1a\u4f7f\u5f97\u4f60\u7684\u914d\u7f6e\u53d8\u5f97\u7a0d\u7a0d\u590d\u6742.\\n\\n1. \u5b89\u88c5\u5b98\u65b9\u63d2\u4ef6 `antigen bundle brew`\\n2. \u5b89\u88c5*github*\u4e0a\u7684\u63d2\u4ef6 `antigen bundle zsh-users/zsh-syntax-highlighting`\\n3. \u751f\u6210\u7f13\u5b58, \u52a0\u5feb\u4e0b\u6b21\u8f7d\u5165\u8fc7\u7a0b `antigen cache-gen`\\n4. \u66f4\u65b0\u67d0\u4e2a\u6216\u8005\u5168\u90e8\u63d2\u4ef6 `antigen update [<bundle-name>]`: \u5982\u679c\u7559\u7a7a\u90a3\u4e48\u5c31\u662f\u66f4\u65b0\u5168\u90e8.\\n5. \u56de\u6eda\u66f4\u65b0 `antigen revert`: \u56de\u6eda\u5230\u66f4\u65b0\u524d\u7684\u72b6\u6001\\n6. \u5217\u51fa\u672c\u5730\u5b89\u88c5\u7684\u63d2\u4ef6\u5217\u8868 `antigen list [--simple|--short|--long]`\\n7. \u6e05\u7406\u6ca1\u6709\u4f7f\u7528\u5230\u7684\u63d2\u4ef6 `antigen cleanup`\\n8. \u5220\u9664\u63d2\u4ef6 `antigen purge`\\n9. \u4f7f\u7528zsh\u6846\u67b6 `antigen use oh-my-zsh`\\n10. \u4f7f\u7528\u4e3b\u9898 `antigen theme`\\n11. \u5e94\u7528\u66f4\u6539 `antigen apply`\\n12. \u81ea\u8eab\u66f4\u65b0 `antigen selfupdate`\\n\\n## \u65b0\u5efa **.zshrc** \u6587\u4ef6 \u586b\u5165\u4e0b\u9762\u5185\u5bb9\\n\\n```shell\\nsource /usr/local/share/antigen/antigen.zsh\\n\\n# \u52a0\u8f7doh-my-zsh\u5e93\\nantigen use oh-my-zsh\\n\\n# \u52a0\u8f7d\u539f\u7248oh-my-zsh\u4e2d\u7684\u529f\u80fd(robbyrussell\'s oh-my-zsh).\\nantigen bundle brew\\nantigen bundle command-not-found\\nantigen bundle git\\nantigen bundle pip\\n\\n# \u8bed\u6cd5\u9ad8\u4eae\u529f\u80fd\\nantigen bundle zsh-users/zsh-syntax-highlighting\\n\\n# \u4ee3\u7801\u63d0\u793a\u529f\u80fd\\nantigen bundle zsh-users/zsh-autosuggestions\\n\\n# \u81ea\u52a8\u8865\u5168\u529f\u80fd\\nantigen bundle zsh-users/zsh-completions\\n\\n# \u8fd9\u4e2a\u4e0d\u77e5\u9053\u662f\u5565\\nantigen bundle zsh-users/zsh-apple-touchbar\\n\\n# \u52a0\u8f7d\u4e3b\u9898\\n# antigen theme robbyrussell\\nantigen theme https://github.com/bhilburn/powerlevel9k powerlevel9k\\n\\n# \u4fdd\u5b58\u66f4\u6539\\nantigen apply\\n\\n## \u914d\u5408powerlevel9k\u4e3b\u9898\u4f7f\u7528\\nPOWERLEVEL9K_PROMPT_ON_NEWLINE=true\\nPOWERLEVEL9K_RPROMPT_ON_NEWLINE=true\\n\\nPOWERLEVEL9K_MODE=\'awesome-patched\'\\nPOWERLEVEL9K_SHORTEN_DIR_LENGTH=2\\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon dir vcs)\\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status nvm node_version)\\n\\nPOWERLEVEL9K_OS_ICON_BACKGROUND=\\"white\\"\\nPOWERLEVEL9K_OS_ICON_FOREGROUND=\\"blue\\"\\nPOWERLEVEL9K_DIR_HOME_FOREGROUND=\\"white\\"\\nPOWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND=\\"white\\"\\nPOWERLEVEL9K_DIR_DEFAULT_FOREGROUND=\\"white\\"\\n\\n```\\n\\n## \u8fd9\u65f6\u5019\u7ec8\u7aef\u754c\u9762\u4f1a\u5448\u73b0\u4e3a\u90e8\u5206\u4e71\u7801, \u56e0\u4e3a\u7f3a\u5c11\u5bf9\u5e94\u7684\u56fe\u6807\u5b57\u4f53\\n\\n\u5728\u7ec8\u7aef\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4:\\n\\n```shell\\n# \u4e0b\u8f7d\\ngit clone https://github.com/powerline/fonts.git\\n# \u5b89\u88c5\\ncd fonts\\n./install.sh\\n# \u5220\u9664\u5b89\u88c5\u5305\\ncd ..\\nrm -rf fonts\\n```\\n\\n## \u5728\u5bf9\u5e94\u7684\u7ec8\u7aef\u5de5\u5177\u5185\u9009\u62e9\u5b89\u88c5\u7684\u5b57\u4f53\\n\\n\u4ee5 *VSCode* \u4e3a\u4f8b, \u5728\u8bbe\u7f6e\u754c\u9762\u5185\u67e5\u627e\u5b57\u4f53, \u7136\u540e\u627e\u5230\u7ec8\u7aef\u8f93\u5165 *Meslo LG S for Powerline* \u5c31\u53ef\u4ee5\u4e86!"},{"id":"/2019/brew","metadata":{"permalink":"/blog/2019/brew","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/brew.mdx","title":"Mac\u7684\u5305\u7ba1\u7406\u5de5\u5177brew","description":"Title: brew\u5de5\u5177\u7684\u4f7f\u7528","date":"2019-08-06T14:55:00.000Z","formattedDate":"2019\u5e748\u67086\u65e5","tags":[{"label":"Mac","permalink":"/blog/tags/mac"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"brew","permalink":"/blog/tags/brew"}],"readingTime":2.74,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Mac\u7684\u5305\u7ba1\u7406\u5de5\u5177brew","tags":["Mac","\u7b14\u8bb0","brew"],"comments":true,"date":"2019-08-06 14:55:00 +0800","published":true},"prevItem":{"title":"zsh\u7684\u4f7f\u7528","permalink":"/blog/2019/zsh"},"nextItem":{"title":"SSH Windows","permalink":"/blog/2019/ssh"}},"content":"Title: brew\u5de5\u5177\u7684\u4f7f\u7528\\n\\n## \u76f8\u5173\u6307\u4ee4\u4ecb\u7ecd\\n\\n1. \u5347\u7ea7\u672c\u4f53\\n\\n   `brew update`\\n2. \u5347\u7ea7\u6240\u6709\u7a0b\u5e8f\\n\\n    `brew upgrade`\\n3. \u67e5\u770b\u672c\u5730\u5b89\u88c5\u4e86\u54ea\u4e9b\'\u73af\u5883\'\u548c\'\u5e94\u7528\'\\n\\n    ```shell\\n    brew list\\n    brew cask list\\n    ```\\n\\n## \u76f8\u5173\u4f7f\u7528\u6280\u5de7\\n\\n* \u7ecf\u5e38\u5728\u5b89\u88c5\u7684\u4f1a\u53bb\u68c0\u67e5\u672c\u4f53\u7684\u66f4\u65b0, \u53ef\u80fd\u4f1a\u5bfc\u81f4\u957f\u65f6\u95f4\u7684\u7b49\u5f85. \u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u5173\u95ed\u81ea\u52a8\u66f4\u65b0. `export HOMEBREW_NO_AUTO_UPDATE=true` \u4f46\u6bcf\u6b21\u91cd\u542f\u540e\u90fd\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e, \u53ef\u4ee5\u5c06\u8fd9\u884c\u52a0\u5165\u5230\u5bf9\u5e94\u7684shell\u914d\u7f6e\u6587\u4ef6\u4e2d\u53bb.\\n\\n## \u4e2a\u4eba\u5df2\u7ecf\u5b89\u88c5\u7684\\n\\n```shell\\nbrew cask install visual-studio-code\\nbrew cask install the-unarchiver\\nbrew cask install google-chrome\\nbrew cask install sourcetree\\nbrew cask install wechat\\nbrew cask install iterm2\\nbrew cask install powershell\\nbrew cask install sogouinput ## \u9700\u8981\u81ea\u5df1\u91cd\u65b0\u6253\u5f00\u4e00\u4e0b\\nbrew cask install qq\\nbrew cask install synergy\\nbrew cask install unity-hub\\nbrew cask install beyond-compare\\nbrew cask install steam\\nbrew cask install neteasemusic\\nbrew cask install baidunetdisk\\nbrew cask install vlc\\nbrew cask install aria2gui\\nbrew cask install teamviewer\\nbrew cask install background-music ## \u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u63a8\u8350\u4e00\u4e0b \u5f88\u8d5e! \u7c7b\u4f3cwindows\u4e0a\u7684\u58f0\u97f3\u5408\u6210\u5668\\nbrew cask install vnc-viewer\\nbrew cask install impactor\\nbrew cask install thunder\\nbrew cask install epic-games\\nbrew cask install svnx\\nbrew cask install visual-studio\\nbrew cask install weiyun\\nbrew cask install spotifree\\nbrew cask install spotify\\nbrew cask install free-download-manager ## \u9876\u66ff\u8fc5\u96f7\u7684\\nbrew cask install tencent-lemon ## \u9876\u66ffCMM\u7684\\nbrew cask install android-studio\\nbrew cask install genymotion\\nbrew cask install airserver ## \u54ce~ \u8fd9\u4e2a\u8fd8\u662f\u4e4b\u540e\u81ea\u884c\u7834\u89e3\u6216\u8005\u4ed8\u8d39\u5427 \u53ea\u80fd14\u5929\\nbrew cask install java\\nbrew cask install postman\\nbrew cask install microsoft-remote-desktop-beta\\nbrew cask install qqmusic\\nbrew cask install adobe-air\\nbrew cask install poedit\\nbrew cask install yinxiangbiji\\nbrew cask install mailmaster\\n\\nbrew install antigen ## zsh\u4e0b\u7684\u7ba1\u7406\u5de5\u5177\\nbrew install python3\\nbrew install node\\nbrew install dotnet\\nbrew install ruby ## \u8fd9\u6837\u5b89\u88c5\u7684\u5e76\u4e0d\u80fd\u6b63\u5e38\u4f7f\u7528 \u9700\u8981\u914d\u7f6e\u73af\u5883 \u5efa\u8bae\u91c7\u7528 rvm\u6765\u5b89\u88c5\\n```\\n\\n## \u989d\u5916\u65e0\u6cd5\u5728brew\u4e0a\u627e\u5230\u7684\\n\\n1. \u4eba\u4eba\u5f71\u89c6\\n2. Parallels Desktop\\n3. C4D\\n4. MAYA\\n\\n### *VSCode* \u6240\u4f7f\u7528\u5230\u7684\u63d2\u4ef6\\n\\n1. Better Align -> \u4ee3\u7801\u5bf9\u9f50 -> \u9700\u8981\u5728\u952e\u76d8\u5feb\u6377\u65b9\u5f0f\u91cc\u9762\u52a0\u5165\u952e\u503c\u7ed1\u5b9a\\n2. C#\\n3. C# XML Documentation Comments\\n4. Chinese\\n5. Comment Translate\\n6. Debugger for Unity\\n7. GitLens\\n8. Jekyll Snippets\\n9. Jekyll Syntax Support\\n10. luaide -> \u5bc6\u7801\u4e0d\u80fd\u6709\u7b26\u53f7\\n11. Markdown All in One -> \u5feb\u6377\u952e\\n12. markdownlint -> \u8bed\u6cd5\u7ea0\u67e5\\n13. Material Icon Theme\\n14. Material Theme\\n15. Partial Diff -> \u4ee3\u7801\u6bd4\u5bf9\\n16. Paste Image\\n17. Python\\n18. Python\\n19. TSLint"},{"id":"/2019/ssh","metadata":{"permalink":"/blog/2019/ssh","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/ssh.mdx","title":"SSH Windows","description":"Title: Windows \u4e0b\u751f\u6210 ssh \u7528\u6765\u8fde\u63a5 git","date":"2019-08-02T17:07:42.000Z","formattedDate":"2019\u5e748\u67082\u65e5","tags":[{"label":"Windows","permalink":"/blog/tags/windows"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"ssh","permalink":"/blog/tags/ssh"}],"readingTime":0.395,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"SSH Windows","tags":["Windows","\u7b14\u8bb0","ssh"],"comments":true,"date":"2019-8-2 17:07:42 +0800","published":true},"prevItem":{"title":"Mac\u7684\u5305\u7ba1\u7406\u5de5\u5177brew","permalink":"/blog/2019/brew"},"nextItem":{"title":"Windows To Go","permalink":"/blog/2019/wtg"}},"content":"Title: Windows \u4e0b\u751f\u6210 *ssh* \u7528\u6765\u8fde\u63a5 *git*\\n\\n## \u751f\u6210\\n\\n`ssh-keygen -t rsa -C \\"i.zuucol@gmail.com\\"`\\n\\n1. \u7136\u540e\u4ed6\u4f1a\u8be2\u95ee\u4f60\u8981\u5b58\u653e\u7684\u4f4d\u7f6e -> \u76f4\u63a5\u56de\u8f66\u5c31\u662f\u9ed8\u8ba4\u4f4d\u7f6e -> `C:\\\\Users\\\\Danyow/.ssh/id_rsa`\\n2. \u7136\u540e\u8ba9\u4f60\u8f93\u5165\u5bc6\u7801 -> \u76f4\u63a5\u56de\u8f66\u5c31\u662f\u4e3a\u7a7a\u5373\u53ef\\n3. \u7136\u540e\u83b7\u53d6\u521a\u521a\u751f\u6210\u51fa\u6765\u7684\u516c\u94a5 `cat C:\\\\Users\\\\Danyow\\\\.ssh\\\\id_rsa.pub`"},{"id":"/2019/wtg","metadata":{"permalink":"/blog/2019/wtg","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/wtg.mdx","title":"Windows To Go","description":"Title: Windows To Go \u7684\u4e00\u4e9b\u4f7f\u7528\u8bf4\u660e","date":"2019-08-02T10:48:02.000Z","formattedDate":"2019\u5e748\u67082\u65e5","tags":[{"label":"Windows","permalink":"/blog/tags/windows"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":0.53,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Windows To Go","tags":["Windows","\u7b14\u8bb0"],"comments":true,"date":"2019-8-2 10:48:02 +0800","published":true},"prevItem":{"title":"SSH Windows","permalink":"/blog/2019/ssh"},"nextItem":{"title":"Windows\u7684\u5305\u7ba1\u7406\u5de5\u5177chocolatey","permalink":"/blog/2019/chocolatey"}},"content":"Title: Windows To Go \u7684\u4e00\u4e9b\u4f7f\u7528\u8bf4\u660e\\n\\n## Mac\u5b89\u88c5\u540e\u952e\u9f20\u4f9b\u7535\u95ee\u9898\\n\\n\u5728 *mac* \u4f9b\u7535\u65b9\u5f0f\u63a8\u8350\u91c7\u7528\u76f4\u63a5\u4f9b\u7535, \u4e0d\u63a8\u8350\u5916\u63a5\u62d3\u5c55\u575e\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u952e\u9f20\u4f7f\u7528\u51fa\u73b0\u95ee\u9898.\\n\\n## \u8bbf\u95ee\u672c\u673a\u78c1\u76d8\\n\\n\u9ed8\u8ba4\u672c\u673a\u78c1\u76d8\u662f\u8131\u673a\u72b6\u6001\u7684\\n\\n\u542f\u7528\u672c\u673a\u78c1\u76d8:\\n\\n1. \u542f\u52a8 *cmd*\\n2. `DISKPART.exe`\\n3. `san`\\n4. `san policy=onlineall`\\n5. `list disk`\\n6. `select disk 1`\\n7. `attributes disk clear readonly`\\n8. `online disk`"},{"id":"/2019/chocolatey","metadata":{"permalink":"/blog/2019/chocolatey","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/chocolatey.mdx","title":"Windows\u7684\u5305\u7ba1\u7406\u5de5\u5177chocolatey","description":"Title: chocolatey\u5de5\u5177\u7684\u4f7f\u7528","date":"2019-08-01T14:55:00.000Z","formattedDate":"2019\u5e748\u67081\u65e5","tags":[{"label":"Windows","permalink":"/blog/tags/windows"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"chocolatey","permalink":"/blog/tags/chocolatey"}],"readingTime":2.06,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Windows\u7684\u5305\u7ba1\u7406\u5de5\u5177chocolatey","tags":["Windows","\u7b14\u8bb0","chocolatey"],"comments":true,"date":"2019-08-01 14:55:00 +0800","published":true},"prevItem":{"title":"Windows To Go","permalink":"/blog/2019/wtg"},"nextItem":{"title":"Hello flutter","permalink":"/blog/2019/flutter"}},"content":"Title: chocolatey\u5de5\u5177\u7684\u4f7f\u7528\\n\\n## \u5b89\u88dd **chocolatey**\\n\\n\u5b98\u7f51\u9996\u9875\uff1a[Home][Home]\\n\\n\u4f7f\u7528 **PowerShell** \u5373\u53ef\\n\\n```powershell\\niex ((new-object net.webclient).DownloadString(\'https://chocolatey.org/install.ps1\'))\\n```\\n\\n### \u66f4\u6539\u5b89\u88dd\u8f6f\u4ef6\u5b58\u653e\u4f4d\u7f6e\\n\\n\u65b0\u5efa\u73af\u5883\u53d8\u91cf  \\n\u540d\u4e3a *ChocolateyInstall*  \\n\u503c\u4e3a *\u4f60\u60f3\u8981\u5b58\u653e\u7684\u8def\u5f84*\\n\\n### \u76f8\u5173\u94fe\u63a5\\n\\n\u5229\u7528\u7f51\u9875\u68c0\u7d22\u6240\u9700\u8981\u7684\u5305 [Packages][Packages]\\n\\n## \u5e38\u7528\u6307\u4ee4\\n\\n1. \u5b89\u88c5\\n\\n    `choco install <package>`\\n\\n    \u8fd9\u662f\u6b63\u5e38\u7684\u5b89\u88c5\uff0c\u4f46\u53ea\u662f\u88c5\u4e00\u4e24\u4e2a\u8f6f\u4ef6\u8fd8\u597d\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u4f60\u8f93\u5165 *y\u3001a\u3001n* \u7b49\u8fdb\u884c\u4ea4\u4e92\uff0c\u53ef\u4ee5\u52a0\u5165\u540e\u7f00 `-y` \u6765\u81ea\u52a8\u5168\u90e8\u786e\u8ba4\\n\\n2. \u5176\u4ed6\u5e38\u7528\u547d\u4ee4\\n   1. \u5378\u8f7d `choco uninstall <package>`\\n   2. \u641c\u7d22 `choco search <package>`\\n   3. \u66f4\u65b0 `choco upgrade <package>`\\n   4. \u67e5\u770b\u672c\u5730 `choco list --local-only` \u6216\u8005 `choco list -lo`\\n\\n3. \u4e0d\u5e38\u7528\u6307\u4ee4\\n   1. \u641c\u7d22\u6240\u6709\u7248\u672c `choco search <package> -all`\\n   2. \u5b89\u88dd\u6307\u5b9a\u7248\u672c `choco install <package> -version <\u7248\u672c\u53f7>`\\n   3. \u66f4\u65b0\u6240\u6709 `choco upgrade -all`\\n\\n## \u4e2a\u4eba\u5df2\u7ecf\u5b89\u88c5\u7684\\n\\n```powershell\\nchoco install 7zip -y\\nchoco install androidstudio -y\\nchoco install ccleaner -y\\nchoco install curl -y\\nchoco install Everything -y\\nchoco install gimp -y\\nchoco install git -y\\nchoco install git-lfs -y\\nchoco install github -y\\nchoco install github-desktop -y\\nchoco install golang -y\\nchoco install GoogleChrome -y\\nchoco install gradle -y\\nchoco install javaruntime -y\\nchoco install jdk8 -y\\nchoco install jekyll -y\\nchoco install jre8 -y\\nchoco install nodejs -y\\nchoco install openssh -y\\nchoco install php -y\\nchoco install PowerShell -y\\nchoco install python -y\\nchoco install ruby -y\\nchoco install steam -y\\nchoco install unity -y\\nchoco install unity-hub -y\\nchoco install vscode -y\\nchoco install wechat -y\\nchoco install tim -y\\nchoco install flutter -y\\nchoco install mongodb -y\\nchoco install notepadplusplus -y\\nchoco install dotnetcore-sdk -y\\nchoco install sourcetree -y\\nchoco install beyondcompare -y\\n```\\n\\n### \u4e2a\u4eba\u4f7f\u7528\u4f46\u65e0\u6cd5\u5728chocolatey\u4e0a\u627e\u5230\u7684\\n\\n1. \u641c\u72d7\u8f93\u5165\u6cd5\\n2. ShadowsocksR\\n3. ~~\u6728\u6728\u6a21\u62df\u5668~~\uff08\u5df2\u7ecf\u5220\u9664\uff0c\u91c7\u7528AS\u81ea\u5e26\u7684\u6a21\u62df\u5668\uff09\\n4. WeGame\\n5. PanDownload\uff08\u66ff\u6362\u767e\u5ea6\u7f51\u76d8\uff09\\n6. Synergy\\n\\n[Home]:https://chocolatey.org\\n[Packages]:https://chocolatey.org/packages"},{"id":"/2019/flutter","metadata":{"permalink":"/blog/2019/flutter","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/flutter.mdx","title":"Hello flutter","description":"Title: \u5173\u4e8eflutter\u7684\u521d\u4f53\u9a8c","date":"2019-08-01T10:55:00.000Z","formattedDate":"2019\u5e748\u67081\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"flutter","permalink":"/blog/tags/flutter"}],"readingTime":1.02,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Hello flutter","tags":["\u7b14\u8bb0","flutter"],"comments":true,"date":"2019-08-01 10:55:00 +0800","published":true},"prevItem":{"title":"Windows\u7684\u5305\u7ba1\u7406\u5de5\u5177chocolatey","permalink":"/blog/2019/chocolatey"},"nextItem":{"title":"CocosCreator \u6253\u5305\u8bb0\u5f55","permalink":"/blog/2019/cocos"}},"content":"Title: \u5173\u4e8eflutter\u7684\u521d\u4f53\u9a8c\\n\\n\u5b89\u88c5\u5c31\u4e0d\u54d4\u54d4\u4e86\\n\\n## \u73af\u5883\u53d8\u91cf\u914d\u7f6e\\n\\n> macOS Todo\\n\\nmac\u7684\uff0c\u5509~\u7531\u4e8e\u5728\u5b89\u88c5\u914d\u7f6e\u5b8c\u540e\u4f7f\u7528\u7684\u662f10.15\u7684beta\u7248\u672c\u3002 \u76ee\u524d fultter \u8fd8\u4e0d\u652f\u6301\u5c31\u5148\u544a\u4e00\u6bb5\u843d\u4e86\u3002\\n\\n2019-12-22 \u66f4\u65b0:\\n\u6d41\u7a0b\u6ca1\u5565\u5927\u6bdb\u75c5\\n`flutter doctor` \u8d70\u5c31\u5b8c\u4e8b\u4e86\\n\\n\u4f46\u662f\u542f\u52a8ios\u6a21\u62df\u5668\u7684\u65f6\u5019 \u6ca1\u6709\u53cd\u5e94\\n\u9700\u8981\u914d\u7f6e\u76f8\u5e94\u73af\u5883\\n`brew install --HEAD libimobiledevice`\\n\\n> Windows\\n\\n*bin* \u76ee\u5f55\u914d\u7f6e *Path* \u5373\u53ef\\n\\n## \u81ea\u68c0\u73af\u8282\\n\\n`flutter doctor`\\n\\n\u4f1a\u68c0\u67e5\u4ee5\u4e0b\u51e0\u4e2a\u73af\u5883\\n\\n1. Flutter \u672c\u8eab\u73af\u5883 \uff08macOS 10.15 beta \u5c31\u662f\u5728\u8fd9\u91cc\u6302\u4e86\uff09\\n2. Android SDK \u73af\u5883\\n   1. `flutter doctor --android-licenses`\\n3. Android Studio \u73af\u5883 \u9700\u8981\u88c5\u63d2\u4ef6\\n   1. \u5728\u5f00\u59cb\u754c\u9762\u70b9\u51fb `Configure` \u91cc\u7684 `Plugins`\\n4. VSCode \u73af\u5883 \u9700\u8981\u88c5\u63d2\u4ef6\\n5. \u8fde\u63a5\u8bbe\u5907\\n6. Mac \u4e0b\u8fd8\u4f1a\u68c0\u6d4b XCode \u4ee5\u53ca\u5176\u547d\u4ee4\u884c\u73af\u5883"},{"id":"/2019/cocos","metadata":{"permalink":"/blog/2019/cocos","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/cocos.mdx","title":"CocosCreator \u6253\u5305\u8bb0\u5f55","description":"Title: \u8bb0\u5f55\u5728\u6253\u5305\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5751","date":"2019-07-04T23:30:17.000Z","formattedDate":"2019\u5e747\u67084\u65e5","tags":[{"label":"CocosCreator","permalink":"/blog/tags/cocos-creator"},{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":0.255,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"CocosCreator \u6253\u5305\u8bb0\u5f55","tags":["CocosCreator","\u7b14\u8bb0"],"comments":true,"date":"2019-07-04 23:30:17 +0800","published":true},"prevItem":{"title":"Hello flutter","permalink":"/blog/2019/flutter"},"nextItem":{"title":"\u4e0a\u5e1d\u63b7\u9ab0\u5b50\u5417\uff1f","permalink":"/blog/2019/quantum"}},"content":"Title: \u8bb0\u5f55\u5728\u6253\u5305\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5751\\nVersion: 2.0.10\\n\\n## \u73af\u5883\u914d\u7f6e\\n\\n1. *NDK* \u73af\u5883\\n    \u63a8\u8350\u7684\u662f *[r10e][r10e]*(\u70b9\u51fb\u5373\u53ef\u4e0b\u8f7d\u4e86)\\n\\n2. \u4f46\u662f\u6253\u51fa\u7684\u5305\u4e0d\u53ef\u4f7f\u7528\uff01\uff01\uff01\\n\\n[r10e]:http://dl.google.com/android/ndk/android-ndk-r10e-darwin-x86_64.bin\\n\\n...\u544a\u8f9e"},{"id":"/2019/quantum","metadata":{"permalink":"/blog/2019/quantum","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/quantum.mdx","title":"\u4e0a\u5e1d\u63b7\u9ab0\u5b50\u5417\uff1f","description":"Title: \u601d\u7ef4\u5b9e\u9a8c\u5ba4 \u63a8\u8350","date":"2019-07-04T23:30:17.000Z","formattedDate":"2019\u5e747\u67084\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"\u79d1\u5b66","permalink":"/blog/tags/\u79d1\u5b66"}],"readingTime":0.35,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u4e0a\u5e1d\u63b7\u9ab0\u5b50\u5417\uff1f","tags":["\u7b14\u8bb0","\u79d1\u5b66"],"comments":true,"date":"2019-07-04 23:30:17 +0800","published":true},"prevItem":{"title":"CocosCreator \u6253\u5305\u8bb0\u5f55","permalink":"/blog/2019/cocos"},"nextItem":{"title":"mac VSCode\u62a5\u9519","permalink":"/blog/2019/vscode/vscode"}},"content":"Title: *\u601d\u7ef4\u5b9e\u9a8c\u5ba4* \u63a8\u8350\\n\\n## \u9ec4\u91d1\u65f6\u4ee3\\n\\n### \u8d6b\u5179\\n\\n* 1887 \u5e74\u8bc1\u5b9e\u4e86\u7535\u78c1\u6ce2\u3002\\n* \u4e0d\u5230 37 \u5c81\u5352\u3002\\n\\n### \u4ee5\u592a \uff08\u4f2a\u79d1\u5b66\u5b9a\u8bba\uff09\\n\\n### \u80e1\u514b - \u60e8\\n\\n### \u5149\u7684\u4e24\u4e2a\u5b9e\u9a8c\\n\\n* \u53cc\u7f1d\u5e72\u6d89\uff08\u6768\uff09\\n* \u5706\u76d8\u884d\u5c04\uff08\u83f2\u6d85\u5c14\uff09\\n\\n### \u9ea6\u514b\u65af\u97e6\u7684\u7535\u78c1\u6ce2\uff08\u5149\u88ab\u5212\u4e3a\u5176\u4e2d\uff09"},{"id":"/2019/vscode/vscode","metadata":{"permalink":"/blog/2019/vscode/vscode","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/vscode/vscode.mdx","title":"mac VSCode\u62a5\u9519","description":"Title: mac VSCode \u66f4\u65b0\u5931\u8d25\uff0c\u63d0\u793a Permission denied \u89e3\u51b3\u529e\u6cd5","date":"2019-06-19T22:20:03.000Z","formattedDate":"2019\u5e746\u670819\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":0.43,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"mac VSCode\u62a5\u9519","tags":["\u7b14\u8bb0"],"comments":true,"date":"2019-06-19 22:20:03 +0800","published":true},"prevItem":{"title":"\u4e0a\u5e1d\u63b7\u9ab0\u5b50\u5417\uff1f","permalink":"/blog/2019/quantum"},"nextItem":{"title":"\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2019/command"}},"content":"Title: *mac VSCode* \u66f4\u65b0\u5931\u8d25\uff0c\u63d0\u793a *Permission denied* \u89e3\u51b3\u529e\u6cd5\\n\\n## 1. \u9488\u5bf9\u53f3\u4e0b\u63d0\u793a\u5982\u4e0b\\n\\n```error\\nCould not create temporary directory: Permission denied\\n```\\n\\n### \u89e3\u51b3\u529e\u6cd5\\n\\n1. \u5b8c\u5168\u5173\u95ed *VSCode*\\n2. \u7ec8\u7aef\u8f93\u5165\\n\\n    ```shell\\n    sudo chown -R $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt/\\n    xattr -dr com.apple.quarantine /Applications/Visual\\\\ Studio\\\\ Code.app\\n    ```\\n\\n3. \u5b8c\u6210\\n\\n## \u591a\u53bb *[VSCode][Github]* \u5e95\u4e0b\u7684\u63d0\u4ea4\u95ee\u9898\\n\\n[\u539fissues\u5730\u5740][Issues]\\n[Github\u5730\u5740][Github]\\n\\n[Github]:https://github.com/microsoft/vscode\\n[Issues]:https://github.com/Microsoft/vscode/issues/7426"},{"id":"/2019/command","metadata":{"permalink":"/blog/2019/command","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/command.mdx","title":"\u5e38\u7528\u547d\u4ee4","description":"Title: \u8bb0\u5f55\u4e0b\u81ea\u5df1\u7ecf\u5e38\u4e0a\u7f51\u67e5\u7684\u547d\u4ee4\u3002","date":"2019-06-16T21:03:12.000Z","formattedDate":"2019\u5e746\u670816\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"}],"readingTime":1.04,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u5e38\u7528\u547d\u4ee4","tags":["\u7b14\u8bb0"],"comments":true,"date":"2019-06-16 21:03:12 +0800","published":true},"prevItem":{"title":"mac VSCode\u62a5\u9519","permalink":"/blog/2019/vscode/vscode"},"nextItem":{"title":"fullstack\u5f00\u6e90\u5e93","permalink":"/blog/2019/fullstack"}},"content":"Title: \u8bb0\u5f55\u4e0b\u81ea\u5df1\u7ecf\u5e38\u4e0a\u7f51\u67e5\u7684\u547d\u4ee4\u3002\\n\\n## Nginx\\n\\n* \u67e5\u770b\u662f\u5426\u8fd8\u5728\u8fd0\u884c\\n\\n`ps -ef|grep nginx`\\n\\n* \u91cd\u542f\\n\\n  1. \u9a8c\u8bc1 `nginx.conf` \u662f\u5426\u6b63\u786e\u3002 `nginx -t`\\n  2. \u91cd\u542f\u670d\u52a1 `nginx -s reload`\\n\\n## macOS\\n\\n### \u5b89\u88c5 *rvm*\\n\\n1. \u5b89\u88c5 *rvm* , \u4e00\u4e2a\u57fa\u4e8e *ruby* \u7684\u5de5\u5177\u5e93\uff1f\\n\\n    `curl -L get.rvm.io | bash -s stable`\\n\\n2. \u5b89\u88c5\u597d *rvm* \u4e4b\u540e\\n\\n    ```shell\\n    source ~/.bashrc\\n    source ~/.bash_profile\\n    ```\\n\\n3. \u6d4b\u8bd5\u5b89\u88c5\u662f\u5426\u6b63\u5e38\\n\\n    `rvm -v`\\n\\n4. \u67e5\u770b\u5f53\u524d *ruby* \u7248\u672c\\n\\n    `ruby -v`\\n\\n5. \u5217\u51fa\u5df2\u77e5\u7684 *ruby* \u7248\u672c\\n\\n    `rvm list known`\\n\\n6. \u5b89\u88c5 *ruby* \\n\\n    `rvm install x.x.x`\\n\\n7. \u5347\u7ea7 *gem* \\n\\n    `sudo gem update --system`\\n\\n### *SSH*\\n\\n1. \u67e5\u770b\u672c\u5730\u662f\u5426\u751f\u6210\u4e86 *SSH*\\n\\n    `ls -al ~/.ssh`\\n\\n2. \u751f\u6210\u65b0\u7684 *SSH* **key**\\n\\n    `ssh-keygen -t rsa -C \\"i.zuucol@gmail.com\\"`\\n\\n3. \u67e5\u770b\u516c\u94a5\\n\\n    `cat ~/.ssh/id_rsa.pub`\\n\\n### \u63d0\u793a\u5b89\u88c5\u6587\u4ef6\u635f\u574f\\n\\n`sudo spctl --master-disable`\\n\\n### *cocoapod* \u66f4\u65b0\\n\\n`pod install --verbose --no-repo-update`\\n`pod update --verbose --no-repo-update`\\n\\n### *Xcode* \u65e0\u6cd5\u88ab\u68c0\u6d4b\u5230\u65f6\\n\\n`sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer`"},{"id":"/2019/fullstack","metadata":{"permalink":"/blog/2019/fullstack","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/fullstack.mdx","title":"fullstack\u5f00\u6e90\u5e93","description":"Title: \u5927\u81f4\u5c31\u662f\u9879\u76ee\u505a\u5b8c\u6ca1\u7ed9\u94b1\uff0c\u7136\u540e\u5c31\u5f00\u6e90\u4e86\u3002","date":"2019-06-10T20:10:20.000Z","formattedDate":"2019\u5e746\u670810\u65e5","tags":[{"label":"Github","permalink":"/blog/tags/github"}],"readingTime":1.925,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"fullstack\u5f00\u6e90\u5e93","tags":["Github"],"comments":true,"date":"2019-06-10 20:10:20 +0800","published":true},"prevItem":{"title":"\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2019/command"},"nextItem":{"title":"Flask\u5168\u5957\u7ec4\u4ef6\u53ca\u539f\u7406\u5256\u6790","permalink":"/blog/2019/flask"}},"content":"Title: \u5927\u81f4\u5c31\u662f\u9879\u76ee\u505a\u5b8c\u6ca1\u7ed9\u94b1\uff0c\u7136\u540e\u5c31\u5f00\u6e90\u4e86\u3002\\n\\nGithub\uff1a[fullstack][fullstack]\\n\u63d0\u4ea4\u662f *586fe8bea5d5a12406253994bb848c257109eb15*\\n\\n## \u5927\u81f4\u6b65\u9aa4\\n\\n1. \u9996\u5148\u51c6\u5907\u672c\u5730\u73af\u5883\\n   1. \u5b89\u88c5 node \u73af\u5883 `brew install node`\\n   2. \u5b89\u88c5 yarn `brew install yarn`\\n2. \u53bb\u51c6\u5907 api \u53c2\u6570\\n   1. \u5148\u53bb\u8c37\u6b4c\u4e91\u5e73\u53f0 [Google Cloud Platform][google_cloud] \u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u51ed\u636e\uff0c\u5728 *API\u548c\u670d\u52a1* \u91cc\u9762\u7684 *\u51ed\u636e*, \u8fd9\u65f6\u5019\u4f1a\u83b7\u5f97\u4e00\u4e2a\u5bc6\u94a5\uff0c\u5c06\u5176\u8bb0\u4f5c **GOOGLE_MAPS_KEY**\u3002\\n   2. \u7136\u540e\u5230 *API\u548c\u670d\u52a1* \u91cc\u9762\u7684 *\u5e93*\uff0c\u627e\u7684\u5730\u56fe\u7c7b\u522b\u4e2d\u7684 *Places API*\uff0c\u5c06\u5176\u542f\u7528\uff0c\u8c37\u6b4c\u8fd9\u8fb9\u5c31\u7b97\u662f\u5b8c\u6210\u4e86\u3002\\n   3. \u7136\u540e\u5230 [PLAID][plaid] \u4e0a\u6ce8\u518c\u8d26\u53f7\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u5e94\u8be5\u662f\u4e13\u95e8\u83b7\u53d6\u94f6\u884c\u8d26\u6237\u5185\u4fe1\u606f\u7684\u4e00\u4e2a\u805a\u5408\u5e73\u53f0\u3002\u5b8c\u6210\u540e\u627e\u5230 `Node.js` \u9009\u9879\uff0c\u4e0b\u9762\u4f1a\u6709\u5bf9\u5e94\u7684\u4fe1\u606f\\n\\n        ```json\\n        {\\n            \\"ACCOUNTS_SECRET\\": \\"secret\\",\\n            \\"PLAID_CLIENT_ID\\": \\"xxxxxxxxxxxxxxxxxxxx\\",\\n            \\"PLAID_SECRET\\": \\"xxxxxxxxxxxxxxxxxxxx\\",\\n            \\"PLAID_PUBLIC_KEY\\": \\"xxxxxxxxxxxxxxxxxxxx\\",\\n            \\"PLAID_PRODUCTS\\": \\"transactions\\",\\n            \\"PLAID_COUNTRY_CODES\\": \\"US\\",\\n            \\"PLAID_ENV\\": \\"sandbox\\"\\n        }\\n        ```\\n\\n3. \u586b\u5199\u53c2\u6570\\n   1. \u5c06 **GOOGLE_MAPS_KEY** \u66ff\u6362\u5230 `/client/src/config/example.env.json` \u6587\u4ef6\u5185\u3002\\n   2. \u5c06 **PLAID_PUBLIC_KEY** \u4e5f\u66ff\u6362\u5230\u8fd9\u4e2a\u6587\u4ef6\u5185\u3002\\n   3. \u5c06 **PLAID_CLIENT_ID**\u3001**PLAID_SECRET**\u3001**PLAID_PUBLIC_KEY** \u66ff\u6362\u5230 `server/config/default.json` \u6587\u4ef6\u5185\u3002\\n4. \u7136\u540e\u542f\u52a8\u672c\u5730\u7684 mongo\\n\\n    `mongod --dbpath /Users/imagons/mongo/data`\\n\\n    \u8fd9\u4e2a\u53ea\u662f\u6211\u7684\u542f\u52a8\u65b9\u5f0f\u3002\\n\\n5. \u8fdb\u5165\u5230 `server` \u76ee\u5f55, \u7136\u540e\u6267\u884c `yarn install` \u548c `yarn watch`\\n6. \u53e6\u8d77\u4e00\u4e2a\u7ec8\u7aef\uff0c\u7136\u540e\u8fdb\u5165\u5230 `client` \u76ee\u5f55\uff0c\u7136\u540e\u6267\u884c\\n   1. `cp ./src/config/example.env.json ./src/config/development.env.json`\\n   2. `yarn install`\\n   3. `yarn start`\\n7. \uff08\u8fd9\u4e00\u6b65\u8c8c\u4f3c\u4e0d\u6267\u884c\u4e5f\u80fd\u8fd0\u884c\u4e86\uff09\u53c8\u518d\u8d77\u4e00\u4e2a\u7ec8\u7aef\uff0c\u7ee7\u7eed\u5728 `client` \u76ee\u5f55\uff0c\u6267\u884c `yarn gen:types:watch`\\n\\n## \u6ce8\u610f\u4e8b\u9879\\n\\n* \u5982\u679c\u9047\u5230 `npm` \u76f8\u5173\u7684\u95ee\u9898\uff0c\u5efa\u8bae\u91cd\u88c5 `node` \u73af\u5883\u3002\\n\\n* 4000 \u7684\u7aef\u53e3\u548c 3000 \u7684\u7aef\u53e3\u4e0d\u8981\u88ab\u5360\u7528\u3002\\n\\n[fullstack]:https://github.com/TrillCyborg/fullstack\\n[google_cloud]:https://console.cloud.google.com/\\n[plaid]:https://plaid.com/"},{"id":"/2019/flask","metadata":{"permalink":"/blog/2019/flask","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/flask.mdx","title":"Flask\u5168\u5957\u7ec4\u4ef6\u53ca\u539f\u7406\u5256\u6790","description":"Title: Bilibili","date":"2019-06-09T22:31:08.000Z","formattedDate":"2019\u5e746\u67089\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"python","permalink":"/blog/tags/python"}],"readingTime":3.195,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Flask\u5168\u5957\u7ec4\u4ef6\u53ca\u539f\u7406\u5256\u6790","tags":["\u7b14\u8bb0","python"],"comments":true,"date":"2019-06-09 22:31:08 +0800","published":true},"prevItem":{"title":"fullstack\u5f00\u6e90\u5e93","permalink":"/blog/2019/fullstack"},"nextItem":{"title":"\u5929\u6587\u4e0e\u91cd\u529b\u6d4b\u91cf","permalink":"/blog/2019/astronomy"}},"content":"Title: [Bilibili][P1]\\n\\n## P8\\n\\n* \u4f7f\u7528\u5b57\u7b26\u4e32\u6765\u5bfc\u5165\u7c7b\\n\\n```python\\n__import__(name, globals=None, locals=None, fromlist=(), level=0)\\n```\\n\\n* `config` \u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u9ed8\u8ba4\u5728\u6839\u76ee\u5f55\u4e0b\uff0c\u9700\u8981\u66f4\u6539\u76ee\u5f55\u7684\u8bdd\uff0c\u8981\u67e5\u770b\u5bf9\u5e94\u7684Api\u6587\u6863\u3002\\n\\n## P9\\n\\n* `__name__` \u51fd\u6570\u8c03\u7528\u7684\u8bdd\uff0c\u53ef\u4ee5\u83b7\u53d6\u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u79f0\u3002\\n\\n## P18\\n\\n* \u600e\u4e48\u7528\u7236\u7c7b\u53bb\u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u67d0\u65b9\u6cd5\uff0c\u610f\u6307\u63a5\u53e3\uff08`interface`\uff09\u3002\\n\\n```python\\nclass Base(object):\\n    def play():\\n        raise NoImplementedError(\'\u5fc5\u987b\u5b9e\u73b0\u8be5\u65b9\u6cd5\')\\n```\\n\\n* \u987a\u5e26\u4e00\u63d0 [P18][P18] \u8fd9\u4e00\u8bb2\u5f53\u4e2d\u5927\u6982\u662f 20 \u51e0\u5206\u949f\u5de6\u53f3\u8bb2\u5230\u7684\u914d\u7f6e\u53bb\u505a\u67d0\u4e8b\u7684\u601d\u8def\u5bf9\u6211\u542f\u53d1\u86ee\u5927\u3002\u5e76\u4e14\u6709\u52a9\u4e8e\u7406\u89e3 *Django* \u7684\u4e2d\u95f4\u4ef6\u3002\\n\\n* \u88c5\u9970\u5668\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4e0b\u9762\u7684\u4f1a\u548c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u5f53\u6210 inner \u52a0\u5165\u5230\u4e0a\u5c42\u7684\u88c5\u9970\u5668\u5f53\u4e2d\u53bb\u3002\\n\\n* `endpoint` \u7684\u610f\u4e49\u76ee\u524d\u7406\u89e3\u4e3a `id`\u3002\\n\\n## P19\\n\\n* \u5229\u7528 `functools.wraps()` \u6765\u5e2e\u52a9\u6211\u4eec\u8bbe\u7f6e\u51fd\u6570\u7684\u5143\u4fe1\u606f\\n\\n```python\\nimport functools\\n\\ndef wapper(func):\\n    @functools.wapper(func) # \u4fdd\u5b58\u5143\u4fe1\u606f\\n    def inner(*args, **kw):\\n        return func(*args, **kw)\\n    return inner\\n\\n@wapper\\ndef foo():\\n    pass\\n\\nprint(foo.__name__)\\n\\n\'\'\'\\n\u5982\u679c\u4e0d\u8bbe\u7f6e\u5143\u4fe1\u606f\u7684\u8bdd\uff0c\u4f1a\u5bfc\u81f4\u6253\u5370\u7684\u662f inner\\n\u8bbe\u7f6e\u4e4b\u540e\u624d\u53ef\u4ee5\u786e\u5b9a\u662f\u539f\u5148\u7684\u51fd\u6570\\n\'\'\'\\n```\\n\\n## P20\\n\\n* \u95ea\u73b0\uff1a\u7c7b\u4f3c\u4e8e\u6682\u65f6\u5b58\u50a8\u90e8\u5206\u5185\u5bb9\u7684\u5feb\u7167\uff0c\u53d6\u51fa\u6765\u5c31\u6ca1\u4e86\u3002\uff08\u9605\u540e\u5373\u711a\uff09\\n\\n    \u5e94\u7528\u573a\u666f\uff1a\u5bf9\u4e34\u65f6\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u9519\u8bef\u4fe1\u606f\u3002\\n\\n* \u8bf7\u6c42\u6269\u5c55\uff0c\u6307\u7684\u662f\u5728\u8bf7\u6c42\u4e4b\u524d\u548c\u54cd\u5e94\u4e4b\u524d\u7684\u76d1\u542c\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u76d1\u542c\uff0c\u8bf7\u6c42\u4e4b\u524d\u7684\u76d1\u542c\u662f\u987a\u5e8f\u6267\u884c\uff0c\u54cd\u5e94\u7684\u662f\u5012\u5e8f\u6267\u884c\u3002\\n\\n    ```python\\n    @app.before_request\\n    def before_request_1(*args, **kw):\\n        print(\\"before_request_1 \u8fdb\u6765\u4e86\\")\\n\\n    @app.before_request\\n    def before_request_2(*args, **kw):\\n        print(\\"before_request_2 \u8fdb\u6765\u4e86\\")\\n\\n    @app.after_request\\n    def after_request_1(response):\\n        print(\\"after_request_1 \u8d70\u4e86\\")\\n\\n    @app.after_request\\n    def after_request_2(response):\\n        print(\\"after_request_2 \u8d70\u4e86\\")\\n\\n    \'\'\'\\n    \u6253\u5370\u987a\u5e8f\u4e3a\\n    before_request_1 \u8fdb\u6765\u4e86\\n    before_request_2 \u8fdb\u6765\u4e86\\n    ...\\n    after_request_2 \u8d70\u4e86\\n    after_request_1 \u8d70\u4e86\\n    \'\'\'\\n    ```\\n\\n    \u5982\u679c\u8bf7\u6c42\u62e6\u622a\u4e4b\u540e\uff0c\u5728\u4ed6\u4e4b\u540e\u7684\u8bf7\u6c42\u5c31\u4e0d\u4f1a\u6267\u884c\u4e86\uff0c\u4f46\u54cd\u5e94\u7684\u8fd8\u662f\u4f1a\u7ee7\u7eed\u6267\u884c\u3002\\n\\n* \u6839\u636e\u72b6\u6001\u7801\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f\\n\\n    ```python\\n    @app.errorhandler(404)\\n    def error_404(args):\\n        return \\"404\u9875\u9762\u6ca1\u627e\u5230\\"\\n    ```\\n\\n* `before_first_request` \u7b2c\u4e00\u4e2a\u8bf7\u6c42\\n\\n    ```python\\n    @app.before_first_request\\n    def first(*args, **kw):\\n        ## \u8fde\u63a5\u6570\u636e\u5e93\u4e4b\u7c7b\u7684\\n        pass\\n    ```\\n\\n## P22\\n\\n* \u4e2d\u95f4\u4ef6\u7684\u8bb2\u89e3 [P22][P22]\\n\\n## P25\\n\\n* `threading.local()` \u7ed9\u6bcf\u4e2a\u7ebf\u7a0b\u5f00\u8f9f\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\u7528\u4ee5\u5bf9\u5e94\u7684\u7ebf\u7a0b\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u3002\u8fbe\u5230\u7c7b\u4f3c\u52a0\u9501\u7684\u76ee\u7684\u3002\\n\\n## P36\\n\\n* \u6570\u636e\u7684\u94fe\u63a5\u6c60\u5e93\u91c7\u7528 `DBUtils` \uff0c\u4f46\u5982\u679c\u4f7f\u7528\u7684\u662f `PooledDB` \u6a21\u5f0f\u7684\u8bdd\uff0c\u5176\u4e2d\u6709\u4e2a\u53c2\u6570\u9700\u8981\u6ce8\u610f `maxshared` : \u94fe\u63a5\u6c60\u4e2d\u6700\u591a\u5171\u4eab\u7684\u94fe\u63a5\u6570\u91cf\u30020 \u4e3a\u5168\u90e8\u5171\u4eab\uff0c\u4f46\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u7684\u65f6\u5019\u662f\u7531 `creator` \u7684 `threadsafety` \u6765\u5224\u522b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u8bbe\u7f6e\u540e\u4e0d\u4e00\u5b9a\u4f1a\u751f\u6548\u3002\\n\\n[P1]:https://www.bilibili.com/video/av23109760/?p=1\\n[P18]:https://www.bilibili.com/video/av23109760/?p=18\\n[P22]:https://www.bilibili.com/video/av23109760/?p=22"},{"id":"/2019/astronomy","metadata":{"permalink":"/blog/2019/astronomy","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/astronomy.mdx","title":"\u5929\u6587\u4e0e\u91cd\u529b\u6d4b\u91cf","description":"Title: \u9ad8\u7b49\u9662\u6821\u6d4b\u7ed8\u5de5\u7a0b\u7cfb\u5217\u6559\u6750","date":"2019-06-09T13:23:22.000Z","formattedDate":"2019\u5e746\u67089\u65e5","tags":[{"label":"\u9605\u8bfb\u7b14\u8bb0","permalink":"/blog/tags/\u9605\u8bfb\u7b14\u8bb0"},{"label":"\u5929\u6587","permalink":"/blog/tags/\u5929\u6587"}],"readingTime":2.545,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u5929\u6587\u4e0e\u91cd\u529b\u6d4b\u91cf","tags":["\u9605\u8bfb\u7b14\u8bb0","\u5929\u6587"],"comments":true,"date":"2019-06-09 13:23:22 +0800","published":true,"math":true},"prevItem":{"title":"Flask\u5168\u5957\u7ec4\u4ef6\u53ca\u539f\u7406\u5256\u6790","permalink":"/blog/2019/flask"},"nextItem":{"title":"\u65c5\u884c\u8005\u4e00\u53f7","permalink":"/blog/2019/voyager"}},"content":"Title: \u9ad8\u7b49\u9662\u6821\u6d4b\u7ed8\u5de5\u7a0b\u7cfb\u5217\u6559\u6750\\n\\n## 1. \u5929\u6587\u6d4b\u91cf\u7b80\u4ecb\\n\\n* \u5b87\u5b99\u7684\u201d\u5b99\u201d\u6307\u7684\u662f\u65f6\u95f4\\n\\n* \u7c73\uff08m\uff09\uff0c1791\u5e74\u4e3a\u6d77\u5e73\u9762\u4e0a\u5730\u7403\u8d64\u9053\u5230\u5317\u6781\u70b9\u8ddd\u79bb\u7684\u5343\u4e07\u5206\u4e4b\u4e00\u4f5c\u4e3a 1 \u7c73\uff0c1983 \u5e74\u6539\u4e3a\u5149\u5728\u771f\u7a7a\u4e2d\u7684 1/299792458s \u7684\u65f6\u95f4\u95f4\u9694\u6240\u7ecf\u8def\u7a0b\u7684\u957f\u5ea6\u4f5c\u4e3a 1 \u7c73\u3002\\n\\n* \u968f\u540e\u5f15\u5165\u5929\u6587\u5355\u4f4d\uff0cAU\uff08Astronomical Unit\uff09\u65e5\u5730\u8ddd\u79bb\\n  \\n    $$1 AU = 1.495 978 7\\\\times10 ^{11} m$$\\n\\n\u4f46\u8fd9\u4e2a\u5929\u6587\u5355\u4f4d\u8fd8\u662f\u592a\u5c0f\uff0c\u4e8e\u662f\u5f15\u5165\u4e86\u5149\u5e74ly\uff08Light Year\uff09\uff0c1 \u5149\u5e74\u7ea6\u7b49\u4e8e 9.46 \u4e07\u4ebf\u5343\u7c73\u3002\\n\\n$$1 ly = 63 240 AU$$\\n\\n* \u8d28\u91cf\u7684\u5929\u6587\u5355\u4f4d\u662f\u592a\u9633\u8d28\u91cf\\n\\n* \u5730\u7403\u81ea\u8f6c\\n\\n1. \u6052\u661f\u65e5   \u5730\u7403\u4e0a\u67d0\u70b9\u4e0e\u6052\u661f\u7684\u5468\u671f\u95f4\u9694  \u771f\u6b63\u81ea\u8f6c\u5468\u671f 23h56m4s\\n2. \u592a\u9633\u65e5   \u5730\u7403\u4e0a\u67d0\u70b9\u4e0e\u592a\u9633\u7684\u5468\u671f\u95f4\u9694  \u663c\u591c\u4ea4\u66ff\u5468\u671f 24h\\n3. \u592a\u9634\u65e5   \u5730\u7403\u4e0a\u67d0\u70b9\u4e0e\u6708\u7403\u7684\u5468\u671f\u95f4\u9694  \u6f6e\u6c50\u53d8\u5316\u5468\u671f 24h50m\\n\\n* \u5f00\u666e\u52d2\u4e09\u5927\u5b9a\u5f8b\\n\\n1. \u6240\u6709\u884c\u661f\u8f68\u9053\u7684\u5f62\u72b6\u662f\u4e00\u4e2a\u692d\u5706\uff0c\u592a\u9633\u4f4d\u4e8e\u692d\u5706\u7684\u4e00\u4e2a\u7126\u70b9\u4e0a\u3002\\n2. \u5728\u76f8\u7b49\u7684\u65f6\u95f4\u95f4\u9694\u5185\uff0c\u884c\u661f\u4e0e\u592a\u9633\u7684\u8fde\u7ebf\u6240\u626b\u8fc7\u7684\u9762\u79ef\u76f8\u7b49\u3002\\n3. \u884c\u661f\u8fd0\u52a8\u5468\u671f\u7684\u5e73\u65b9\u4e0e\u692d\u5706\u957f\u534a\u8f74\u7684\u7acb\u65b9\u6210\u6b63\u6bd4\u3002\\n\\n* \u661f\u7b49 \u7406\u89e3\u4e3a\u5c31\u662f\u4eae\u5ea6\\n\\n\u661f\u7b49\u8d8a\u5927\u4eae\u5ea6\u8d8a\u5c0f\uff0c\u8fde\u7eed\u7684\u661f\u7b49\u5176\u4eae\u5ea6\u6210\u51e0\u4f55\u7ea7\u6570\uff0c\u800c\u4e14\u53c8 1 \u7b49\u661f\u7684\u4eae\u5ea6\u6b63\u597d\u662f 6 \u7b49\u661f\u7684 100 \u500d\uff0c$$\\\\sqrt[5]100 = 2.512$$\uff0c\u8fd9\u4e2a\u6570\u4e3a\u661f\u7b49\u6bd4\u3002\u76ee\u524d\u7167\u76f8\u7684\u65b9\u5f0f\u53ef\u770b\u5230 23 \u7b49\u7684\u6697\u661f\u3002\\n\\n1. \u5317\u6781\u661f 2.12 \u7b49\\n2. \u725b\u90ce\u661f 0.89 \u7b49\\n3. \u6708\u4eae -12.5 \u7b49\\n4. \u592a\u9633 -27 \u7b49\\n\\n## 2. \u5929\u7403\u5750\u6807\u7cfb\u53ca\u5404\u5750\u6807\u7cfb\u95f4\u5173\u7cfb\\n\\n* \u5750\u6807\u7cfb\u8fd9\u5757\u8fc7\u4e8e\u6570\u5b66\u5316\uff0c\u8ba4\u8f93\uff01\\n\\n## 3. \u65f6\u95f4\u7cfb\u7edf\u53ca\u5176\u6362\u7b97\\n\\n* \u9996\u5148\u5b9a\u4e49\u65f6\u95f4\uff08\u65f6\u523b\u3001\u5386\u5143\uff09\u548c\uff08\u65f6\u95f4\u95f4\u9694\uff09\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u5230\u7684\u662f\u540e\u8005\u3002\\n\\n* \u65f6\u95f4\u7684\u57fa\u672c\u5355\u4f4d\\n\\n1. \u5730\u7403\u81ea\u8f6c $$ 1 \\\\times 10^{-8} $$\\n2. \u884c\u661f\u7ed5\u592a\u9633\u7684\u516c\u8f6c\\n3. \u539f\u5b50\u7684\u8c10\u6ce2\u632f\u8361 $$ 1 \\\\times 10^{-13} $$"},{"id":"/2019/voyager","metadata":{"permalink":"/blog/2019/voyager","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/voyager.mdx","title":"\u65c5\u884c\u8005\u4e00\u53f7","description":"Title: \u65c5\u884c\u8005\u4e00\u53f7","date":"2019-06-09T11:57:27.000Z","formattedDate":"2019\u5e746\u67089\u65e5","tags":[{"label":"\u89c4\u5212","permalink":"/blog/tags/\u89c4\u5212"},{"label":"\u540e\u53f0","permalink":"/blog/tags/\u540e\u53f0"}],"readingTime":2.88,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u65c5\u884c\u8005\u4e00\u53f7","tags":["\u89c4\u5212","\u540e\u53f0"],"comments":true,"date":"2019-06-09 11:57:27 +0800","published":false},"prevItem":{"title":"\u5929\u6587\u4e0e\u91cd\u529b\u6d4b\u91cf","permalink":"/blog/2019/astronomy"},"nextItem":{"title":"Python\u9ad8\u624b\u4e4b\u8def","permalink":"/blog/2019/python/inspect"}},"content":"Title: \u65c5\u884c\u8005\u4e00\u53f7\\n\\n## \u73af\u5883\\n\\n1. \u5730\u7406\u4f4d\u7f6e\u8f6c\u7a7a\u95f4\u5750\u6807\u7684\u89c4\u5219\\n2. ~~\u661f\u7cfb\u89c4\u6a21\u7684\u968f\u673a\u7b97\u6cd5~~\\n3. \u98de\u8239\u7684\u98de\u884c\u65f6\u95f4\u8ba1\u7b97\\n4. \u906d\u9047\u5f53\u524d\u661f\u7cfb\u65f6\u67d0\u661f\u7684\u5f15\u529b\u5f39\u5f13\u65f6\u95f4\u786e\u5b9a\\n\\n### \u5730\u7406\u4f4d\u7f6e\u8f6c\u7a7a\u95f4\u5750\u6807\u7684\u89c4\u5219\\n\\n\u5047\u5b9a\u4ee5\u76ee\u524d\u5730\u7403\u4e3a\u4f8b\uff0c\u6bcf\u4e2a\u4eba\u7684\u5750\u6807\u662f\u7403\u4e0a\u7684\u67d0\u4e2a\u70b9\uff0c\u90a3\u4e48\u5f97\u51fa\u6765\u5c06\u4f1a\u662f\u4e00\u4e2a\u70b9\u5316\u7684\u4e16\u754c\u5730\u56fe\uff0c\u8fd9\u5c31\u770b\u8d77\u6765\u5f88\u4e0d\u5408\u9002\uff0c\u6240\u4ee5\u5e94\u5f53\u4fdd\u6301\u5176\u771f\u6b63\u7684\u5730\u7406\u5750\u6807\uff1f\\n\\n\u7b80\u5355\u70b9\uff0c\u4ee5\u5e73\u884c\u5b87\u5b99\u6765\u7b97\u548c\u56fa\u5b9a\u7684\u661f\u7cfb\u6765\u786e\u5b9a\u3002\u66f4\u52a0\u5177\u6709\u771f\u5b9e\u6027\u548c\u79d1\u5e7b\u6027\u3002\\n\\n> TODO\\n\\n* \u5e73\u884c\u5b87\u5b99\u7684\u6570\u91cf\\n* \u6709\u54ea\u4e9b\u56fa\u5b9a\u7684\u661f\u7cfb\\n\\n### ~~\u661f\u7cfb\u89c4\u6a21\u7684\u968f\u673a\u7b97\u6cd5~~\\n\\n### \u98de\u8239\u7684\u98de\u884c\u65f6\u95f4\u8ba1\u7b97\\n\\n\u9700\u8981\u6536\u96c6\u8d44\u6599  \\n\\n1. \u661f\u7cfb\u4e4b\u95f4\u7684\u8ddd\u79bb\\n2. \u98de\u8239\u7684\u901f\u5ea6\\n3. \u65f6\u95f4\u7684\u7f29\u51cf\u65b9\u5f0f\uff08\u4ee5\u5929\u4e3a\u57fa\u51c6\\n   1. \u901f\u5ea6\u589e\u52a0\uff1f\\n   2. \u8ddd\u79bb\u7f29\u77ed\uff1f\\n\\n> TODO\\n\\n* \u56fa\u5b9a\u661f\u7cfb\u4e4b\u95f4\u7684\u8ddd\u79bb\\n* \u98de\u8239\u7684\u901f\u5ea6\\n* \u7f29\u51cf\u65b9\u5f0f\\n* \u9ed1\u6d1e\u4f4d\u7f6e\u7684\u8bbe\u7f6e\\n\\n### \u906d\u9047\u5f53\u524d\u661f\u7cfb\u65f6\u67d0\u661f\u7684\u5f15\u529b\u5f39\u5f13\u65f6\u95f4\u786e\u5b9a\\n\\n1. \u4ee5\u5929\u4e3a\u5355\u4f4d\uff0c\u4e00\u5929\u6700\u591a\u4e24\u6b21\uff0c\u901a\u77e5\u7528\u6237\u64cd\u4f5c\\n2. \u6570\u91cf\uff0c\u4f9d\u636e\u5f53\u524d\u65c5\u884c\u8005\u5f39\u5f13\u6b21\u6570\\n\\n> TODO\\n\\n* \u65c5\u884c\u8005\u5f39\u5f13\u6b21\u6570\\n\\n## \u73a9\u5bb6\u4fe1\u606f\\n\\n1. \u521b\u5efa\\n   1. \u57fa\u4e8e\u5730\u7406\u5750\u6807\u53bb\u751f\u6210\u661f\u7cfb\u56fe\u8c31\u6240\u5728\u4f4d\u7f6e\\n   2. \u7528\u6237\u540d\\n2. \u4fee\u6539\\n   1. \u7528\u6237\u540d\\n   2. \u5730\u7406\u4f4d\u7f6e\uff08\u6682\u4e14\u4e0d\u505a\uff09\\n3. \u67e5\u8be2\\n   1. \u8bbe\u8ba1\u67e5\u8be2\u65b9\u6848\uff08\u6682\u4e14\u4e0d\u505a\uff09\\n\\n## \u661f\u7403\u73a9\u6cd5\\n\\n1. \u6536\u96c6\\n   1. \u91c7\u77ff\\n   2. \u51b6\u70bc\\n   3. \u5236\u4f5c\\n2. \u5267\u60c5\\n   1. \u4eba\u7269\u5267\u60c5\\n   2. \u661f\u7403\u5267\u60c5\\n   3. \u5386\u53f2\u5267\u60c5\\n3. \u64cd\u4f5c\u65b9\u5f0f\\n   1. \u70b9\u4e3a\u4e3b\\n\\n> TODO\\n\\n* \u539f\u59cb\u6389\u843d\u98de\u884c\u5668\u6240\u643a\u5e26\u4fe1\u606f\u6e05\u5355\\n* \u4fee\u590d\u98de\u884c\u5668\u6240\u9700\u7269\u8d44\u7cbe\u7b80\u4ee5\u53ca\u6e05\u5355\\n* \u706b\u7bad\u6240\u9700\u7269\u8d44\u6e05\u5355\\n* \u98de\u884c\u5668\u6240\u643a\u5e26\u4fe1\u606f\u9650\u5236\\n* \u5267\u60c5\u7684\u5206\u914d\\n\\n## \u98de\u884c\u9014\u4e2d\\n\\n1. \u5f15\u529b\u5f39\u5f13\u65f6\u901a\u77e5\u73a9\u5bb6\u627e\u5bfb\u6700\u4f73\u65f6\u673a\\n2. \u62cd\u7167\uff1f\\n\\n\u7531\u4e8e\u98de\u884c\u5668\u662f\u4e0d\u80fd\u76f4\u63a5\u521b\u9020\u51fa\u6765\u3002\\n\u5982\u679c\u9700\u8981\u6dfb\u52a0\u98de\u884c\u5668\u529f\u80fd\uff0c\u7c7b\u4f3cAI\uff0c\u9700\u8981\u5728\u661f\u7403\u7684\u6536\u96c6\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u4e0a\u53bb\u3002\\n\\n> TODO\\n\\n* \u62cd\u7167\u529f\u80fd\u786e\u5b9a\u5982\u4f55\u505a\uff1f\\n* \u901a\u77e5\u540e\u7684\u64cd\u4f5c\u65b9\u5f0f\\n* \u64cd\u4f5c\u65f6\u95f4\u9650\u5236"},{"id":"/2019/python/inspect","metadata":{"permalink":"/blog/2019/python/inspect","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/python/inspect.mdx","title":"Python\u9ad8\u624b\u4e4b\u8def","description":"Title: \u7b2c\u4e09\u7248","date":"2019-06-09T11:28:32.000Z","formattedDate":"2019\u5e746\u67089\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"python","permalink":"/blog/tags/python"}],"readingTime":0.34,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Python\u9ad8\u624b\u4e4b\u8def","tags":["\u7b14\u8bb0","python"],"comments":true,"date":"2019-06-09 11:28:32 +0800","published":true},"prevItem":{"title":"\u65c5\u884c\u8005\u4e00\u53f7","permalink":"/blog/2019/voyager"},"nextItem":{"title":"\u5bf9\u5bf9\u5b50","permalink":"/blog/2019/poetry"}},"content":"Title: \u7b2c\u4e09\u7248\\n\\n* 10.1 \u751f\u6210\u5668\\n\\n\u67e5\u770b\u4e00\u4e2a\u51fd\u6570\u662f\u5426\u662f\u751f\u6210\u5668 `isgeneratorfunction()`\\n\\n```python\\nimport inspect\\n\\ninspect.isgeneratorfunction(foo)\\n```\\n\\n\u83b7\u53d6\u751f\u6210\u5668\u7684\u5f53\u524d\u72b6\u6001 `getgeneratorstate()`\\n\\n1. `GEN_CREATED`    \u7b49\u5f85\u88ab\u7b2c\u4e00\u6b21\u6267\u884c\\n2. `GEN_RUNNING`    \u6b63\u5728\u88ab\u6267\u884c\\n3. `GEN_SUSPENDED`  \u7b49\u5f85\u88ab `next()` \u8c03\u7528\\n4. `GEN_CLOSED`     \u7ed3\u675f\u8fd0\u884c"},{"id":"/2019/poetry","metadata":{"permalink":"/blog/2019/poetry","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/poetry.mdx","title":"\u5bf9\u5bf9\u5b50","description":"\u82b1\u65e0\u767e\u65e5\u7ea2\uff0c\u5374\u6709\u767e\u6001\u751f\uff0c\u4e00\u6001\u53c8\u4e00\u6001\uff0c\u6bc1\u706d\u81f3\u91cd\u751f\uff01\u6c34\u6709\u6e05\u6d4a\uff0c\u4eba\u6709\u6b63\u90aa\uff0c\u4f3c\u6e05\u5374\u975e\u6e05\uff0c\u4f3c\u90aa\u5374\u975e\u90aa\uff0c\u9c7c\u76ee\u6df7\u73e0\u5883\uff0c\u6167\u773c\u89c2\uff0c\u6167\u773c\u8fde\u6167\u5fc3\uff0c\u975e\u773c\uff0c\u4ea6\u975e\u8033\uff0c\u5fc3\u51c0\u9759\uff0c\u5fc3\u65e0\u6742\u5ff5\uff0c\u65b9\u80fd\u8fa8\uff01  \u2014\u2014 Elewen","date":"2019-05-30T21:24:23.000Z","formattedDate":"2019\u5e745\u670830\u65e5","tags":[{"label":"\u56de\u5fc6","permalink":"/blog/tags/\u56de\u5fc6"}],"readingTime":1.2,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u5bf9\u5bf9\u5b50","tags":["\u56de\u5fc6"],"comments":true,"date":"2019-05-30 21:24:23 +0800","published":true},"prevItem":{"title":"Python\u9ad8\u624b\u4e4b\u8def","permalink":"/blog/2019/python/inspect"},"nextItem":{"title":"\u5ed6\u96ea\u5cf0Python\u5b66\u4e60\u6559\u7a0b","permalink":"/blog/2019/python/python"}},"content":"\u82b1\u65e0\u767e\u65e5\u7ea2\uff0c\u5374\u6709\u767e\u6001\u751f\uff0c\u4e00\u6001\u53c8\u4e00\u6001\uff0c\u6bc1\u706d\u81f3\u91cd\u751f\uff01\u6c34\u6709\u6e05\u6d4a\uff0c\u4eba\u6709\u6b63\u90aa\uff0c\u4f3c\u6e05\u5374\u975e\u6e05\uff0c\u4f3c\u90aa\u5374\u975e\u90aa\uff0c\u9c7c\u76ee\u6df7\u73e0\u5883\uff0c\u6167\u773c\u89c2\uff0c\u6167\u773c\u8fde\u6167\u5fc3\uff0c\u975e\u773c\uff0c\u4ea6\u975e\u8033\uff0c\u5fc3\u51c0\u9759\uff0c\u5fc3\u65e0\u6742\u5ff5\uff0c\u65b9\u80fd\u8fa8\uff01  \u2014\u2014 Elewen\\n\\n\u53f6\u6709\u5e38\u9752\u7eff\uff0c\u5374\u65e0\u8bd7\u8bcd\u9882\uff0c\u987e\u82b1\u5fd8\u843d\u53f6\uff0c\u82b1\u843d\u62c2\u8896\u53bb\uff01\u4eba\u6709\u79bb\u5408\uff0c\u6708\u6709\u5706\u7f3a\uff0c\u4f3c\u79bb\u5374\u975e\u79bb\uff0c\u4f3c\u7f3a\u5374\u975e\u7f3a\uff0c\u6cfe\u6e2d\u5206\u660e\u65f6\uff0c\u73b0\u5f7c\u5cb8\uff0c\u5f7c\u5cb8\u6709\u7f9e\u82b1\uff0c\u65e0\u8272\uff0c\u4ea6\u65e0\u53f6\uff0c\u82b1\u5f85\u53f6\uff0c\u53f6\u80a5\u82b1\u7ea2\uff0c\u767b\u5f7c\u5cb8\uff01  \u2014\u2014 Danyow\\n\\nTitle: \u548c\u6709\u94b1\u7684\u6587\u827a\u9752\u5e74\u7ea6\u4f1a\u662f\u4ec0\u4e48\u6837\u7684\u4f53\u9a8c\uff1f\uff08\u5df2\u7ecf\u88ab\u5220\uff09\\n\\n[\u5899\u5916\u94fe\u63a5][youtube]\\n\\n\u7ae0\u53f0\u67f3\uff0c\u7ae0\u53f0\u67f3\uff1b\u6614\u65e5\u9752\u9752\u4eca\u5728\u5426\uff1f\\n\u4e1c\u98ce\u6076\uff0c\u6b22\u60c5\u8584\uff1b\u4e00\u676f\u6101\u7eea\uff0c\u51e0\u5e74\u79bb\u7d22\u3002\\n\u800c\u4eca\u5374\u6094\u5f53\u65f6\u9519\uff0c\u5f53\u65f6\u9519\uff1b\\n\u4e07\u4e8b\u4f11\u4f11\u4f11\u83ab\u83ab\uff1b\\n\u4e00\u591c\u6e58\u541b\u767d\u53d1\u591a\uff0c\\n\u65e0\u4eba\u80fd\u5531\u91c7\u83b2\u6b4c\uff1b\\n\u591c\u957f\u4eba\u5948\u4f55\u3002\\n\u4eba\u6210\u5404\uff0c\u4eca\u975e\u6628\uff1b\\n\u4eca\u65e5\u5cb1\u5b97\u592b\u5982\u4f55\u3002\\n\\n[youtube]:https://www.youtube.com/watch?v=xJ-wHmfnuek"},{"id":"/2019/python/python","metadata":{"permalink":"/blog/2019/python/python","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/python/python.mdx","title":"\u5ed6\u96ea\u5cf0Python\u5b66\u4e60\u6559\u7a0b","description":"\u5c0f\u767d\u5165\u95e8, \u4ee5\u524d\u7684\u7b14\u8bb0\u3002","date":"2019-05-29T22:19:59.000Z","formattedDate":"2019\u5e745\u670829\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"python","permalink":"/blog/tags/python"}],"readingTime":9.225,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"\u5ed6\u96ea\u5cf0Python\u5b66\u4e60\u6559\u7a0b","tags":["\u7b14\u8bb0","python"],"comments":true,"date":"2019-05-29 22:19:59 +0800","published":true},"prevItem":{"title":"\u5bf9\u5bf9\u5b50","permalink":"/blog/2019/poetry"},"nextItem":{"title":"Python \u5185\u7f6e\u51fd\u6570","permalink":"/blog/2019/python/eval"}},"content":"\u5c0f\u767d\u5165\u95e8, \u4ee5\u524d\u7684\u7b14\u8bb0\u3002\\n\\n## \u51fd\u6570\\n\\n### \u51fd\u6570\u7684\u53c2\u6570\\n\\n* \u5f53\u9ed8\u8ba4\u53c2\u6570\u4e3a\u53ef\u53d8\u5bf9\u8c61\u7684\u65f6\u5019 eg:\\n\\n```python\\ndef add_end(L=[]):\\n    L.append(\'END\')\\n    return L\\n\\n\'\'\'\\n\u5982\u679c\u591a\u6b21\u8c03\u7528\u8be5\u51fd\u6570\\n\u5c31\u4f1a\u5bfc\u81f4L\u7684\u503c\u4e0d\u65ad\u9012\u589e\\n>>> add_end()\\n[\'END\', \'END\']\\n>>> add_end()\\n[\'END\', \'END\', \'END\']\\n\u56e0\u4e3aL\u4e5f\u662f\u4e00\u4e2a\u53d8\u91cf\\n\u6240\u4ee5\u6700\u4f73\u505a\u6cd5\u662f\u5c06 L=None\\n\u5728\u51fd\u6570\u5185\u90e8\u53bb\u505a\u5224\u65ad\\n\'\'\'\\n```\\n\\n* \u5b9a\u4e49\u53ef\u53d8\u53c2\u6570\u7684\u7684\u51fd\u6570\\n\\n```python\\ndef calc(*numbers):\\n    sum = 0\\n    for n in numbers:\\n        sum = sum + n * n\\n    return sum\\n\\n\'\'\'\\n# \u5f53\u5982\u679c\u8981\u4f7f\u7528list\u4f20\u5165\u7684\u8bdd\\n\'\'\'\\nnums = [1, 2, 3]\\ncalc(*nums)\\n```\\n\\n* \u5173\u952e\u5b57\u53c2\u6570\u7684\u7528\u6cd5\u548c\u53ef\u53d8\u53c2\u6570\u7c7b\u4f3c\\n\\n```python\\n# \u5b9a\u4e49\\n**kw\\n#\u8c03\u7528\\n>>> extra = {\'city\': \'Beijing\', \'job\': \'Engineer\'}\\n>>> person(\'Jack\', 24, **extra)\\n```\\n\\n* \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\\n\\n```python\\n# \u65e0\u53ef\u53d8\u53c2\u6570\u65f6 \u5fc5\u987b\u52a0\u5165*\u5206\u9694\\ndef person(name, age, *, city, job):\\n    print(name, age, city, job)\\n\\n# \u6709\u53ef\u53d8\u53c2\u6570\u65f6 \u65e0\u5e8f\u7406\u4f1a\\ndef person(name, age, *args, city, job):\\n    print(name, age, args, city, job)\\n```\\n\\n* \u53c2\u6570\u7ec4\u5408\\n\\n\u76ee\u524d\u5171\u6709\u4e94\u79cd\u53c2\u6570\\n\\n1. \u5fc5\u9009\\n2. \u9ed8\u8ba4\\n3. \u53ef\u53d8\\n4. \u5173\u952e\u5b57\\n5. \u547d\u540d\u5173\u952e\u5b57\\n\\n\u5b9a\u4e49\u5fc5\u987b\u9075\u5faa\u4ee5\u4e0a\u987a\u5e8f\\n\\n### \u9012\u5f52\u51fd\u6570\\n\\n* \u9012\u5f52\u9700\u8981\u6ce8\u610f\u4e00\u70b9\u5c31\u662f: \u9632\u6b62\u51fd\u6570\u6808\u6ea2\u51fa\\n\\n* \u5c3d\u53ef\u80fd\u7684\u91c7\u7528\u5c3e\u9012\u5f52\u65b9\u5f0f\u6765\u5904\u7406\u9012\u5f52\u51fd\u6570\\n  * \u5c3e\u9012\u5f52\uff1a\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019, \u53ea\u8c03\u7528\u8be5\u51fd\u6570\u672c\u8eab, \u4e0d\u80fd\u6dfb\u52a0\u5176\u4ed6\u7684\u8868\u8fbe\u5f0f.\\n\\n## \u9ad8\u7ea7\u7279\u6027\\n\\n### \u5207\u7247\\n\\n* \u5f53\u5982\u679c\u91c7\u7528-\u53f7\u6765\u8fdb\u884c\u5012\u5e8f\u53d6\u6570\u7684\u65f6\u5019, \u5e76\u4e0d\u662f\u53d6\u5f97\u987a\u5e8f\u4e5f\u662f\u5012\u7684, \u800c\u662f\u6b63\u5e8f.\\n\\n```python\\nL = [\'Michael\', \'Sarah\', \'Tracy\', \'Bob\', \'Jack\']\\nL[-2:]\\n# \u8fd9\u4e2a-2\u6307\u4ece\u5012\u6570\u7b2c\u4e8c\u4e2a\u5f00\u59cb, \u7ee7\u7eed\u5f80\u540e\u53d6\u503c, \u800c\u4e0d\u662f\u5f80\u524d\u53d6\u503c.\\n# \u5373: [\'Bob\', \'Jack\']\\n# \u800c\u4e0d\u662f [\'Bob\', \'Tracy\', \'Sarah\', \'Michael\']\\n```\\n\\n### \u8fed\u4ee3\\n\\n* \u5b57\u5178\u76f4\u63a5\u904d\u5386\u65f6\u53d6\u5f97\u662f\u6240\u6709\u7684\u952e, \u9700\u8981\u5b57\u5178\u7684\u6240\u6709\u503c\u662f `dic.values()`, \u6240\u6709\u952e\u503c\u5bf9\u662f `dic.items()`\\n\\n* `Iterable`: \u53ef\u8fed\u4ee3 `from collections import Iterable`\\n\\n* `isinstance`: \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u7684\u7c7b\u578b `isinstance(object, class-or-type-or-tuple)`\\n\\n* `enumerate` \u5c06\u4e00\u4e2alist\u6539\u53d8\u4e3a\u7d22\u5f15-\u5143\u7d20\u5bf9\\n\\n```python\\n>>> for i, value in enumerate([\'A\', \'B\', \'C\']):\\n...     print(i, value)\\n...\\n0 A\\n1 B\\n2 C\\n```\\n\\n* \u53ef\u4ee5\u540c\u65f6\u5f15\u7528\u4e24\u4e2a\u53d8\u91cf\\n\\n```py\\n>>> for x, y in [(1, 1), (2, 4), (3, 9)]:\\n...     print(x, y)\\n...\\n1 1\\n2 4\\n3 9\\n```\\n\\n* `for ... in` \u662f\u4e0d\u652f\u6301\u76f4\u63a5\u904d\u5386\u5b57\u5178\u7684\u65f6\u5019, \u540c\u65f6\u53d6\u5230\u952e\u548c\u503c\u9700\u8981\u4ee5\u4e0b\u65b9\u6cd5\\n\\n```py\\n# \u4f1a\u62a5\u9519\\nd = {\'key_1\':\'1\', \'key_2\':\'2\', \'key_3\':\'3\'}\\nfor key, value in d:\\n    print(key + value)\\n\\n# \u52a0\u4e0aitems\u8fd9\u6837\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\\nd = {\'key_1\':\'1\', \'key_2\':\'2\', \'key_3\':\'3\'}\\nfor key, value in d.items():\\n    print(key + value)\\n```\\n\\n### \u5217\u8868\u751f\u6210\u5668\\n\\n* `[]`\\n\\n### \u751f\u6210\u5668: generator\\n\\n* `()` \u6216\u8005 `yield`\\n\\n### \u8fed\u4ee3\u5668: Iterator\\n\\n* \u51e1\u662f\u53ef\u4f5c\u7528\u4e8e`for`\u5faa\u73af\u7684\u5bf9\u8c61\u90fd\u662f`Iterable`\u7c7b\u578b\uff1b\\n* \u51e1\u662f\u53ef\u4f5c\u7528\u4e8e`next()`\u51fd\u6570\u7684\u5bf9\u8c61\u90fd\u662f`Iterator`\u7c7b\u578b\uff0c\u5b83\u4eec\u8868\u793a\u4e00\u4e2a\u60f0\u6027\u8ba1\u7b97\u7684\u5e8f\u5217\uff1b\\n* \u96c6\u5408\u6570\u636e\u7c7b\u578b\u5982`list\u3001dict\u3001str`\u7b49\u662f`Iterable`\u4f46\u4e0d\u662f`Iterator`\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u901a\u8fc7`iter()`\u51fd\u6570\u83b7\u5f97\u4e00\u4e2a`Iterator`\u5bf9\u8c61\u3002\\n* `for`\u5faa\u73af\u672c\u8d28\u4e0a\u5c31\u662f\u901a\u8fc7\u4e0d\u65ad\u8c03\u7528`next()`\u51fd\u6570\u5b9e\u73b0\u7684\\n\\n## \u51fd\u6570\u5f0f\u7f16\u7a0b\\n\\n### builtins: \u5185\u7f6e\u51fd\u6570\\n\\n* `abs`\u5c31\u5728`import builtins`\\n\\n### \u9ad8\u9636\u51fd\u6570\\n\\n* `map` \u5bf9\u6bcf\u4e2a\u6570\u8fdb\u884c\u4e00\u6b21\u51fd\u6570\u7b97\u6cd5, \u7136\u540e\u91cd\u65b0\u7ec4\u88c5\u4e3a\u4e00\u4e2a\u6570\u7ec4.\\n\\n* `reduce` \u4ece 0, 1 \u6bcf\u4e24\u4e2a, \u76f4\u5230\u6700\u540e\u4e00\u4e2a\u6570\u8fdb\u884c\u4e00\u6b21\u51fd\u6570\u7b97\u6cd5, \u7136\u540e\u8fd4\u56de.\\n\\n* `filter` \u904d\u5386\u6bcf\u4e2a\u6570\u5bf9\u5176\u8fdb\u884c\u8fc7\u6ee4 \u771f\u4fdd\u5b58, \u5047\u5220\u9664.\\n\\n> \u4ee5\u4e0a\u90fd\u662f\u8fd4\u56de\u7684\u662f `Iterator` \u7c7b\u578b \u9700\u8981\u7528`list()`\u8ba9\u5176\u7b97\u5b8c.\\n\\n## \u6a21\u5757\\n\\n### \u4f7f\u7528\u6a21\u5757\\n\\n* `sys.argv`\u5b58\u50a8\u4e86\u547d\u4ee4\u884c\u8f93\u5165\u53c2\u6570, \u5f53\u957f\u5ea6\u4e3a1\u65f6\u6ca1\u6709\u8f93\u5165\u53c2\u6570.\\n\\n* `if __name__==\'__main__\':` \u88ab\u5f15\u5165\u4f7f\u7528\u65f6\u5931\u6548, \u4ec5\u5728\u8fd0\u884c\u5f53\u524d\u6587\u4ef6\u65f6\u751f\u6548, \u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5.\\n\\n### \u5b89\u88c5\u7b2c\u4e09\u65b9\u6a21\u5757\\n\\n* \u6a21\u5757\u641c\u7d22\u8def\u5f84 \u73af\u5883\u4fee\u6539`PYTHONPATH`\\n\\n```py\\n# \u4ec5\u4ec5\u5728\u8fd0\u884c\u65f6\u6dfb\u52a0\\nimport sys\\n>>> sys.path.append(\'/Users/michael/my_py_scripts\')\\n```\\n\\n## \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\\n\\n### \u83b7\u53d6\u5bf9\u8c61\u4fe1\u606f\\n\\n* \u83b7\u53d6\u5bf9\u8c61\u6240\u6709\u65b9\u6cd5 `dir()`\\n\\n* \u7c7b\u4f3cOC\u52a8\u6001\u8fd0\u884c\u65f6 `getattr()` `setattr()` `hasattr()`\\n\\n## \u9762\u5411\u5bf9\u8c61\u9ad8\u7ea7\u7f16\u7a0b\\n\\n### \u4f7f\u7528__slots__\\n\\n* python\u7684\u52a8\u6001\u80fd\u529b\u5f88\u5f3a, \u751a\u81f3\u53ef\u4ee5\u7ed9\u7c7b\u6dfb\u52a0\u7ed1\u5b9a\u4e00\u4e2a\u65b9\u6cd5, \u6216\u8005\u662f\u7ed9\u5bf9\u8c61\u7ed1\u5b9a\u4e00\u4e2a\u53c2\u6570. \u4f46\u6709\u95ee\u9898\u5c31\u662f\u60f3\u8d77\u9650\u5236\u4f5c\u7528, \u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u5230\u4e86__slots__\\n\\n```py\\nclass Student(object):\\n    __slots__ = (\'name\', \'age\') # \u7528tuple\u5b9a\u4e49\u5141\u8bb8\u7ed1\u5b9a\u7684\u5c5e\u6027\u540d\u79f0\\n\'\'\'\\n\u8fd9\u91cc\u8865\u5145\u4e0b\u7f51\u53cb\u53d1\u73b0\u7684\u4e00\u4e9b\u73b0\u8c61\\n1. \u5982\u679c\u8bbe\u7f6e\u4e86__slots__ \u4f46\u662f\u7ed9\u7c7b\u76f4\u63a5\u7ed1\u5b9a\u65b0\u7684\u503c, \u8fd8\u662f\u53ef\u884c eg: Student.score = 99\\n2. \u5982\u679c\u91c7\u7528\u4e86__slots__\u5185\u542b\u6709\u53cc\u4e0b\u5212\u7ebf\u7684\u53d8\u91cf\u65f6, \u5728\u7ee7\u627f\u7684\u65f6\u5019\u8be5 \u53d8\u91cf\u4f1a\u53d8\u5f62 eg: Person __slots__(\'__name\') Student(Person) __slots__() \u8fd9\u65f6\u5019\u7684Student\u7684name\u5728\u7528\u7684\u65f6\u5019\u4f1a\u62a5\u9519. \u7531\u4e8e\u5176\u6ca1\u6709\u6539\u5199\u672c\u8eab\u7684__name, \u6240\u4ee5\u5df2\u7ecf\u53d8\u5f62\u4e3a_Persion__name\\n\'\'\'\\n```\\n\\n### \u5b9a\u5236\u7c7b\\n\\n* `__init__`    \u521d\u59cb\u5316\u7684\u65f6\u5019\u4f7f\u7528\\n* `__len__`     `len()`\u65b9\u6cd5\u7684\u65f6\u5019\\n* `__str__`     `print()`\u65b9\u6cd5\u7684\u65f6\u5019\\n* `__repr__`    \u547d\u4ee4\u884c\u76f4\u63a5\u8f93\u51fa\u7684\u65f6\u5019\\n* `__iter__`    \u8fd4\u56de\u8fed\u4ee3\u6240\u9700\u8981\u7684\u5bf9\u8c61\\n* `__next__`    \u8fd4\u56de\u4e0b\u4e00\u4e2a\u53d6\u51fa\u6765\u7684\u503c\\n* `__getitem__` `[::]`\u7684\u65b9\u5f0f\u53d6\u4e0b\u6807\\n* `__getattr__` \u901a\u5e38\u7528\u4f5c\u83b7\u53d6\u4e00\u4e2a\u6ca1\u6709\u7684\u503c\u5f97\u5c5e\u6027\u7684\u65f6\u5019\\n* `__call__`    \u5224\u65ad\u662f\u5426\u53ef\u8c03\u7528\u7684\u5177\u4f53\u6761\u4ef6`callable()`\\n\\n### \u5143\u7c7b\\n\\n* \u7c7b\u53ef\u4ee5\u901a\u8fc7 `type()` \u76f4\u63a5\u53bb\u521b\u5efa.\\n\\n```py\\ndef fn(self, name=\'world\'): # \u5148\u5b9a\u4e49\u51fd\u6570\\n    print(\'Hello, %s.\' % name)\\nHello = type(\'Hello\', (object,), dict(hello=fn)) # \u521b\u5efaHello class\\n```\\n\\n* \u800c`metaclass`\u672c\u8d28\u4e0a\u5c31\u662f\u76d1\u542c\u521b\u5efa\u8fd9\u4e2a\u7c7b\u65f6\u7684\u56de\u8c03, \u4ece\u800c\u5728\u672c\u6e90\u4e0a\u5927\u89c4\u6a21\u7684\u53bb\u6539\u52a8\u8fd9\u4e2a\u7c7b\u7684\u521b\u5efa\u5f62\u5f0f.\\n\\n```py\\nclass ListMetaclass(type):\\n    def __new__(cls, name, bases, attrs):\\n        attrs[\'add\'] = lambda self, value: self.append(value)\\n        return type.__new__(cls, name, bases, attrs)\\nclass MyList(list, metaclass=ListMetaclass):\\n    pass\\n\'\'\'\\n>>> L = MyList()\\n>>> L.add(1)\\n>> L\\n[1]\\n\'\'\'\\n```\\n\\n## IO\u7f16\u7a0b\\n\\n### \u5e8f\u5217\u5316\\n\\n* \u6a21\u578b\u8f6cjson\\n\\n```py\\n# \u81ea\u5b9a\u4e49\u6a21\u5f0f\\ndef student2dict(std):\\n    return {\\n        \'name\': std.name,\\n        \'age\': std.age,\\n        \'score\': std.score\\n    }\\njson.dumps(s, default=student2dict)\\n\\n# \u5077\u61d2\u6a21\u5f0f\\njson.dumps(s, default=lambda obj: obj.__dict__)\\n```\\n\\n* json\u8f6c\u6a21\u578b\\n\\n```py\\ndef dict2student(d):\\n    return Student(d[\'name\'], d[\'age\'], d[\'score\'])\\njson.loads(json_str, object_hook=dict2student)\\n```\\n\\n## \u8fdb\u7a0b\u548c\u7ebf\u7a0b\\n\\n### \u591a\u7ebf\u7a0b\\n\\n* GIL\\n\\n    \u542f\u52a8\u4e0eCPU\u6838\u5fc3\u6570\u91cf\u76f8\u540c\u7684N\u4e2a\u7ebf\u7a0b\uff0c\u57284\u6838CPU\u4e0a\u53ef\u4ee5\u76d1\u63a7\u5230CPU\u5360\u7528\u7387\u4ec5\u6709102%\uff0c\u4e5f\u5c31\u662f\u4ec5\u4f7f\u7528\u4e86\u4e00\u6838\u3002\\n\\n    \u4f46\u662f\u7528C\u3001C++\u6216Java\u6765\u6539\u5199\u76f8\u540c\u7684\u6b7b\u5faa\u73af\uff0c\u76f4\u63a5\u53ef\u4ee5\u628a\u5168\u90e8\u6838\u5fc3\u8dd1\u6ee1\uff0c4\u6838\u5c31\u8dd1\u5230400%\uff0c8\u6838\u5c31\u8dd1\u5230800%\uff0c\u4e3a\u4ec0\u4e48Python\u4e0d\u884c\u5462\uff1f\\n\\n    \u56e0\u4e3aPython\u7684\u7ebf\u7a0b\u867d\u7136\u662f\u771f\u6b63\u7684\u7ebf\u7a0b\uff0c\u4f46\u89e3\u91ca\u5668\u6267\u884c\u4ee3\u7801\u65f6\uff0c\u6709\u4e00\u4e2aGIL\u9501\uff1aGlobal Interpreter Lock\uff0c\u4efb\u4f55Python\u7ebf\u7a0b\u6267\u884c\u524d\uff0c\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\uff0c\u7136\u540e\uff0c\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\u3002\u8fd9\u4e2aGIL\u5168\u5c40\u9501\u5b9e\u9645\u4e0a\u628a\u6240\u6709\u7ebf\u7a0b\u7684\u6267\u884c\u4ee3\u7801\u90fd\u7ed9\u4e0a\u4e86\u9501\uff0c\u6240\u4ee5\uff0c\u591a\u7ebf\u7a0b\u5728Python\u4e2d\u53ea\u80fd\u4ea4\u66ff\u6267\u884c\uff0c\u5373\u4f7f100\u4e2a\u7ebf\u7a0b\u8dd1\u5728100\u6838CPU\u4e0a\uff0c\u4e5f\u53ea\u80fd\u7528\u52301\u4e2a\u6838\u3002\\n\\n    GIL\u662fPython\u89e3\u91ca\u5668\u8bbe\u8ba1\u7684\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u901a\u5e38\u6211\u4eec\u7528\u7684\u89e3\u91ca\u5668\u662f\u5b98\u65b9\u5b9e\u73b0\u7684CPython\uff0c\u8981\u771f\u6b63\u5229\u7528\u591a\u6838\uff0c\u9664\u975e\u91cd\u5199\u4e00\u4e2a\u4e0d\u5e26GIL\u7684\u89e3\u91ca\u5668\u3002\\n\\n    \u6240\u4ee5\uff0c\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u4f46\u4e0d\u8981\u6307\u671b\u80fd\u6709\u6548\u5229\u7528\u591a\u6838\u3002\u5982\u679c\u4e00\u5b9a\u8981\u901a\u8fc7\u591a\u7ebf\u7a0b\u5229\u7528\u591a\u6838\uff0c\u90a3\u53ea\u80fd\u901a\u8fc7C\u6269\u5c55\u6765\u5b9e\u73b0\uff0c\u4e0d\u8fc7\u8fd9\u6837\u5c31\u5931\u53bb\u4e86Python\u7b80\u5355\u6613\u7528\u7684\u7279\u70b9\u3002\\n\\n    \u4e0d\u8fc7\uff0c\u4e5f\u4e0d\u7528\u8fc7\u4e8e\u62c5\u5fc3\uff0cPython\u867d\u7136\u4e0d\u80fd\u5229\u7528\u591a\u7ebf\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u591a\u8fdb\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\u3002\u591a\u4e2aPython\u8fdb\u7a0b\u6709\u5404\u81ea\u72ec\u7acb\u7684GIL\u9501\uff0c\u4e92\u4e0d\u5f71\u54cd\u3002"},{"id":"/2019/python/eval","metadata":{"permalink":"/blog/2019/python/eval","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/python/eval.mdx","title":"Python \u5185\u7f6e\u51fd\u6570","description":"eval()","date":"2019-05-28T22:28:38.000Z","formattedDate":"2019\u5e745\u670828\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"python","permalink":"/blog/tags/python"}],"readingTime":0.565,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Python \u5185\u7f6e\u51fd\u6570","tags":["\u7b14\u8bb0","python"],"comments":true,"date":"2019-05-28 22:28:38 +0800","published":true},"prevItem":{"title":"\u5ed6\u96ea\u5cf0Python\u5b66\u4e60\u6559\u7a0b","permalink":"/blog/2019/python/python"},"nextItem":{"title":"Python3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","permalink":"/blog/2019/python/object"}},"content":"## `eval()`\\n\\n`eval(expression[, globals[, locals]])`\\n\\n* expression -- \u8868\u8fbe\u5f0f\u3002\\n* globals -- \u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\u5982\u679c\u88ab\u63d0\u4f9b\uff0c\u5219\u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61\u3002\\n* locals -- \u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u5c40\u90e8\u547d\u540d\u7a7a\u95f4\uff0c\u5982\u679c\u88ab\u63d0\u4f9b\uff0c\u53ef\u4ee5\u662f\u4efb\u4f55\u6620\u5c04\u5bf9\u8c61\u3002\\n\\n```python\\n>>>x = 7\\n>>> eval( \'3 * x\' )\\n21\\n>>> eval(\'pow(2,2)\')\\n4\\n>>> eval(\'2 + 2\')\\n4\\n>>> n=81\\n>>> eval(\\"n + 4\\")\\n85\\n```\\n\\n> \u5c31\u597d\u50cf\u662f\u5728 *python* \u8bed\u8a00\u91cc\u9762\u81ea\u5efa\u4e86\u4e00\u4e2a *python* \u89e3\u6790\u5668\u3002"},{"id":"/2019/python/object","metadata":{"permalink":"/blog/2019/python/object","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/python/object.mdx","title":"Python3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","description":"Title: \u7b2c\u4e8c\u7248","date":"2019-05-27T22:33:07.000Z","formattedDate":"2019\u5e745\u670827\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"python","permalink":"/blog/tags/python"}],"readingTime":6.08,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Python3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","tags":["\u7b14\u8bb0","python"],"comments":true,"date":"2019-05-27 22:33:07 +0800","published":true},"prevItem":{"title":"Python \u5185\u7f6e\u51fd\u6570","permalink":"/blog/2019/python/eval"},"nextItem":{"title":"Python\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840","permalink":"/blog/2019/python/fundamentals"}},"content":"Title: \u7b2c\u4e8c\u7248\\n\\n## 2. Python \u5bf9\u8c61\\n\\n* \u81ea\u6211\u89e3\u91ca -> \u5728\u89c4\u8303\u81ea\u5df1\u6240\u7f16\u5199\u7684\u7c7b\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u52a0\u5165\u8be6\u5c3d\u7684\u6ce8\u91ca\u3002\\n\\n```python\\nclass Point:\\n    \'\u8fd9\u6bb5\u662f\u7c7b\u6ce8\u91ca\uff0c\u5efa\u8bae\u7528\u5355\u5f15\u53f7\'\\n\\n    def __init__(self, x=0, y=0):\\n        \'\'\'\u591a\u884c\u6587\u6863\u6ce8\u91ca\'\'\'\\n        pass\\n\\n    def foo(self):\\n        \'\u5355\u884c\u6587\u6863\u6ce8\u91ca\'\\n        pass\\n```\\n\\n* \u53cc\u4e0b\u5212\u7ebf\u7684\u547d\u540d\u7684\u53d8\u91cf\uff0c\u662f\u4f1a\u5bf9\u5176\u5b9e\u65bd**\u547d\u540d\u6539\u88c5**\u3002\u4f1a\u81ea\u52a8\u5c01\u88c5 _(\u7c7b\u540d)\\n\\n## 3. \u5bf9\u8c61\u76f8\u4f3c\u65f6\\n\\n* \u5982\u679c\u4e00\u4e2a\u7c7b\u7ee7\u627f\u4e86\u591a\u4e2a\u7c7b\uff0c\u90a3\u4e48\u5728\u521d\u59cb\u5316\u5176\u7236\u7c7b\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f\u3002\\n\\n```python\\n# \u5206\u522b\u8c03\u7528\u7236\u7c7b\\nclass Teacher(Person, Title):\\n    def __init__(self, name, title, studens):\\n        Person.__init__(self, name)\\n        Title.__init__(self, title)\\n        self.studens = studens\\n\\n\'\'\'\\n\u4ee5\u4e0a\u5c31\u662f\u7b80\u5355\u5b9a\u4e49\u4e86\u4e00\u4e2a\u591a\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\uff0c\u8fd9\u4e48\u770b\u6765\u662f\u6ca1\u4ec0\u4e48\u95ee\u9898\u7684\\n\u4f46\u4f5c\u8005\u63d0\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5728\u5b9a\u4e49\u6a21\u578b\u7684\u65f6\u5019\uff0c\u9700\u8981\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u6bcf\u6b21\u90fd\u662f\u8fde\u63a5\u4e24\u6b21\u6570\u636e\u5e93\u3002\\n\u8fd9\u91cc\u53ef\u4ee5\u91c7\u7528 __mro__ \u6765\u4fee\u6539\u65b9\u6cd5\u7684\u8c03\u7528\u987a\u5e8f\\n\'\'\'\\n\\n# \u91c7\u7528super() \u548c **kw \u7684\u65b9\u5f0f\\n\\nclass Person(object):\\n    def __init__(self, name=\'\', **kw):\\n        self.name = name\\n\\nclass Title(object):\\n    def __init__(self, title=\'\', **kw):\\n        self.title = title\\n\\nclass Teacher(Person, Title):\\n    def __init__(self, studens=null, **kw):\\n        super().__init__(**kw)\\n        self.studens = studens\\n\\n\'\'\'\\nsuper() \u7684\u65b9\u5f0f\u53ef\u4ee5\u786e\u4fddobject\u53ea\u521d\u59cb\u5316\u4e00\u6b21\u3002\\n**kw \u7684\u65b9\u5f0f\u53ef\u4ee5\u89e3\u51b3\u591a\u7236\u7c7b\u60c5\u51b5\u4e0b \u53c2\u6570\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\\n\'\'\'\\n```\\n\\n* \u5982\u679c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u62bd\u8c61\u57fa\u7c7b `abc` \u800c\u4e14\u8fd9\u4e2a\u7c7b\u91cd\u5199\u4e86 `__subclasshook__(cls, C)` \u7684\u65f6\u5019\uff0c\u9700\u8981\u6ce8\u610f\\n\\n\u4efb\u610f\u7c7b\u7684\u5b9e\u4f8b\u5728\u88ab\u8c03\u7528 `insubclass` \u548c `ininstance` \u662f\u4f1a\u53bb\u8c03\u7528\u62bd\u8c61\u57fa\u7c7b\u91cd\u5199\u7684 `__subclasshook__` \u8fd9\u4e2a\u65b9\u6cd5\u7684\uff0c\u5982\u679c\u4ed6\u8bf4\u7684\u662f\u90a3\u4e48\u5c31\u662f\u3002\\n\\n## 4. \u5f02\u5e38\u6355\u83b7\\n\\n* `else` \u548c `finally` \u7684\u8c03\u7528\u662f\uff0c\u6ca1\u6709\u5f02\u5e38\u65f6\u524d\u8005\u4f1a\u6267\u884c\uff0c\u540e\u8005\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u6267\u884c\u3002\\n\\n* \u5f02\u5e38\u7684\u5c42\u7ea7\\n\\n```python\\n\'\'\'\\n    BaseException   <---    KeybordInterrupt, SystemExit\\n                    <---    Exception   <---    \u5176\u4ed6\u6240\u6709\u7684\u5f02\u5e38\\n\'\'\'\\n```\\n\\n## 6. Python \u6570\u636e\u7ed3\u6784\\n\\n* \u65e0\u6cd5\u7ed9\u5185\u7f6e\u7c7b\u5b9e\u4f8b\u6dfb\u52a0\u5c5e\u6027\uff0c\u4f46\u53ef\u4ee5\u7ed9\u81ea\u5b9a\u4e49\u7c7b\u6dfb\u52a0\u5c5e\u6027\u3002\\n\\n```python\\no = object()\\no.x = 0\\n\'\'\'\\n\ud83d\udc46\u4f1a\u62a5\u9519\\n\ud83d\udc47\u6b63\u5e38\u8fd0\u884c\\n\'\'\'\\nclass MyClass(object):\\n    pass\\nm = MyClass()\\nm.x = 1\\n```\\n\\n* \u547d\u540d\u5143\u7ec4\u76f8\u5f53\u4e8e\u5b57\u5178\\n\\n```python\\nfrom collections import namedtuple\\n\\nStock = namedtuple(\\"Stock\\", \\"symbol current high low\\")\\n# Stock = namedtuple(\\"Stock\\", \\"symbol, current, high, low\\")\\nstock = Stock(\\"FB\\", 75.0, 75.3, 74.2)\\n# \u53ef\u4ee5\u4f7f\u7528\u70b9\u8bed\u6cd5\\nstock.symbol\\n```\\n\\n* `total_ordering` \u5bf9\u5e94\u7740 `>, <, ==, !=, >=, <=` \u903b\u8f91\u8fd0\u7b97\u7b26\\n\\n* `operator.itemgetter` \u53ef\u4ee5\u5bf9\u5143\u7ec4\u6392\u5e8f\u65f6\uff0c\u76f4\u63a5\u4fee\u6539\u6240\u8981\u6bd4\u8f83\u65f6\u7528\u5230\u7684\u662f\u7b2c\u51e0\u4e2a\u5c5e\u6027\\n\\n```python\\nfrom operator import itemgetter\\n\\nl = [(\'h\', 4), (\'n\', 6), (\'o\', 5), (\'p\', 1), (\'t\', 3), (\'y\', 2)]\\n# \u8fd9\u91cc\u76f4\u63a5\u91c7\u7528\u7b2c\u4e8c\u4e2a\u952e\u6765\u505a\u6bd4\u8f83\u7684\u9879\\nl.sort(key=itemgetter(1))\\n```\\n\\n* \u961f\u5217\u6709\u4e09\u79cd\\n\\n1. FIFO \u961f\u5217\uff08*First In First Out*\uff09\\n\\n   `from queue import Queue`\\n\\n2. LIFO \u961f\u5217\uff08*Last In First Out*\uff09\\n\\n    `from queue import LifoQueue`\\n\\n3. \u4f18\u5148\u7ea7\u961f\u5217\\n\\n    `from queue import PriorityQueue`\\n\\n## 7. Python \u9762\u5411\u5bf9\u8c61\u7684\u6377\u5f84\\n\\n* \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u80fd\u5426\u6267\u884c `with` \u8bed\u53e5\uff0c\u53ef\u4ee5\u7528\u54ea\u4e2a `dir()` \u67e5\u770b\u91cc\u9762\u662f\u5426\u6709 `__ennter__` \u548c `__exit__`\\n\\n* \u53c2\u6570\u89e3\u5305\uff0c\u5bf9\u4e8e\u5217\u8868\u5bf9\u8c61\u7684\u89e3\u5305\u662f\u52a0 `*`, \u5b57\u5178\u7684\u89e3\u5305\u662f `**`\\n\\n## 8. \u5b57\u7b26\u4e32\u4e0e\u5e8f\u5217\u5316\\n\\n* \u5360\u4f4d\u503c\u6539\u53d8\u6253\u5370\u6837\u5f0f\\n\\n```python\\n\'\'\'\\n{0:10s}     s\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u662f\u536010\u4e2a\u5b57\u8282\u3002\\n{1:^9d}     d\u6574\u5f62\uff0c\u7136\u540e\u53609\u4e2a\u5b57\u8282\uff0c^(\u8131\u5b57\u7b26)\u8868\u793a\u5c45\u4e2d\u5bf9\u9f50\u3002\\n{2:<8.2f}   f\u6d6e\u70b9\u578b\uff0c\u7136\u540e\u53608\u4e2a\u5b57\u8282\uff0c<\u8868\u793a\u5411\u5de6\u5bf9\u9f50\uff0c.2\u7701\u7565\u4e24\u4f4d\u5c0f\u6570\\n{3:>7.2f}   f\u6d6e\u70b9\u578b\uff0c\u7136\u540e\u53607\u4e2a\u5b57\u8282\uff0c>\u8868\u793a\u5411\u53f3\u5bf9\u9f50\uff0c.2\u7701\u7565\u4e24\u4f4d\u5c0f\u6570\\n\'\'\'\\norders = [(\'burger\', 2, 5),\\n          (\'fries\', 3.5, 1),\\n          (\'cola\', 1.75, 3)]\\n\\nprint(\\"PRODUCT    QUANTITY   PRICE    SUBTOTAL\\")\\n\\nfor product, price, quantity in orders:\\n    subtotal = price * quantity\\n    print(\\"{0:10s}{1:^9d}   ${2:<8.2f}${3:>7.2f}\\".format(product, quantity, price, subtotal))\\n\\n\'\'\'\\nPRODUCT    QUANTITY   PRICE    SUBTOTAL\\nburger        5       $2.00    $  10.00\\nfries         1       $3.50    $   3.50\\ncola          3       $1.75    $   5.25\\n\'\'\'\\n```\\n\\n## 9. \u8fed\u4ee3\u5668\u6a21\u5f0f\\n\\n* \u534f\u7a0b\\n\\n```python\\ndef tally():\\n    score = 0\\n    while True:\\n        increment = yield score\\n        print(\\"increment : {}, score : {}\\".format(increment, score))\\n        score += increment\\n\\nwhite_sox = tally()\\nnext(white_sox)\\nwhite_sox.send(3)\\n\\n\'\'\'\\nincrement : 3, score : 0\\n\'\'\'\\n```\\n\\n1. `yield` \u7684\u51fa\u73b0\u548c\u751f\u6210\u5668\u6682\u505c\u3002\\n2. \u5728\u51fd\u6570\u5916\u6267\u884c `send()` \u65b9\u6cd5\uff0c\u4e14\u6fc0\u6d3b\u4e86\u751f\u6210\u5668\u3002\\n3. \u53d1\u9001\u7684\u503c\u8d4b\u7ed9\u4e86 `yield` \u8bed\u53e5\u5de6\u4fa7\u7684\u53d8\u91cf\u3002\\n4. \u751f\u6210\u5668\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u81f3\u9047\u5230\u4e0b\u4e00\u4e2a `yield` \u8bed\u53e5\u3002\\n\\n## 10. Python \u8bbe\u8ba1\u6a21\u5f0f I\\n\\n* \u89c2\u5bdf\u8005\u6a21\u5f0f\u5728\u6267\u884c\u8d77\u6765\u9700\u8981\u4ee5\u4e0b\u4e24\u4e2a\u6b65\u9aa4\\n\\n    1. \u88ab\u89c2\u5bdf\u8005\u4e3b\u52a8\u901a\u77e5\u89c2\u5bdf\u8005 \u901a\u8fc7 `_update_observers`\\n\\n    ```python\\n    class Inventory:\\n        def __init__(self):\\n            self.observers = []\\n\\n        def _update_observers(self):\\n            for observer in self.observers:\\n                observer()\\n    ```\\n\\n    1. \u89c2\u5bdf\u8005\u81ea\u8eab\u73b0\u5b9e\u88ab\u8c03\u7528\u65b9\u6cd5 \u901a\u8fc7 `__call__`\\n\\n    ```python\\n    class Observer:\\n        def __init__(self, inventory):\\n            self.inventory = inventory\\n\\n        def __call__(self):\\n            print(\\"\u89c2\u5bdf\u6210\u529f\uff01\\")\\n    ```\\n\\n## 12. \u6d4b\u8bd5\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\\n\\n* `unittest` \u7684 `setUp()` \u662f\u7528\u4e8e\u6bcf\u6b21\u6267\u884c\u6d4b\u8bd5\u65f6\uff0c\u90fd\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5\u7528\u4ee5\u4fdd\u8bc1\u6570\u636e\u88ab\u6c61\u67d3 \u548c `tearDown()` \u662f\u7528\u6765\u4fdd\u8bc1\u6bcf\u6b21\u6d4b\u8bd5\u7ed3\u675f\u540e\u8c03\u7528\u3002\\n\\n* `py.test` \u4e0e\u4e4b\u76f8\u5bf9\u5e94\u7684\u6709\u7c7b\u4f3c\u51e0\u4e2a\u3002\\n\\n  1. `setup_module`\\n  2. `teardown_module`\\n  3. `setup_class`\\n  4. `teardown_class`\\n  5. `setup_method`\\n  6. `teardown_method`\\n\\n* `pytest_funcarg__<idenntifier>` \u548c\u88ab\u6d4b\u8bd5\u51fd\u6570\u9700\u8981\u63a5\u53d7\u7684\u53c2\u6570\u4f5c\u4e3a\u6d4b\u8bd5\\n\\n```python\\ndef pytest_funcarg__numbers(request):\\n    return [1,2,3]\\n\\ndef test_sum(numbers):\\n    assert sum(numbers) == 6\\n```\\n\\n## 13. \u5e76\u53d1\\n\\n* \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u518d\u88ab\u9700\u8981\u91cd\u5199 `run()` \u65b9\u6cd5\uff0c\u4f46\u8c03\u7528\u65f6\u7528\u5230\u7684\u662f `start()`"},{"id":"/2019/python/fundamentals","metadata":{"permalink":"/blog/2019/python/fundamentals","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/python/fundamentals.mdx","title":"Python\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840","description":"Title: \u4e0a\u6d77\u5e02\u9ad8\u7b49\u5b66\u6821\u8ba1\u7b97\u673a\u7b49\u7ea7\u8003\u8bd5\uff08\u4e8c\u7ea7\uff09\u63a8\u8350\u6559\u6750","date":"2019-05-27T21:06:13.000Z","formattedDate":"2019\u5e745\u670827\u65e5","tags":[{"label":"\u7b14\u8bb0","permalink":"/blog/tags/\u7b14\u8bb0"},{"label":"python","permalink":"/blog/tags/python"}],"readingTime":1.495,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Python\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840","tags":["\u7b14\u8bb0","python"],"comments":true,"date":"2019-05-27 21:06:13 +0800"},"prevItem":{"title":"Python3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","permalink":"/blog/2019/python/object"},"nextItem":{"title":"Hello World!","permalink":"/blog/2019/jekyll"}},"content":"Title: \u4e0a\u6d77\u5e02\u9ad8\u7b49\u5b66\u6821\u8ba1\u7b97\u673a\u7b49\u7ea7\u8003\u8bd5\uff08\u4e8c\u7ea7\uff09\u63a8\u8350\u6559\u6750\\n\\n## 2. Python\u7a0b\u5e8f\u7684\u57fa\u672c\u8bed\u6cd5\\n\\n* \u56db\u820d\u516d\u5165\u4e94\u7559\u53cc `round()`\\n\\n```python\\nround(1.5)\\nround(2.5)\\n\'\'\'\\n2\\n2\\n\'\'\'\\n```\\n\\n## 3. Python \u7a0b\u5e8f\u7684\u57fa\u672c\u6d41\u7a0b\u63a7\u5236\\n\\n* \u5141\u8bb8 `x > y > z` `x < y > z`\\n\\n* `while` \u548c `else` \u53ef\u4ee5\u4e00\u8d77\u7528 \u5728\u9000\u51fa\u5faa\u73af\u7684\u65f6\u5019\u8c03\u7528\\n\\n## 4. Python\u7684\u7279\u5f81\u6570\u636e\u7c7b\u578b\\n\\n* \u5217\u8868\u548c\u5b57\u5178\u7684 `clear()` \u65b9\u6cd5\\n\\n```py\\na = b = [1, 2, 3]\\nprint(a, b)\\na.clear()\\nprint(a, b)\\n\\nc = d = {\'x\':1, \'y\':2}\\nprint(c, d)\\nc.clear()\\nprint(c, d)\\n\\n\'\'\'\\n[1, 2, 3] [1, 2, 3]\\n[] []\\n{\'x\': 1, \'y\': 2} {\'x\': 1, \'y\': 2}\\n{} {}\\nclear\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u6e05\u9664\u6307\u9488\u6307\u5411\u6240\u5728\u5730\u5740\u7684\u5185\u5b58\\n\'\'\'\\n```\\n\\n* \u96c6\u5408\u91cc\u9762\u4e0d\u80fd\u5305\u542b\u6709\u5217\u8868\u6216\u5b57\u5178\\n\\n* \u5217\u8868\u81ea\u5df1 append \u81ea\u8eab\u7684\u65f6\u5019\u4f1a\u65e0\u7a77\u9012\u5f52 `lst.append(list)`\\n\\n## 5. \u6587\u4ef6\\n\\n* \u5728\u8868\u793a\u8def\u5f84\u7684\u5b57\u7b26\u4e32\u4e2d `/` \u7b49\u540c\u4e8e `\\\\`\uff0c\u4f46 `\\\\` \u53c8\u5fc5\u987b\u8f6c\u4e49\u4e3a `\\\\\\\\`\\n\\n```python\\n\\"D:\\\\\\\\Dir\\\\\\\\file.txt\\"\\n\\n\\"D:/Dir/file.txt\\"\\n```\\n\\n## 7. \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\\n\\n* `dir()` \u662f\u53ef\u4ee5\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u91cc\u9762\u7684\u6240\u6709\u53c2\u6570 \u5305\u62ec\u65b9\u6cd5\u548c\u5c5e\u6027\\n\\n* \u591a\u7ee7\u627f\u65f6\uff0c\u5982\u679c\u5176\u7236\u7c7b\u5f53\u505a\u6709\u5171\u540c\u7684\u65b9\u6cd5\u65f6\uff0c\u5b50\u7c7b\u8c03\u7528\u4f1a\u4ee5\u7b2c\u4e00\u4e2a\u4e3a\u51c6\uff0c\u5373\u5148\u67e5\u627e\u5148\u8c03\u7528\u3002"},{"id":"/2019/jekyll","metadata":{"permalink":"/blog/2019/jekyll","editUrl":"https://crowdin.com/project/docusaurus-v2/zh-Hans","source":"@site/blog/2019/jekyll.mdx","title":"Hello World!","description":"1. jekyll \u9759\u6001\u9875\u9762\u6846\u67b6","date":"2019-05-26T12:40:24.000Z","formattedDate":"2019\u5e745\u670826\u65e5","tags":[{"label":"jekyll","permalink":"/blog/tags/jekyll"},{"label":"whiteglass","permalink":"/blog/tags/whiteglass"},{"label":"Disqus","permalink":"/blog/tags/disqus"},{"label":"Travis","permalink":"/blog/tags/travis"}],"readingTime":4.775,"truncated":false,"authors":[],"frontMatter":{"layout":"post","title":"Hello World!","tags":["jekyll","whiteglass","Disqus","Travis"],"comments":true,"date":"2019-05-26 12:40:24 +0800"},"prevItem":{"title":"Python\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840","permalink":"/blog/2019/python/fundamentals"}},"content":"1. **jekyll** \u9759\u6001\u9875\u9762\u6846\u67b6\\n2. **whiteglass** \u4e3b\u9898\\n3. **Disqus** \u8bc4\u8bba\u7cfb\u7edf\uff08\u56fd\u5185*IP*\u5e94\u8be5\u65e0\u6cd5\u8bbf\u95ee\uff09\\n4. **Travis CI** \u81ea\u52a8\u6784\u5efa\u5de5\u5177\\n\\n## jekyll\\n\\n\u4e4b\u6240\u4ee5\u91c7\u7528 **jekyll** \u800c\u6ca1\u6709\u53bb\u4f7f\u7528\u4e2d\u6587\u6587\u6863\u66f4\u4e3a\u4e30\u5bcc\u7684 *Hexo*\uff0c\u662f\u56e0\u4e3a *Github* \u5b98\u65b9\u63a8\u8350\u7684\u662f\u524d\u8005\u3002 \u540c\u65f6\u4e5f\u6709\u53e6\u5916\u4e00\u4e2a\u539f\u56e0\uff0c**jekyll** \u770b\u8d77\u6765\u4f1a\u7b80\u7ea6\u8bb8\u591a\u3002\\n\\n\u5927\u81f4\u6b65\u9aa4\u5982\u4e0b:\\n\\n1. \u5b89\u88c5 *bundler* \u548c *jekyll*\\n    `gem install bundler jekyll`\\n2. \u521b\u5efa\u9879\u76ee\\n   `jekyll new blog` \u548c `jekyll new blog --skip-bundle`\\n   \u540e\u8005\u662f\u9488\u5bf9 **whiteglass** \u7684\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\u3002\\n3. \u8fdb\u5165\u76ee\u5f55\\n   `bundle install`\\n4. \u542f\u52a8\u672c\u5730\u8c03\u8bd5\\n   `bundle exec jekyll serve`\\n\\n\u4ee5\u4e0a\u5c31\u7b97\u662f\u628a\u623f\u5b50\u5efa\u597d\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u9700\u8981\u8ba9\u623f\u5ba2\uff08\u6211\u7684\u7b14\u8bb0\uff09\u5165\u4f4f\uff0c\u548c\u8ba9\u623f\u95f4\u66f4\u597d\u770b\u4e9b\uff08**whiteglass**\uff09\u3002  \\n\u8fd9\u4e9b\u751f\u6210\u51fa\u6765\u7684\u6587\u4ef6\u76f4\u63a5\u63a8\u9001\u5230 *Github* \u65f6\uff0c\u662f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u7684\u3002\\n\\n## whiteglass\\n\\n\u8fd9\u4e2a\u662f\u5728 [*jekyllthemes*][jekyllthemes] \u4e3b\u9898\u7f51\u7ad9\u4e0a\u9762\u627e\u5230\u7684\u3002\\n\u63a8\u8350\u91c7\u7528\u91cd\u65b0\u5efa\u623f\u5b50\u7684\u65b9\u5f0f\u3002\\n\\n\u5927\u81f4\u4f7f\u7528\u65b9\u6cd5:\\n\\n1. \u521b\u5efa\u9879\u76ee `jekyll new blog --skip-bundle`\\n2. \u6dfb\u52a0 `gem \\"jekyll-whiteglass\\"` \u5230 `Gemfile`\\n3. \u7f16\u8f91 `_config.yml`\\n\\n    ```yml\\n     theme: jekyll-whiteglass\\n     plugins:\\n     - jekyll-archives\\n     - jekyll-paginate\\n     - jekyll-sitemap\\n\\n     permalink: /:year/:month/:day/:title/\\n     paginate_path: /posts/:num/\\n     paginate: 5\\n\\n     jekyll-archives:\\n     enabled:\\n         - categories\\n         - tags\\n     layout: category_archives\\n     permalinks:\\n         category: /categories/:name/\\n      tag: /tags/:name/\\n    ```\\n\\n4. \u4f9d\u6b21\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\\n\\n    ```shell\\n    rm index.md\\n    curl -L -O \\"https://github.com/yous/whiteglass/raw/master/{index.html,about.md,archives.md,feed.xml}\\"\\n    curl -L --create-dirs -o _data/navigation.yml https://github.com/yous/whiteglass/raw/master/_data/navigation.yml\\n    ```\\n\\n5. \u5b89\u88c5\u6240\u9700\u6587\u4ef6\u548c\u542f\u52a8\\n\\n    ```shell\\n    bundle install\\n    bundle exec jekyll serve\\n    ```\\n\\n\u4f46\u8fd9\u91cc\u505a\u5b8c\u4e4b\u540e\u76f4\u63a5\u63a8\u9001\u5230 *Github* \u4e0a\u65f6\u662f\u6ca1\u6709\u4efb\u4f55\u53cd\u5e94\uff0c\u770b\u4e0d\u5230\u4efb\u4f55\u754c\u9762\u3002\\n\u8fd9\u65f6\u9700\u8981 **Travis CI**\\n\\n## Travis CI\\n\\n\u7531\u4e8e\u4e3b\u9898\u7528\u5230\u4e86 *gem* \u5305\uff0c\u800c *Github* \u53c8\u5e76\u4e0d\u80fd\u76f4\u63a5\u652f\u6301\u53bb\u64cd\u4f5c *gem*\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u7c7b\u4f3c *Jenkins* \u7684\u6301\u7eed\u96c6\u6210\u5de5\u5177\u6765\u5b8c\u6210\u8be5\u64cd\u4f5c\u3002  \\n**Travis** \u4f1a\u6839\u636e\u5f53\u524d *master* \u5206\u652f\u4e0b\u7684 `.travis.yml` \u8fd9\u4e2a\u6587\u4ef6\u53bb\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u3002  \\n\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa `.travis.yml` \u6216\u8005\u53bb [\u4e0b\u8f7d\u6700\u65b0\u7684\u6587\u4ef6][new_yml]  \\n\\n```yml\\nlanguage: ruby\\nsudo: false\\ncache: bundler\\nrvm:\\n  - 2.6.3\\nbefore_install:\\n  - gem update --system\\n  - gem install bundler\\nscript:\\n  - rm -rf _site\\n  - bundle exec jekyll build\\nbranches:\\n  only:\\n    - master\\ndeploy:\\n  provider: pages\\n  skip-cleanup: true\\n  github-token: $GITHUB_TOKEN  # <-- 1\\n  keep-history: true\\n  local-dir: _site\\n  target-branch: gh-pages   # <-- 2\\n  on:\\n    branch: master\\n```\\n\\n*yml* \u533a\u522b\u4e8e *xml*\uff0c\u5176\u4e2d *tab* \u952e\u4ee5\u4e24\u4e2a\u7a7a\u683c\u4e3a\u4e3b\uff0c\u53ef\u8bfb\u6027\u5f88\u9ad8\u3002\\n\\n\u6709\u51e0\u70b9\u8bf4\u660e:\\n\\n   1. \u8fd9\u4e2a\u53c2\u6570\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u4f46\u662f\u9700\u8981\u5728 *Github* \u7684\u8bbe\u7f6e\uff08*Settings*\uff09\u540e\u53f0\u7684\uff08*Developer settings*\uff09\u4e0a\u6dfb\u52a0\u4e00\u4e2a\uff08*Personal access tokens*\uff09. \u5f97\u5230\u8fd9\u4e2a *key* \u540e\u6dfb\u52a0\u5230 **Travis** \u7684\u5bf9\u5e94\u4ed3\u5e93\u7684\u8bbe\u7f6e\u540e\u53f0\u3002 \u5728 *Environment Variables* \u952e\u5165 *GITHUB_TOKEN* \u4e3a *Name*\uff0c*key* \u4e3a *Value*\u3002 \u7136\u540e\u76f4\u63a5 *Add* \u5373\u53ef\u3002\\n   2. \u8fd9\u91cc\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a *gh-pages* \u7684\u5206\u652f\uff0c\u4e3b\u8981\u662f\u7ed9 **Travis** \u81ea\u52a8\u6784\u5efa\u5b8c\u540e\u63a8\u9001\u7528\u3002\\n\\n\u505a\u5b8c\u8fd9\u4e9b\uff0c\u65b0\u5efa\u4e00\u4e2a\u65b0\u7684\u63d0\u4ea4\uff0c**Travis** \u5c31\u4f1a\u81ea\u52a8\u5f00\u59cb\u8fd0\u884c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u67e5\u770b\u7f51\u9875\u4e86\u3002\\n\\n* \u53ef\u80fd\u8fd9\u91cc\u4e5f\u5e76\u4e0d\u80fd\u76f4\u63a5\u7684\u67e5\u770b\u7f51\u9875\uff0c\u9700\u8981\u4fee\u6539 `_config.yml`\\n\\n```yml\\nbaseurl: \\"/blog\\" # \u4e3a\u4f60\u7684\u9879\u76ee\u540d\\nurl: \\"https://xxx.github.io\\"    # xxx\u4e3a\u4f60\u7684 Github \u7528\u6237\u540d\\n```\\n\\n## Disqus\\n\\n\u8fd9\u4e2a\u4f1a\u6bd4\u8f83\u7b80\u5355:\\n\\n   1. \u65b0\u5efa\u76ee\u5f55\u548c\u6587\u4ef6 `_includes/custom_comments_provider.html`\\n   2. \u6dfb\u52a0 `comments: true` \u5230 `_config.yml`\\n\\n\u7136\u540e\u53bb\u5230 **Disqus** \u7684\u540e\u53f0\uff0c\u65b0\u5efa\u7ad9\u70b9\uff0c\u7136\u540e\u9009\u62e9 **jekyll**\uff0c\u628a\u4ed6\u7684\u901a\u7528\u4ee3\u7801\u5168\u90e8\u62f7\u8d1d\u5230\u521a\u521a\u65b0\u5efa\u7684 *html* \u6587\u4ef6\u5f53\u4e2d\u3002\\n\\n### \u5176\u4ed6\\n\\n> \u81ea\u5b9a\u4e49\u57df\u540d\\n\\n1. \u81ea\u5b9a\u4e49\u57df\u540d\u89e3\u6790\u4e09\u5904\u3002\\n\\n   ```text\\n   *.xxx.com\\n   www.xxx.com\\n   @.xxx.com\\n   ```\\n\\n2. *ip* \u5730\u5740\u7684\u83b7\u53d6 `ping xxx.github.io`\\n3. \u7531\u4e8e\u53d8\u6210\u4e86\u5b50\u57df\u540d\uff0c\u9700\u8981\u66f4\u6539`_config.xml`\\n\\n    ```yml\\n    baseurl: \\"\\"\\n    url: \\"https://blog.xxx.com\\"    # blog\u4f5c\u4e3a\u5b50\u57df\u540d\u653e\u5728\u524d\u9762 xxx\u4e3a\u4f60\u7684 Github \u7528\u6237\u540d\\n    ```\\n\\n>Ps: 2019\u5e748\u67082\u65e5\u66f4\u65b0\\n\\n\u7531\u4e8e\u6700\u8fd1\u5728 *Windows* \u5e73\u53f0\u4e0a\u5f00\u53d1, \u6240\u4ee5\u9047\u5230\u4e00\u4e2a\u95ee\u9898.\\n*Travis CI* \u4e0d\u4f1a\u81ea\u52a8\u8fd0\u884c\u6784\u5efa\u4e86. \u5e94\u8be5\u8bf4\u6bcf\u6b21\u8fd0\u884c\u90fd\u4f1a\u62a5\u9519.\\n\u67e5\u627e\u53d1\u73b0\u6709\u4e2a\u56de\u7b54\\n\\n`\u554a\uff0c\u6211\u660e\u767d\u4e86\u3002\u60a8\u6b63\u5728\u4f7f\u7528Windows\u8ba1\u7b97\u673a\u8fdb\u884c\u5f00\u53d1\uff0c\u4f46\u6784\u5efa\u5c06\u5728Linux\u4e0a\u8fd0\u884c\u3002\u5982\u679c\u60a8\u65e0\u6cd5\u8bbf\u95eeLinux\u673a\u5668\uff0c\u6211\u8ba4\u4e3a\u6700\u597d\u4e0d\u8981Gemfile.lock\u767b\u5f55\u60a8\u7684Git\u5b58\u50a8\u5e93\u3002`\\n\\n[jekyllthemes]:https://jekyllthemes.dev/\\n[new_yml]:https://github.com/yous/whiteglass/blob/master/.travis.yml"}],"blogListPaginated":[{"items":["/2021/archwsl","/2021/note","/2019/scoop","/2020/server","/2019/rust"],"metadata":{"permalink":"/blog","page":1,"postsPerPage":5,"totalPages":6,"totalCount":29,"nextPage":"/blog/page/2","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/mac","/2019/ruby","/2019/vscode/plugin","/2019/zsh","/2019/brew"],"metadata":{"permalink":"/blog/page/2","page":2,"postsPerPage":5,"totalPages":6,"totalCount":29,"previousPage":"/blog","nextPage":"/blog/page/3","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/ssh","/2019/wtg","/2019/chocolatey","/2019/flutter","/2019/cocos"],"metadata":{"permalink":"/blog/page/3","page":3,"postsPerPage":5,"totalPages":6,"totalCount":29,"previousPage":"/blog/page/2","nextPage":"/blog/page/4","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/quantum","/2019/vscode/vscode","/2019/command","/2019/fullstack","/2019/flask"],"metadata":{"permalink":"/blog/page/4","page":4,"postsPerPage":5,"totalPages":6,"totalCount":29,"previousPage":"/blog/page/3","nextPage":"/blog/page/5","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/astronomy","/2019/voyager","/2019/python/inspect","/2019/poetry","/2019/python/python"],"metadata":{"permalink":"/blog/page/5","page":5,"postsPerPage":5,"totalPages":6,"totalCount":29,"previousPage":"/blog/page/4","nextPage":"/blog/page/6","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/python/eval","/2019/python/object","/2019/python/fundamentals","/2019/jekyll"],"metadata":{"permalink":"/blog/page/6","page":6,"postsPerPage":5,"totalPages":6,"totalCount":29,"previousPage":"/blog/page/5","blogDescription":"Blog","blogTitle":"Blog"}}],"blogTags":{"/blog/tags/mac":{"name":"Mac","items":["/2021/archwsl","/2021/note","/2020/server","/2019/rust","/2019/mac","/2019/ruby","/2019/vscode/plugin","/2019/zsh","/2019/brew"],"permalink":"/blog/tags/mac","pages":[{"items":["/2021/archwsl","/2021/note","/2020/server","/2019/rust","/2019/mac"],"metadata":{"permalink":"/blog/tags/mac","page":1,"postsPerPage":5,"totalPages":2,"totalCount":9,"nextPage":"/blog/tags/mac/page/2","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/ruby","/2019/vscode/plugin","/2019/zsh","/2019/brew"],"metadata":{"permalink":"/blog/tags/mac/page/2","page":2,"postsPerPage":5,"totalPages":2,"totalCount":9,"previousPage":"/blog/tags/mac","blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/\u7b14\u8bb0":{"name":"\u7b14\u8bb0","items":["/2021/archwsl","/2021/note","/2019/scoop","/2020/server","/2019/rust","/2019/mac","/2019/ruby","/2019/vscode/plugin","/2019/zsh","/2019/brew","/2019/ssh","/2019/wtg","/2019/chocolatey","/2019/flutter","/2019/cocos","/2019/quantum","/2019/vscode/vscode","/2019/command","/2019/flask","/2019/python/inspect","/2019/python/python","/2019/python/eval","/2019/python/object","/2019/python/fundamentals"],"permalink":"/blog/tags/\u7b14\u8bb0","pages":[{"items":["/2021/archwsl","/2021/note","/2019/scoop","/2020/server","/2019/rust"],"metadata":{"permalink":"/blog/tags/\u7b14\u8bb0","page":1,"postsPerPage":5,"totalPages":5,"totalCount":24,"nextPage":"/blog/tags/\u7b14\u8bb0/page/2","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/mac","/2019/ruby","/2019/vscode/plugin","/2019/zsh","/2019/brew"],"metadata":{"permalink":"/blog/tags/\u7b14\u8bb0/page/2","page":2,"postsPerPage":5,"totalPages":5,"totalCount":24,"previousPage":"/blog/tags/\u7b14\u8bb0","nextPage":"/blog/tags/\u7b14\u8bb0/page/3","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/ssh","/2019/wtg","/2019/chocolatey","/2019/flutter","/2019/cocos"],"metadata":{"permalink":"/blog/tags/\u7b14\u8bb0/page/3","page":3,"postsPerPage":5,"totalPages":5,"totalCount":24,"previousPage":"/blog/tags/\u7b14\u8bb0/page/2","nextPage":"/blog/tags/\u7b14\u8bb0/page/4","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/quantum","/2019/vscode/vscode","/2019/command","/2019/flask","/2019/python/inspect"],"metadata":{"permalink":"/blog/tags/\u7b14\u8bb0/page/4","page":4,"postsPerPage":5,"totalPages":5,"totalCount":24,"previousPage":"/blog/tags/\u7b14\u8bb0/page/3","nextPage":"/blog/tags/\u7b14\u8bb0/page/5","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/python/python","/2019/python/eval","/2019/python/object","/2019/python/fundamentals"],"metadata":{"permalink":"/blog/tags/\u7b14\u8bb0/page/5","page":5,"postsPerPage":5,"totalPages":5,"totalCount":24,"previousPage":"/blog/tags/\u7b14\u8bb0/page/4","blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/windows":{"name":"Windows","items":["/2019/scoop","/2019/ssh","/2019/wtg","/2019/chocolatey"],"permalink":"/blog/tags/windows","pages":[{"items":["/2019/scoop","/2019/ssh","/2019/wtg","/2019/chocolatey"],"metadata":{"permalink":"/blog/tags/windows","page":1,"postsPerPage":5,"totalPages":1,"totalCount":4,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/scoop":{"name":"scoop","items":["/2019/scoop"],"permalink":"/blog/tags/scoop","pages":[{"items":["/2019/scoop"],"metadata":{"permalink":"/blog/tags/scoop","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/rust":{"name":"Rust","items":["/2019/rust"],"permalink":"/blog/tags/rust","pages":[{"items":["/2019/rust"],"metadata":{"permalink":"/blog/tags/rust","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/ruby":{"name":"ruby","items":["/2019/ruby"],"permalink":"/blog/tags/ruby","pages":[{"items":["/2019/ruby"],"metadata":{"permalink":"/blog/tags/ruby","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/vscode":{"name":"vscode","items":["/2019/vscode/plugin"],"permalink":"/blog/tags/vscode","pages":[{"items":["/2019/vscode/plugin"],"metadata":{"permalink":"/blog/tags/vscode","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/item-2":{"name":"item2","items":["/2019/zsh"],"permalink":"/blog/tags/item-2","pages":[{"items":["/2019/zsh"],"metadata":{"permalink":"/blog/tags/item-2","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/zsh":{"name":"zsh","items":["/2019/zsh"],"permalink":"/blog/tags/zsh","pages":[{"items":["/2019/zsh"],"metadata":{"permalink":"/blog/tags/zsh","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/antigen":{"name":"antigen","items":["/2019/zsh"],"permalink":"/blog/tags/antigen","pages":[{"items":["/2019/zsh"],"metadata":{"permalink":"/blog/tags/antigen","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/brew":{"name":"brew","items":["/2019/brew"],"permalink":"/blog/tags/brew","pages":[{"items":["/2019/brew"],"metadata":{"permalink":"/blog/tags/brew","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/ssh":{"name":"ssh","items":["/2019/ssh"],"permalink":"/blog/tags/ssh","pages":[{"items":["/2019/ssh"],"metadata":{"permalink":"/blog/tags/ssh","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/chocolatey":{"name":"chocolatey","items":["/2019/chocolatey"],"permalink":"/blog/tags/chocolatey","pages":[{"items":["/2019/chocolatey"],"metadata":{"permalink":"/blog/tags/chocolatey","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/flutter":{"name":"flutter","items":["/2019/flutter"],"permalink":"/blog/tags/flutter","pages":[{"items":["/2019/flutter"],"metadata":{"permalink":"/blog/tags/flutter","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/cocos-creator":{"name":"CocosCreator","items":["/2019/cocos"],"permalink":"/blog/tags/cocos-creator","pages":[{"items":["/2019/cocos"],"metadata":{"permalink":"/blog/tags/cocos-creator","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/\u79d1\u5b66":{"name":"\u79d1\u5b66","items":["/2019/quantum"],"permalink":"/blog/tags/\u79d1\u5b66","pages":[{"items":["/2019/quantum"],"metadata":{"permalink":"/blog/tags/\u79d1\u5b66","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/github":{"name":"Github","items":["/2019/fullstack"],"permalink":"/blog/tags/github","pages":[{"items":["/2019/fullstack"],"metadata":{"permalink":"/blog/tags/github","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/python":{"name":"python","items":["/2019/flask","/2019/python/inspect","/2019/python/python","/2019/python/eval","/2019/python/object","/2019/python/fundamentals"],"permalink":"/blog/tags/python","pages":[{"items":["/2019/flask","/2019/python/inspect","/2019/python/python","/2019/python/eval","/2019/python/object"],"metadata":{"permalink":"/blog/tags/python","page":1,"postsPerPage":5,"totalPages":2,"totalCount":6,"nextPage":"/blog/tags/python/page/2","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/python/fundamentals"],"metadata":{"permalink":"/blog/tags/python/page/2","page":2,"postsPerPage":5,"totalPages":2,"totalCount":6,"previousPage":"/blog/tags/python","blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/\u9605\u8bfb\u7b14\u8bb0":{"name":"\u9605\u8bfb\u7b14\u8bb0","items":["/2019/astronomy"],"permalink":"/blog/tags/\u9605\u8bfb\u7b14\u8bb0","pages":[{"items":["/2019/astronomy"],"metadata":{"permalink":"/blog/tags/\u9605\u8bfb\u7b14\u8bb0","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/\u5929\u6587":{"name":"\u5929\u6587","items":["/2019/astronomy"],"permalink":"/blog/tags/\u5929\u6587","pages":[{"items":["/2019/astronomy"],"metadata":{"permalink":"/blog/tags/\u5929\u6587","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/\u89c4\u5212":{"name":"\u89c4\u5212","items":["/2019/voyager"],"permalink":"/blog/tags/\u89c4\u5212","pages":[{"items":["/2019/voyager"],"metadata":{"permalink":"/blog/tags/\u89c4\u5212","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/\u540e\u53f0":{"name":"\u540e\u53f0","items":["/2019/voyager"],"permalink":"/blog/tags/\u540e\u53f0","pages":[{"items":["/2019/voyager"],"metadata":{"permalink":"/blog/tags/\u540e\u53f0","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/\u56de\u5fc6":{"name":"\u56de\u5fc6","items":["/2019/poetry"],"permalink":"/blog/tags/\u56de\u5fc6","pages":[{"items":["/2019/poetry"],"metadata":{"permalink":"/blog/tags/\u56de\u5fc6","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/jekyll":{"name":"jekyll","items":["/2019/jekyll"],"permalink":"/blog/tags/jekyll","pages":[{"items":["/2019/jekyll"],"metadata":{"permalink":"/blog/tags/jekyll","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/whiteglass":{"name":"whiteglass","items":["/2019/jekyll"],"permalink":"/blog/tags/whiteglass","pages":[{"items":["/2019/jekyll"],"metadata":{"permalink":"/blog/tags/whiteglass","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/disqus":{"name":"Disqus","items":["/2019/jekyll"],"permalink":"/blog/tags/disqus","pages":[{"items":["/2019/jekyll"],"metadata":{"permalink":"/blog/tags/disqus","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]},"/blog/tags/travis":{"name":"Travis","items":["/2019/jekyll"],"permalink":"/blog/tags/travis","pages":[{"items":["/2019/jekyll"],"metadata":{"permalink":"/blog/tags/travis","page":1,"postsPerPage":5,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}]}},"blogTagsListPath":"/blog/tags"}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/","source":"@site/src/pages/index.tsx"},{"type":"mdx","permalink":"/tests","source":"@site/src/pages/tests.md","title":"Tests","description":"Docusaurus use some extra plugin instances for testing / dogfooding purpose:","frontMatter":{}},{"type":"jsx","permalink":"/versions","source":"@site/src/pages/versions.tsx"},{"type":"mdx","permalink":"/examples/markdownPageExample","source":"@site/src/pages/examples/markdownPageExample.md","title":"Markdown Page example","description":"Markdown Page example","frontMatter":{"title":"Markdown Page example","description":"Markdown Page example","wrapperClassName":"docusaurus-markdown-example"}}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-google-gtag":{},"docusaurus-plugin-sitemap":{},"docusaurus-theme-classic":{},"docusaurus-theme-search-algolia":{},"changelog-plugin":{"default":{"blogSidebarTitle":"Changelog","blogPosts":[{"id":"/Unity 2022.1","metadata":{"permalink":"/changelog/Unity 2022.1","source":"@site/changelog/source/Unity 2022.1.md","title":"Unity 2022.1","description":"\u811a\u672c\u751f\u6210","date":"2022-03-29T20:00:00.000Z","formattedDate":"2022\u5e743\u670829\u65e5","tags":[],"truncated":true,"authors":[],"frontMatter":{"date":"2022-03-29T20:00"},"nextItem":{"title":"Lua 5.3","permalink":"/changelog/Lua 5.3"},"listPageLink":"/changelog/"},"content":"\x3c!-- truncate --\x3e\\n\\n### :rocket: \u811a\u672c\u751f\u6210"},{"id":"/Lua 5.3","metadata":{"permalink":"/changelog/Lua 5.3","source":"@site/changelog/source/Lua 5.3.md","title":"Lua 5.3","description":"\u811a\u672c\u751f\u6210","date":"2022-03-28T20:00:00.000Z","formattedDate":"2022\u5e743\u670828\u65e5","tags":[],"truncated":true,"authors":[],"frontMatter":{"date":"2022-03-28T20:00"},"prevItem":{"title":"Unity 2022.1","permalink":"/changelog/Unity 2022.1"},"listPageLink":"/changelog/"},"content":"\x3c!-- truncate --\x3e\\n\\n### :nail_care: \u811a\u672c\u751f\u6210"}],"blogListPaginated":[{"items":["/Unity 2022.1","/Lua 5.3"],"metadata":{"permalink":"/changelog","page":1,"postsPerPage":20,"totalPages":1,"totalCount":2,"blogDescription":"Keep yourself up-to-date about new features in every release","blogTitle":"\u65e5\u5fd7"}}],"blogTags":{},"blogTagsListPath":null}},"docusaurus-plugin-client-redirects":{},"docusaurus-plugin-ideal-image":{},"docusaurus-plugin-pwa":{},"feature-requests-plugin":{},"docusaurus-theme-live-codeblock":{}}')}}]);