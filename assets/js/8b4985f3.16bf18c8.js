"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2274],{35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),s=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(a.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,u=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=i,b=p["".concat(a,".").concat(d)]||p[d]||m[d]||u;return n?r.createElement(b,o(o({ref:t},c),{},{components:n})):r.createElement(b,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var u=n.length,o=new Array(u);o[0]=p;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<u;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},15637:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return o},metadata:function(){return a},toc:function(){return c}});n(27378);var r=n(35318);function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const o={id:"Using custom (C#) elements",slug:"/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-custom-elements"},l="Using custom (C#) elements",a={unversionedId:"unity/uitoolkits/uielements/uibuilder/uib-structuring-ui/Using custom (C#) elements",id:"version-Unity@2022.1/unity/uitoolkits/uielements/uibuilder/uib-structuring-ui/Using custom (C#) elements",title:"Using custom (C#) elements",description:") elements",source:"@site/versioned_docs/version-Unity@2022.1/unity/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-custom-elements.md",sourceDirName:"unity/uitoolkits/uielements/uibuilder/uib-structuring-ui",slug:"/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-custom-elements",permalink:"/docs/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-custom-elements",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"2022/3/31",frontMatter:{id:"Using custom (C#) elements",slug:"/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-custom-elements"},sidebar:"unity",previous:{title:"Structuring UXML attributes",permalink:"/docs/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-attributes"},next:{title:"Working with elements",permalink:"/docs/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-elements"}},s={},c=[],m={toc:c};function p(e){var{components:t}=e,n=u(e,["components"]);return(0,r.kt)("wrapper",i({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",i({},{id:"using-custom-c-elements"}),"Using custom (C#) elements"),(0,r.kt)("p",null,"Custom C# elements are a way to embed complex UI-related functionality directly in the UI code. For example, take the ",(0,r.kt)("inlineCode",{parentName:"p"},"IntegerField")," control. This is a single custom C# element that appears and behaves like a single element in both UXML and in UI Builder, but internally it creates a hierarchy of elements that manages user input, data validation, and data bindings."),(0,r.kt)("p",null,"You can create a new custom C# element in C# by inheriting from the ",(0,r.kt)("inlineCode",{parentName:"p"},"VisualElement")," class. This will allow you to create and use this element in C# but won\u2019t automatically expose it in UXML and UI Builder. To expose your new element type in UXML and UI Builder, you need to define the ",(0,r.kt)("inlineCode",{parentName:"p"},"UxmlFactory"),", like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{}),"class MyElement : VisualElement\n{\n    public new class UxmlFactory : UxmlFactory&lt;MyElement, UxmlTraits&gt; { }\n}\n")),(0,r.kt)("p",null,"After you add the ",(0,r.kt)("inlineCode",{parentName:"p"},"UxmlFactory")," to your class, you will be able to create your element in UXML via the ",(0,r.kt)("inlineCode",{parentName:"p"},"&lt;MyElement&gt;")," tag and find it in the UI Builder\u2019s  ",(0,r.kt)("strong",{parentName:"p"},"Library")," , under the  ",(0,r.kt)("strong",{parentName:"p"},"Project"),"  tab, in the  ",(0,r.kt)("strong",{parentName:"p"},"Custom Controls (C#)"),"  section. Further categorization will be created if your class is in a namespace."),(0,r.kt)("p",null,"You can expose additional custom UXML attributes like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{}),'class MyElement : VisualElement\n{\n    public new class UxmlFactory : UxmlFactory&lt;MyElement, UxmlTraits&gt; { }\n\n    public new class UxmlTraits : VisualElement.UxmlTraits\n    {\n        UxmlStringAttributeDescription m_String =\n            new UxmlStringAttributeDescription { name = "string-attr", defaultValue = "default_value" };\n        UxmlIntAttributeDescription m_Int =\n            new UxmlIntAttributeDescription { name = "int-attr", defaultValue = 2 };\n\n        public override IEnumerable&lt;UxmlChildElementDescription&gt; uxmlChildElementsDescription\n        {\n            get { yield break; }\n        }\n\n        public override void Init(VisualElement ve, IUxmlAttributes bag, CreationContext cc)\n        {\n            base.Init(ve, bag, cc);\n            var ate = ve as MyElement;\n\n            ate.stringAttr = m_String.GetValueFromBag(bag, cc);\n            ate.intAttr = m_Int.GetValueFromBag(bag, cc);\n        }\n    }\n\n    public string stringAttr { get; set; }\n    public int intAttr { get; set; }\n}\n')),(0,r.kt)("p",null,"UI Builder adds one additional requirement on top of what\u2019s already required for pure UXML attributes to work. UI Builder requires your element class to expose a ",(0,r.kt)("inlineCode",{parentName:"p"},"{ get; set; }")," C# property that has the same name as the name you set in your ",(0,r.kt)("inlineCode",{parentName:"p"},"Uxml*AttributeDescription"),", except instead of dashes, the C# property name needs to be using ",(0,r.kt)("inlineCode",{parentName:"p"},"camelCasing"),". For example, if your UXML attribute is named ",(0,r.kt)("inlineCode",{parentName:"p"},"my-int"),", the C# property name should be ",(0,r.kt)("inlineCode",{parentName:"p"},"myInt"),". This is because the UI Builder relies on these C# properties to read the value of the C# attributes to populate its  ",(0,r.kt)("strong",{parentName:"p"},"Inspector"),"  pane."),(0,r.kt)("p",null,"Here are the above custom attributes displayed in the  ",(0,r.kt)("strong",{parentName:"p"},"Inspector"),"  pane:"),(0,r.kt)("p",null,(0,r.kt)("img",i({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/UIBuilder/CustomElementAttributes.png",alt:"CustomElementAttributes"}))),(0,r.kt)("p",null,"CustomElementAttributes"),(0,r.kt)("p",null,"UI Builder currently doesn\u2019t support custom Inspectors for custom C# elements."))}p.isMDXComponent=!0}}]);