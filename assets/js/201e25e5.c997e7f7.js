"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25576],{35318:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),h=c(n),g=i,f=h["".concat(p,".").concat(g)]||h[g]||u[g]||o;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},78304:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return s}});n(27378);var r=n(35318);function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const a={id:"\u5149\u7167\u63a2\u9488\uff1a\u6280\u672f\u4fe1\u606f",slug:"/graphics/lighting-overview/light-probes/light-probes-technical-information"},l="\u5149\u7167\u63a2\u9488\uff1a\u6280\u672f\u4fe1\u606f",p={unversionedId:"unity/graphics/lighting-overview/light-probes/\u5149\u7167\u63a2\u9488\uff1a\u6280\u672f\u4fe1\u606f",id:"version-Unity@2022.1/unity/graphics/lighting-overview/light-probes/\u5149\u7167\u63a2\u9488\uff1a\u6280\u672f\u4fe1\u606f",title:"\u5149\u7167\u63a2\u9488\uff1a\u6280\u672f\u4fe1\u606f",description:"The lighting information in the light probes are encoded as Spherical Harmonics basis functions. We use third order polynomials, also known as L2 Spherical Harmonics. These are stored using 27 floating point values, 9 for each color channel.",source:"@site/versioned_docs/version-Unity@2022.1/unity/graphics/lighting-overview/light-probes/light-probes-technical-information.md",sourceDirName:"unity/graphics/lighting-overview/light-probes",slug:"/graphics/lighting-overview/light-probes/light-probes-technical-information",permalink:"/docs/graphics/lighting-overview/light-probes/light-probes-technical-information",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"2022/3/31",frontMatter:{id:"\u5149\u7167\u63a2\u9488\uff1a\u6280\u672f\u4fe1\u606f",slug:"/graphics/lighting-overview/light-probes/light-probes-technical-information"},sidebar:"unity",previous:{title:"\u4f7f\u7528\u811a\u672c\u653e\u7f6e\u5149\u7167\u63a2\u9488",permalink:"/docs/graphics/lighting-overview/light-probes/light-probes-placing-scripting"},next:{title:"Light Explorer \u7a97\u53e3",permalink:"/docs/graphics/lighting-overview/lighting-explorer/lighting-explorer"}},c={},s=[],u={toc:s};function h(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)("wrapper",i({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",i({},{id:"\u5149\u7167\u63a2\u9488\u6280\u672f\u4fe1\u606f"}),"\u5149\u7167\u63a2\u9488\uff1a\u6280\u672f\u4fe1\u606f"),(0,r.kt)("p",null,"The lighting information in the light probes are encoded as Spherical Harmonics basis functions. We use third order polynomials, also known as L2 Spherical Harmonics. These are stored using 27 floating point values, 9 for each color channel."),(0,r.kt)("p",null,"The Enlighten Global Illumination implementation in Unity uses a different spherical harmonics approach than Geomerics, the feature\u2019s original developer, namely the notation and reconstruction method from Peter-Pike Sloan\u2019s paper, ",(0,r.kt)("a",i({parentName:"p"},{href:"http://www.ppsloan.org/publications/StupidSH36.pdf"}),"Stupid Spherical Harmonics (SH) Tricks"),". Geomerics\u2019 original approach was based on the notation and reconstruction method from Ramamoorthi/Hanrahan\u2019s paper, ",(0,r.kt)("a",i({parentName:"p"},{href:"http://cseweb.ucsd.edu/~ravir/papers/envmap/envmap.pdf"}),"An Ef\ufb01cient Representation for Irradiance Environment Maps"),"."),(0,r.kt)("p",null,"The shader code for reconstruction is found in UnityCG.cginc and is using the method from Appendix A10 Shader/CPU code for Irradiance Environment Maps from Peter-Pikes paper."),(0,r.kt)("p",null,"\u6570\u636e\u5728\u5185\u90e8\u7684\u6392\u5217\u987a\u5e8f\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{}),"                        [L00:  DC]\n\n                            [L1-1:  y] [L10:   z] [L11:   x]\n\n                          [L2-2: xy] [L2-1: yz] [L20:  zz] [L21:  xz]  [L22:  xx - yy]\n")),(0,r.kt)("p",null,"R\u3001G \u548c B \u7684 9 \u4e2a\u7cfb\u6570\u7684\u6392\u5217\u987a\u5e8f\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{}),"L00, L1-1,  L10,  L11, L2-2, L2-1,  L20,  L21,  L22, // \u7ea2\u8272\u901a\u9053\n\nL00, L1-1,  L10,  L11, L2-2, L2-1,  L20,  L21,  L22, // \u84dd\u8272\u901a\u9053\n\nL00, L1-1,  L10,  L11, L2-2, L2-1,  L20,  L21,  L22  // \u7eff\u8272\u901a\u9053\n")),(0,r.kt)("p",null,"\u6709\u5173 Unity \u5149\u7167\u63a2\u9488\u7cfb\u7edf\u7684\u66f4\u591a\u80cc\u666f\u4fe1\u606f\uff0c\u53ef\u9605\u8bfb Robert Cupisz \u5728 2012 \u5e74\u6e38\u620f\u5f00\u53d1\u8005\u5927\u4f1a (GDC 2012) \u4e0a\u7684\u6f14\u8bb2\u62a5\u544a",(0,r.kt)("a",i({parentName:"p"},{href:"http://gdcvault.com/play/1015312/Light-Probe-Interpolation-Using-Tetrahedral"}),"\u201c\u4f7f\u7528\u56db\u9762\u4f53\u66f2\u9762\u7ec6\u5206\u7684\u5149\u7167\u63a2\u9488\u63d2\u503c (Light Probe Interpolation Using Tetrahedral Tessellations)\u201d- GDC 2012")),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"2017\u201306\u201308 \u9875\u9762\u5df2\u53d1\u5e03"),(0,r.kt)("li",{parentName:"ul"},"\u5728 5.6 \u7248\u66f4\u65b0\u4e86\u5149\u7167\u63a2\u9488")))}h.isMDXComponent=!0}}]);