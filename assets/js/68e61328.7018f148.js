"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[91979],{35318:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||l;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<l;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},79994:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return d}});n(27378);var r=n(35318);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const a={id:"Creating a custom module details panel",slug:"/unity-overview/analysis/profiler/profiler-customizing/profiler-customizing-details-view"},i="Creating a custom module details panel",s={unversionedId:"unity/unity-overview/analysis/profiler/profiler-customizing/Creating a custom module details panel",id:"version-Unity@2022.1/unity/unity-overview/analysis/profiler/profiler-customizing/Creating a custom module details panel",title:"Creating a custom module details panel",description:"The module details panel appears in the bottom of the Profiler window when you select a module. You can customize this section to show additional details relevant to your module or to display a custom visualization of your performance data.",source:"@site/versioned_docs/version-Unity@2022.1/unity/unity-overview/analysis/profiler/profiler-customizing/profiler-customizing-details-view.md",sourceDirName:"unity/unity-overview/analysis/profiler/profiler-customizing",slug:"/unity-overview/analysis/profiler/profiler-customizing/profiler-customizing-details-view",permalink:"/docs/unity-overview/analysis/profiler/profiler-customizing/profiler-customizing-details-view",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"2022/3/31",frontMatter:{id:"Creating a custom module details panel",slug:"/unity-overview/analysis/profiler/profiler-customizing/profiler-customizing-details-view"},sidebar:"unity",previous:{title:"Profiler Module Editor\uff08\u6027\u80fd\u5206\u6790\u5668\u6a21\u5757\u7f16\u8f91\u5668\uff09",permalink:"/docs/unity-overview/analysis/profiler/profiler-customizing/profiler-creating-custom-modules/profiler-module-editor"},next:{title:"\u5e38\u89c1\u6027\u80fd\u5206\u6790\u5668\u6807\u8bb0",permalink:"/docs/unity-overview/analysis/profiler/profiler-markers"}},u={},d=[{value:"Creating a script to control the module details panel",id:"creating-a-script-to-control-the-module-details-panel",level:3},{value:"Module details panel controller script example",id:"module-details-panel-controller-script-example",level:4},{value:"Creating custom UI elements in the module details panel",id:"creating-custom-ui-elements-in-the-module-details-panel",level:4},{value:"Connect a custom module details panel to a Profiler module",id:"connect-a-custom-module-details-panel-to-a-profiler-module",level:3},{value:"Visualizing additional counters in the module details panel",id:"visualizing-additional-counters-in-the-module-details-panel",level:2}],c={toc:d};function p(e){var{components:t}=e,n=l(e,["components"]);return(0,r.kt)("wrapper",o({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",o({},{id:"creating-a-custom-module-details-panel"}),"Creating a custom module details panel"),(0,r.kt)("p",null,"The module details panel appears in the bottom of the Profiler window when you select a module. You can customize this section to show additional details relevant to your module or to display a custom visualization of your performance data."),(0,r.kt)("p",null,"To create a custom Module details panel for your Profiler module:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",o({parentName:"li"},{href:"#creating-a-script-to-control-the-module-details-panel"}),"Create a module details panel Controller script")," to draw a custom module details panel."),(0,r.kt)("li",{parentName:"ul"},"Create a Profiler module script to ",(0,r.kt)("a",o({parentName:"li"},{href:"#connect-a-custom-module-details-panel-to-a-profiler-module"}),"connect your custom module details panel controller to your custom profiler module")," .")),(0,r.kt)("h3",o({},{id:"creating-a-script-to-control-the-module-details-panel"}),"Creating a script to control the module details panel"),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("a",o({parentName:"p"},{href:"https://docs.unity3d.com/2021.2/Documentation/ScriptReference/Unity.Profiling.Editor.ProfilerModuleViewController.html"}),"ProfilerModuleViewController")," base class to customize the module details panel in the profiler window. To do this, create a script that controls what appears in the module details panel when you select a specific module."),(0,r.kt)("p",null,"The script you create to customize the module details panel must:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Define a public constructor for the view controller that calls the base constructor ",(0,r.kt)("inlineCode",{parentName:"li"},"base(profilerWindow)"),"."),(0,r.kt)("li",{parentName:"ul"},"Override ",(0,r.kt)("inlineCode",{parentName:"li"},"CreateView")," to build the custom module details panel.")),(0,r.kt)("p",null,"\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{}),"\n public class CustomDetailsViewController : ProfilerModuleViewController\n {   \n    public CustomDetailsViewController(ProfilerWindow profilerWindow) : base(profilerWindow) { }\n\n    protected override VisualElement CreateView()\n    {\n        // Create your UI.\n    }\n}\n")),(0,r.kt)("p",null,"For an example of a full module details panel controller script, see ",(0,r.kt)("a",o({parentName:"p"},{href:"#module-details-panel-controller-script-example"}),"module details panel controller script example"),"."),(0,r.kt)("h4",o({},{id:"module-details-panel-controller-script-example"}),"Module details panel controller script example"),(0,r.kt)("p",null,"The below example script creates a module details panel controller that draws a single label in the module details panel that displays text:"),(0,r.kt)("p",null,(0,r.kt)("img",o({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/Profiler_tank_details_basic.png",alt:"Profiler_tank_details_basic.png"}))),(0,r.kt)("p",null,"This module details panel controller script example does the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Defines and creates a label to display the value you want to capture, and adds this label to the module details panel."),(0,r.kt)("li",{parentName:"ul"},"Defines a constructor to control the module details panel and uses CreateView to build the custom module details panel."),(0,r.kt)("li",{parentName:"ul"},"Populates the label with data from the current frame, and updates the label after each frame."),(0,r.kt)("li",{parentName:"ul"},"Fetches a counter value as a string that you can display in the module details panel."),(0,r.kt)("li",{parentName:"ul"},"Specifies the text to display in the module details panel, and tells the Profiler to automatically update it each frame.")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{}),"\n using UnityEditor;\n using UnityEditorInternal;\n using Unity.Profiling.Editor;\n using UnityEngine.UIElements;\n \n public class TankEffectsDetailsViewController : ProfilerModuleViewController\n {\n    // Define a label, which will display the total particle count for tank trails in the selected frame.\n    Label m_TankTrailParticleCountLabel;\n\n\n    // Define a constructor for the view controller, which calls the base constructor with the Profiler Window passed from the module.\n    public TankEffectsDetailsViewController(ProfilerWindow profilerWindow) : base(profilerWindow) { }\n \n    // Override CreateView to build the custom module details panel.6666666667reateView()\n    {\n        var view = new VisualElement();\n\n        // Create the label and add it to the view.\n        m_TankTrailParticleCountLabel = new Label() { style = { paddingTop = 8, paddingLeft = 8 } };\n        view.Add(m_TankTrailParticleCountLabel);\n\n        // Populate the label with the current data for the selected frame. \n        ReloadData();\n\n        // Be notified when the selected frame index in the Profiler Window changes, so we can update the label.\n        ProfilerWindow.SelectedFrameIndexChanged += OnSelectedFrameIndexChanged;\n\n        return view;\n    }\n\n    // Override Dispose to do any cleanup of the view when it is destroyed. This is a standard C# Dispose pattern.\n    protected override void Dispose(bool disposing)\n    {\n        if (!disposing)\n            return;\n\n        // Unsubscribe from the Profiler window event that we previously subscribed to.\n        ProfilerWindow.SelectedFrameIndexChanged -= OnSelectedFrameIndexChanged;\n\n        base.Dispose(disposing);\n    }\n\n    void ReloadData()\n    {\n        // Retrieve the TankTrailParticleCount counter value from the Profiler as a formatted string.\n        var selectedFrameIndexInt32 = System.Convert.ToInt32(ProfilerWindow.selectedFrameIndex);\n        var value = ProfilerDriver.GetFormattedCounterValue(selectedFrameIndexInt32, GameStatistics.TanksCategory.Name, GameStatistics.TankTrailParticleCountName);\n\n        // Update the label's text with the value.\n        m_TankTrailParticleCountLabel.text = $\"The value of '{GameStatistics.TankTrailParticleCountName}' in the selected frame is {value}.\";\n    }\n\n    void OnSelectedFrameIndexChanged(long selectedFrameIndex)\n    {\n        // Update the label with the current data for the newly selected frame.\n        ReloadData();\n    }\n}\n")),(0,r.kt)("h4",o({},{id:"creating-custom-ui-elements-in-the-module-details-panel"}),"Creating custom UI elements in the module details panel"),(0,r.kt)("p",null,"You can use Unity\u2019s UIToolkit to build custom UI for the module details panel. For more information, see ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/uitoolkits/uielements/uielements"}),"UI Toolkit"),"."),(0,r.kt)("p",null,"The following example image shows a custom module details panel that belongs to a custom ",(0,r.kt)("a",o({parentName:"p"},{href:"https://docs.unity3d.com/Packages/com.unity.adaptiveperformance@latest?subfolder=/manual/index.html"}),"Adaptive Performance")," module:"),(0,r.kt)("p",null,(0,r.kt)("img",o({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/Adaptive_performance_Profiler.png",alt:"Adaptive_performance_Profiler.png"}))),(0,r.kt)("h3",o({},{id:"connect-a-custom-module-details-panel-to-a-profiler-module"}),"Connect a custom module details panel to a Profiler module"),(0,r.kt)("p",null,"To display a custom module details panel, you need to instantiate your module details panel controller when you select your Profiler module. To do this, override ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateDetailsViewController")," to create and draw a new module details panel controller. Unity then invokes this method when it displays your module\u2019s details panel."),(0,r.kt)("p",null,"The following code example instantiates a custom module details panel for a module called ",(0,r.kt)("inlineCode",{parentName:"p"},"TankEffectsProfilerModule"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{}),'\n using Unity.Profiling.Editor;\n\n [System.Serializable]\n [ProfilerModuleMetadata("Tank Effects")]\n public class TankEffectsProfilerModule : ProfilerModule\n {\n    static readonly ProfilerCounterDescriptor[] k_Counters = new ProfilerCounterDescriptor[]\n    {\n        new ProfilerCounterDescriptor(GameStatistics.TankTrailParticleCountName, GameStatistics.TanksCategory),\n        new ProfilerCounterDescriptor(GameStatistics.ShellExplosionParticleCountName, GameStatistics.TanksCategory),\n        new ProfilerCounterDescriptor(GameStatistics.TankExplosionParticleCountName, GameStatistics.TanksCategory),\n    };\n\n    public TankEffectsProfilerModule() : base(k_Counters) { }\n\n    public override ProfilerModuleViewController CreateDetailsViewController()\n    {\n        return new TankEffectsDetailsViewController(ProfilerWindow);\n    }\n}\n')),(0,r.kt)("h2",o({},{id:"visualizing-additional-counters-in-the-module-details-panel"}),"Visualizing additional counters in the module details panel"),(0,r.kt)("p",null,"You can display counters in the module details panel that are not included in your module\u2019s chart view. This is useful when you want to show additional data for a frame you select."),(0,r.kt)("p",null,"The Profiler automatically captures the categories of all counters that belong to a module\u2019s chart view when that module is active. To capture additional counters, write a script to tell the Profiler to capture specific categories when your module is active."),(0,r.kt)("p",null,"For example, the script below uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"autoEnabledCategoryNames")," constructor argument to specify the Scripts and Memory categories. This enables these categories when the module is active:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{}),' \n using Unity.Profiling;\n using Unity.Profiling.Editor;\n\n [System.Serializable]\n [ProfilerModuleMetadata("Tank Effects")]\n public class TankEffectsProfilerModule : ProfilerModule\n {\n    static readonly ProfilerCounterDescriptor[] k_Counters = new ProfilerCounterDescriptor[]\n    {\n        new ProfilerCounterDescriptor(GameStatistics.TankTrailParticleCountName, ProfilerCategory.Scripts),\n        new ProfilerCounterDescriptor(GameStatistics.ShellExplosionParticleCountName, ProfilerCategory.Scripts),\n        new ProfilerCounterDescriptor(GameStatistics.TankExplosionParticleCountName, ProfilerCategory.Scripts),\n    };\n\n    // Enable the ProfilerCategory.Scripts and ProfilerCategory.Memory categories when the module is active.\n    static readonly string[] k_AutoEnabledCategoryNames = new string[]\n    {\n        ProfilerCategory.Scripts.Name,\n        ProfilerCategory.Memory.Name\n    };\n\n    // Pass the auto-enabled category names to the base constructor.\n    public TankEffectsProfilerModule() : base(k_Counters, autoEnabledCategoryNames: k_AutoEnabledCategoryNames) { }\n')))}p.isMDXComponent=!0}}]);