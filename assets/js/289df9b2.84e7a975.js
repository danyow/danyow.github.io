"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25982],{35318:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return s}});var i=r(27378);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function t(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,i)}return r}function d(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?t(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,i,o=function(e,n){if(null==e)return{};var r,i,o={},t=Object.keys(e);for(i=0;i<t.length;i++)r=t[i],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(i=0;i<t.length;i++)r=t[i],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=i.createContext({}),g=function(e){var n=i.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):d(d({},n),e)),r},c=function(e){var n=g(e.components);return i.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},l=i.forwardRef((function(e,n){var r=e.components,o=e.mdxType,t=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),l=g(r),s=o,f=l["".concat(u,".").concat(s)]||l[s]||p[s]||t;return r?i.createElement(f,d(d({ref:n},c),{},{components:r})):i.createElement(f,d({ref:n},c))}));function s(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var t=r.length,d=new Array(t);d[0]=l;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,d[1]=a;for(var g=2;g<t;g++)d[g]=r[g];return i.createElement.apply(null,d)}return i.createElement.apply(null,r)}l.displayName="MDXCreateElement"},40174:function(e,n,r){r.r(n),r.d(n,{assets:function(){return g},contentTitle:function(){return a},default:function(){return l},frontMatter:function(){return d},metadata:function(){return u},toc:function(){return c}});r(27378);var i=r(35318);function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e},o.apply(this,arguments)}function t(e,n){if(null==e)return{};var r,i,o=function(e,n){if(null==e)return{};var r,i,o={},t=Object.keys(e);for(i=0;i<t.length;i++)r=t[i],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(i=0;i<t.length;i++)r=t[i],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const d={id:"Debugging on an Android device",slug:"/platform-specific/android/android-developing/android-testing-and-debugging/android-debugging-on-an-android-device"},a="Debugging on an Android device",u={unversionedId:"unity/platform-specific/android/android-developing/android-testing-and-debugging/Debugging on an Android device",id:"version-Unity@2022.1/unity/platform-specific/android/android-developing/android-testing-and-debugging/Debugging on an Android device",title:"Debugging on an Android device",description:"Unity supports the following ways to debug an application on an Android device:",source:"@site/versioned_docs/version-Unity@2022.1/unity/platform-specific/android/android-developing/android-testing-and-debugging/android-debugging-on-an-android-device.md",sourceDirName:"unity/platform-specific/android/android-developing/android-testing-and-debugging",slug:"/platform-specific/android/android-developing/android-testing-and-debugging/android-debugging-on-an-android-device",permalink:"/docs/platform-specific/android/android-developing/android-testing-and-debugging/android-debugging-on-an-android-device",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"2022/3/31",frontMatter:{id:"Debugging on an Android device",slug:"/platform-specific/android/android-developing/android-testing-and-debugging/android-debugging-on-an-android-device"},sidebar:"unity",previous:{title:"Application patching",permalink:"/docs/platform-specific/android/android-developing/android-testing-and-debugging/android-app-patching"},next:{title:"Android symbols",permalink:"/docs/platform-specific/android/android-developing/android-testing-and-debugging/android-symbols"}},g={},c=[{value:"USB debugging",id:"usb-debugging",level:2},{value:"Android Debug Bridge",id:"android-debug-bridge",level:2}],p={toc:c};function l(e){var{components:n}=e,r=t(e,["components"]);return(0,i.kt)("wrapper",o({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",o({},{id:"debugging-on-an-android-device"}),"Debugging on an Android device"),(0,i.kt)("p",null,"Unity supports the following ways to debug an application on an Android device:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",o({parentName:"li"},{href:"#usb-debugging"}),"USB debugging"),"."),(0,i.kt)("li",{parentName:"ul"},"Both wired and wireless connection through ",(0,i.kt)("a",o({parentName:"li"},{href:"#android-debug-bridge"}),"Android Debug Bridge"),".")),(0,i.kt)("h2",o({},{id:"usb-debugging"}),"USB debugging"),(0,i.kt)("p",null,"Unity supports USB debugging for Android devices. To use USB debugging, enable developer options on your device. To do this, see Android\u2019s ",(0,i.kt)("a",o({parentName:"p"},{href:"https://developer.android.com/studio/debug/dev-options"}),"Configure developer options")," documentation."),(0,i.kt)("p",null,"Use a USB cable to connect the device to your computer. If you are developing on a Windows computer, you might need to install a device-specific USB driver. See the manufacturer\u2019s website for your device for additional information."),(0,i.kt)("p",null,"The setup process differs for Windows and macOS. For more information on connecting your Android device to the SDK, see the ",(0,i.kt)("a",o({parentName:"p"},{href:"https://developer.android.com/training/basics/firstapp/running-app.html#Emulator"}),"Run Your App")," section of the Android Developer documentation."),(0,i.kt)("p",null," ",(0,i.kt)("strong",{parentName:"p"},"Note")," : Unity doesn\u2019t support USB debugging for Chrome OS devices. Instead, use ",(0,i.kt)("a",o({parentName:"p"},{href:"#android-debug-bridge"}),"Android Debug Bridge")," over wireless connection."),(0,i.kt)("h2",o({},{id:"android-debug-bridge"}),"Android Debug Bridge"),(0,i.kt)("p",null,"Unity supports Android Debug Bridge (ADB) over USB for Android devices and over wireless connection for Android and Chrome OS devices. Wireless connection is useful when you can\u2019t perform USB debugging, such as when using a Chrome OS device, when a controller is plugged into the Android device, or when debugging VR applications and you insert the Android device into the VR Kit."),(0,i.kt)("p",null,"To set up ADB:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For Android, see ",(0,i.kt)("a",o({parentName:"li"},{href:"https://developer.android.com/studio/command-line/adb.html"}),"Android Debug Bridge"),"."),(0,i.kt)("li",{parentName:"ul"},"For Chrome OS, see ",(0,i.kt)("a",o({parentName:"li"},{href:"/docs/platform-specific/android/android-chrome-os-introducing/android-chrome-os-developing/android-chrome-os-debugging"}),"Debugging on a Chrome OS device"),".")))}l.isMDXComponent=!0}}]);