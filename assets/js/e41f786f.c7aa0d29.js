"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[62337],{35318:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(27378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},58468:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});r(27378);var n=r(35318);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},a.apply(this,arguments)}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const o={id:"Game perspectives for 2D games",slug:"/unity2d/quickstart2d/quickstart2dperspective"},s="Game perspectives for 2D games",c={unversionedId:"unity/unity2d/quickstart2d/Game perspectives for 2D games",id:"version-Unity@2022.1/unity/unity2d/quickstart2d/Game perspectives for 2D games",title:"Game perspectives for 2D games",description:"Decide what game perspective or viewpoint you want your game to have. The following table describes the main types of 2D game perspective:",source:"@site/versioned_docs/version-Unity@2022.1/unity/unity2d/quickstart2d/quickstart2dperspective.md",sourceDirName:"unity/unity2d/quickstart2d",slug:"/unity2d/quickstart2d/quickstart2dperspective",permalink:"/docs/unity2d/quickstart2d/quickstart2dperspective",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"2022/3/31",frontMatter:{id:"Game perspectives for 2D games",slug:"/unity2d/quickstart2d/quickstart2dperspective"},sidebar:"unity",previous:{title:"Creating a 2D game",permalink:"/docs/unity2d/quickstart2d/quickstart2dcreate"},next:{title:"Initial setup for 2D games",permalink:"/docs/unity2d/quickstart2d/quickstart2dsetup"}},p={},u=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2}],l={toc:u};function d(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)("wrapper",a({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",a({},{id:"game-perspectives-for-2d-games"}),"Game perspectives for 2D games"),(0,n.kt)("p",null,"Decide what game perspective or viewpoint you want your game to have. The following table describes the main types of 2D game perspective:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",a({parentName:"tr"},{align:null}),(0,n.kt)("strong",{parentName:"th"},"Game perspective")),(0,n.kt)("th",a({parentName:"tr"},{align:null}),(0,n.kt)("strong",{parentName:"th"},"\u63cf\u8ff0")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",a({parentName:"tr"},{align:null}),"Top-down"),(0,n.kt)("td",a({parentName:"tr"},{align:null}),"A 2D game that provides an overhead or bird\u2019s-eye view of the action.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",a({parentName:"tr"},{align:null}),"Side-on"),(0,n.kt)("td",a({parentName:"tr"},{align:null}),"A 2D game where the character moves left or right (or up and down) and the screen scrolls with them. The perspective is from the side.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",a({parentName:"tr"},{align:null}),"Isometric and 2.5D (three-quarter view)"),(0,n.kt)("td",a({parentName:"tr"},{align:null}),"2D games with isometric view simulate 3D geometry and a depth axis, but use an orthographic Camera instead of a perspective Camera. This gives the player a bird\u2019s-eye view of the action. For information on orthographic and perspective Cameras, see ",(0,n.kt)("a",a({parentName:"td"},{href:"/docs/graphics/cameras-overview/cameras-overview"}),"Cameras"),".",(0,n.kt)("br",null),"2.5D (also known as three-quarter view) games are 2D games that use 3D geometry for the environment and characters, but restrict the gameplay to two dimensions. The 3D effect has a visual rather than functional purpose.")))),(0,n.kt)("p",null,"Many sections of this guide are relevant for all game perspectives. For top-down and side-on perspectives, the ",(0,n.kt)("a",a({parentName:"p"},{href:"/docs/unity2d/quickstart2d/quickstart2dcreate#tilemap"}),"Tilemap")," and ",(0,n.kt)("a",a({parentName:"p"},{href:"/docs/unity2d/quickstart2d/quickstart2dcreate#9-slicing"}),"9-slicing")," tools are especially useful for designing your levels. For isometric, three-quarter view or 2.5D perspectives, the ",(0,n.kt)("a",a({parentName:"p"},{href:"/docs/unity2d/quickstart2d/quickstart2dcreate#isometric-tilemaps"}),"Isometric Tilemaps")," tool is especially useful."),(0,n.kt)("h2",a({},{id:"\u793a\u4f8b"}),"\u793a\u4f8b"),(0,n.kt)("p",null,(0,n.kt)("img",a({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/quickstart-top-down-2d.png",alt:"A top-down 2D game demo made with Unity"}))),(0,n.kt)("p",null,"A top-down 2D game demo made with Unity"),(0,n.kt)("p",null,(0,n.kt)("img",a({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/quickstart-side-scroller-2d.png",alt:"A 2D side-on game demo made with Unity"}))),(0,n.kt)("p",null,"A 2D side-on game demo made with Unity"),(0,n.kt)("p",null,(0,n.kt)("img",a({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/quickstart-isometric-2d.png",alt:"An isometric 2D game demo made with Unity"}))),(0,n.kt)("p",null,"An isometric 2D game demo made with Unity"))}d.isMDXComponent=!0}}]);