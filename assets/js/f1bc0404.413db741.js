"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[94589],{35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},40961:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return c}});n(27378);var r=n(35318);function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const a={id:"C# \u7f16\u8bd1\u5668",slug:"/scripting-section/unity-architecture/overview-of-dot-net-in-unity/csharp-compiler"},s="C# \u7f16\u8bd1\u5668",l={unversionedId:"unity/scripting-section/unity-architecture/overview-of-dot-net-in-unity/C# \u7f16\u8bd1\u5668",id:"version-Unity@2022.1/unity/scripting-section/unity-architecture/overview-of-dot-net-in-unity/C# \u7f16\u8bd1\u5668",title:"C# \u7f16\u8bd1\u5668",description:"\u7f16\u8bd1\u5668",source:"@site/versioned_docs/version-Unity@2022.1/unity/scripting-section/unity-architecture/overview-of-dot-net-in-unity/csharp-compiler.md",sourceDirName:"unity/scripting-section/unity-architecture/overview-of-dot-net-in-unity",slug:"/scripting-section/unity-architecture/overview-of-dot-net-in-unity/csharp-compiler",permalink:"/docs/scripting-section/unity-architecture/overview-of-dot-net-in-unity/csharp-compiler",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"2022/3/31",frontMatter:{id:"C# \u7f16\u8bd1\u5668",slug:"/scripting-section/unity-architecture/overview-of-dot-net-in-unity/csharp-compiler"},sidebar:"unity",previous:{title:"Unity \u4e2d\u7684 .NET \u6982\u8ff0",permalink:"/docs/scripting-section/unity-architecture/overview-of-dot-net-in-unity/overview-of-dot-net-in-unity"},next:{title:"\u5f15\u7528\u5176\u4ed6\u7c7b\u5e93\u7a0b\u5e8f\u96c6",permalink:"/docs/scripting-section/unity-architecture/overview-of-dot-net-in-unity/dotnet-profile-assemblies"}},u={},c=[{value:"\u4e0d\u53d7\u652f\u6301\u7684\u529f\u80fd",id:"\u4e0d\u53d7\u652f\u6301\u7684\u529f\u80fd",level:2},{value:"C# 9.0",id:"c-90",level:3},{value:"Record support",id:"record-support",level:3},{value:"Unmanaged function pointer support",id:"unmanaged-function-pointer-support",level:3}],p={toc:c};function d(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)("wrapper",i({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",i({},{id:"c-\u7f16\u8bd1\u5668"}),"C# \u7f16\u8bd1\u5668"),(0,r.kt)("p",null,"\u4e3a\u4e86\u5728 Unity \u9879\u76ee\u4e2d\u7f16\u8bd1 C# \u6e90\u4ee3\u7801\uff0cUnity Editor \u4f7f\u7528 C# \u7f16\u8bd1\u5668\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"C# \u7f16\u8bd1\u5668")),(0,r.kt)("th",i({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"C# \u8bed\u8a00\u7248\u672c")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:null}),(0,r.kt)("a",i({parentName:"td"},{href:"https://github.com/dotnet/roslyn"}),"Roslyn")),(0,r.kt)("td",i({parentName:"tr"},{align:null}),(0,r.kt)("a",i({parentName:"td"},{href:"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-9"}),"C# 9.0"))))),(0,r.kt)("p",null,"The Editor passes a default set of options to the C# compiler. To pass additional options in your project, see the documentation on ",(0,r.kt)("a",i({parentName:"p"},{href:"/docs/scripting-section/unity-architecture/script-compilation/platform-dependent-compilation/platform-dependent-compilation"}),"Platform Dependent Compilation"),"."),(0,r.kt)("h2",i({},{id:"\u4e0d\u53d7\u652f\u6301\u7684\u529f\u80fd"}),"\u4e0d\u53d7\u652f\u6301\u7684\u529f\u80fd"),(0,r.kt)("h3",i({},{id:"c-90"}),"C# 9.0"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Suppress emitting localsinit flag"),(0,r.kt)("li",{parentName:"ul"},"Covariant return types"),(0,r.kt)("li",{parentName:"ul"},"Module Initializers"),(0,r.kt)("li",{parentName:"ul"},"Extensible calling conventions for unmanaged function pointers"),(0,r.kt)("li",{parentName:"ul"},"Init only setters")),(0,r.kt)("p",null,"If you try to use unsupported features in your project, compilation generates errors."),(0,r.kt)("h3",i({},{id:"record-support"}),"Record support"),(0,r.kt)("p",null,"C# 9 init and record support comes with a few caveats."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The type ",(0,r.kt)("inlineCode",{parentName:"li"},"System.Runtime.CompilerServices.IsExternalInit")," is required for full record support as it uses init only setters, but is only available in .NET 5 and later (which Unity doesn\u2019t support). Users can work around this issue by declaring the ",(0,r.kt)("inlineCode",{parentName:"li"},"System.Runtime.CompilerServices.IsExternalInit")," type in their own projects."),(0,r.kt)("li",{parentName:"ul"},"You shouldn\u2019t use C# records in serialized types because Unity\u2019s serialization system doesn\u2019t support C# records.")),(0,r.kt)("h3",i({},{id:"unmanaged-function-pointer-support"}),"Unmanaged function pointer support"),(0,r.kt)("p",null,"Unity supports unmanaged functions pointers as introduced in C# 9, but it doesn\u2019t support extensible calling conventions. The following example code provides more detailed information about how to correctly use unmanaged function pointers."),(0,r.kt)("p",null,"The following example targets Windows platforms and requires the  ",(0,r.kt)("strong",{parentName:"p"},"Allow \u2018unsafe\u2019 code"),"  to be enabled in the ",(0,r.kt)("a",i({parentName:"p"},{href:"/docs/unity-overview/editor-features/comp-manager-group/class-player-settings/class-player-settings"}),"Player Settings")," menu. For more information about C#\u2019s ",(0,r.kt)("inlineCode",{parentName:"p"},"unsafe")," context, see ",(0,r.kt)("a",i({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/unsafe"}),"Microsoft\u2019s unsafe (C# Reference) documentation")," or ",(0,r.kt)("a",i({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/unsafe-code"}),"Microsoft\u2019s Unsafe code, pointer types, and function pointers documentation"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{}),'\nusing System;\nusing System.Runtime.InteropServices;\nusing UnityEngine;\n\npublic class UnmanagedFunctionPointers : MonoBehaviour\n{\n  [DllImport("kernel32.dll")]\n  static extern IntPtr LoadLibrary(string lpLibFileName);\n  \n  [DllImport("kernel32.dll")]\n  static extern IntPtr GetProcAddress(IntPtr hModule, string lpProcName);\n  \n  // You must enable "Allow \'unsafe\' code" in the Player Settings\n  unsafe void Start()\n  {\n#if UNITY_EDITOR_WIN || UNITY_STANDALONE_WIN\n    // This example is only valid on Windows\n    \n    // Get a pointer to an unmanaged function\n    IntPtr kernel32 = LoadLibrary("kernel32.dll");\n    IntPtr getCurrentThreadId = GetProcAddress(kernel32, "GetCurrentThreadId");\n\n    // The unmanaged calling convention\n    delegate* unmanaged[Stdcall]&lt;UInt32&gt; getCurrentThreadIdUnmanagedStdcall = (delegate* unmanaged[Stdcall]&lt;UInt32&gt;)getCurrentThreadId;\n    Debug.Log(getCurrentThreadIdUnmanagedStdcall());\n#endif\n  }\n}\n\n\n')))}d.isMDXComponent=!0}}]);