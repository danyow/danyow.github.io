"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5958],{35318:function(e,t,i){i.d(t,{Zo:function(){return p},kt:function(){return b}});var n=i(27378);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(i),b=r,y=c["".concat(s,".").concat(b)]||c[b]||d[b]||a;return i?n.createElement(y,l(l({ref:t},p),{},{components:i})):n.createElement(y,l({ref:t},p))}));function b(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,l=new Array(a);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<a;u++)l[u]=i[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}c.displayName="MDXCreateElement"},66205:function(e,t,i){i.r(t),i.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});i(27378);var n=i(35318);function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e},r.apply(this,arguments)}function a(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}const l={id:"USS Variables in UI Builder",slug:"/uitoolkits/uielements/uibuilder/uib-styling-ui/uib-styling-ui-using-uss-variables"},o="USS Variables in UI Builder",s={unversionedId:"unity/uitoolkits/uielements/uibuilder/uib-styling-ui/USS Variables in UI Builder",id:"version-Unity@2022.1/unity/uitoolkits/uielements/uibuilder/uib-styling-ui/USS Variables in UI Builder",title:"USS Variables in UI Builder",description:"USS Variables are regular USS style properties with custom user-defined names that can hold any style value type. They can then be used in place of a value on any other USS style property. USS variables are primarily used for themes, with the default Unity themes exposing a long list of standard variables to make your UI more consistent with standard controls. The example below demonstrates variable definition and usage in USS:",source:"@site/versioned_docs/version-Unity@2022.1/unity/uitoolkits/uielements/uibuilder/uib-styling-ui/uib-styling-ui-using-uss-variables.md",sourceDirName:"unity/uitoolkits/uielements/uibuilder/uib-styling-ui",slug:"/uitoolkits/uielements/uibuilder/uib-styling-ui/uib-styling-ui-using-uss-variables",permalink:"/docs/uitoolkits/uielements/uibuilder/uib-styling-ui/uib-styling-ui-using-uss-variables",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"2022/3/31",frontMatter:{id:"USS Variables in UI Builder",slug:"/uitoolkits/uielements/uibuilder/uib-styling-ui/uib-styling-ui-using-uss-variables"},sidebar:"unity",previous:{title:"Styling USS selectors with UI Builder",permalink:"/docs/uitoolkits/uielements/uibuilder/uib-styling-ui/uib-styling-ui-using-uss-selectors"},next:{title:"Testing UI",permalink:"/docs/uitoolkits/uielements/uibuilder/uib-testing-ui/uib-testing-ui"}},u={},p=[{value:"Assign a variable",id:"assign-a-variable",level:2},{value:"\u6ce8\u610f",id:"\u6ce8\u610f",level:2}],d={toc:p};function c(e){var{components:t}=e,i=a(e,["components"]);return(0,n.kt)("wrapper",r({},d,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",r({},{id:"uss-variables-in-ui-builder"}),"USS Variables in UI Builder"),(0,n.kt)("p",null,"USS Variables are regular USS style properties with custom user-defined names that can hold any style value type. They can then be used in place of a value on any other USS style property. USS variables are primarily used for themes, with the default Unity themes exposing a long list of standard variables to make your UI more consistent with standard controls. The example below demonstrates variable definition and usage in USS:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{}),"* {\n    --my-var: 20px;\n}\n\n.my-button {\n    width: var(--my-var);\n}\n")),(0,n.kt)("h2",r({},{id:"assign-a-variable"}),"Assign a variable"),(0,n.kt)("p",null,"To assign a variable to a StyleSheet USS style property in UI Builder:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Navigate to the  ",(0,n.kt)("strong",{parentName:"li"},"Inspector"),"  pane and right-click on a style field"),(0,n.kt)("li",{parentName:"ol"},"Select  ",(0,n.kt)("strong",{parentName:"li"},"Set Variable")," .")),(0,n.kt)("p",null,"This option will temporarily convert the style field into a text field and allow you to input the name of the USS variable:"),(0,n.kt)("p",null,(0,n.kt)("img",r({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/UIBuilder/USSVariablesSearch.png",alt:"USSVariablesSearch"}))),(0,n.kt)("p",null,"USSVariablesSearch"),(0,n.kt)("p",null,"As you type the name of the variable, a dropdown menu displays any found matching variables coming from either:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The current theme used for authoring context in the UI Builder via the  ",(0,n.kt)("strong",{parentName:"li"},"Theme"),"  dropdown in the  ",(0,n.kt)("strong",{parentName:"li"},"Viewport"),"  toolbar."),(0,n.kt)("li",{parentName:"ol"},"Any assigned StyleSheets to the current UI Document (UXML).")),(0,n.kt)("p",null,"The variable dropdown will also let you select a variable option and see its current value and the StyleSheet asset it\u2019s coming from. Pressing  ",(0,n.kt)("strong",{parentName:"p"},"Enter"),"  will set the variable and revert the style field back to its original type."),(0,n.kt)("p",null,"For style fields that are already text fields, you can also assign a variable by starting to type ",(0,n.kt)("inlineCode",{parentName:"p"},"--")," instead of a number."),(0,n.kt)("p",null,"You can see which style fields already have a variable assigned by looking at the label of the field and seeing if it\u2019s enclosed in a box:"),(0,n.kt)("p",null,(0,n.kt)("img",r({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/UIBuilder/USSVariablesSet.png",alt:"USSVariablesSet"}))),(0,n.kt)("p",null,"USSVariablesSet"),(0,n.kt)("p",null,"To remove a variable assignment, select  ",(0,n.kt)("strong",{parentName:"p"},"Set Variable"),"  and delete the variable name."),(0,n.kt)("h2",r({},{id:"\u6ce8\u610f"}),"\u6ce8\u610f"),(0,n.kt)("p",null,"A few additional points to keep in mind when using USS Variables in UI Builder:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"USS Variables aren\u2019t supported in per-element inline styles in UI Toolkit core. When selecting an element you will see which style properties are driven by a variable with the field label highlight, but only has the option to  ",(0,n.kt)("strong",{parentName:"li"},"View Variable")," . You can override the variable with a real value by overriding the inline style property."),(0,n.kt)("li",{parentName:"ol"},"USS Variables are useful for  ",(0,n.kt)("strong",{parentName:"li"},"Editor Extension Authoring")," , when using the Editor themes (Dark or Light). As such, you won\u2019t find many variables when searching via the  ",(0,n.kt)("strong",{parentName:"li"},"Inspector"),"  dropdown by default. Make sure to enable  ",(0,n.kt)("strong",{parentName:"li"},"Editor Extension Authoring"),"  via the  ",(0,n.kt)("strong",{parentName:"li"},"Canvas"),"  settings to see all available Editor variables."),(0,n.kt)("li",{parentName:"ol"},"UI Builder doesn\u2019t currently support the creation of new USS Variables. To create a new USS Variable, you must use a text editor while editing the StyleSheet directly.")))}c.isMDXComponent=!0}}]);