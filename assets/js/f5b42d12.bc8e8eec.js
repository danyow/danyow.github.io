"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[67189],{35318:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return p}});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),c=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(m.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),p=a,d=u["".concat(m,".").concat(p)]||u[p]||y[p]||o;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},28133:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return l}});n(27378);var r=n(35318);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const i={id:"Memory in Unity",slug:"/unity-overview/analysis/performance-memory-overview/performance-memory-overview"},s="Memory in Unity",m={unversionedId:"unity/unity-overview/analysis/performance-memory-overview/Memory in Unity",id:"version-Unity@2022.1/unity/unity-overview/analysis/performance-memory-overview/Memory in Unity",title:"Memory in Unity",description:"memory-in-unity-header.jpg",source:"@site/versioned_docs/version-Unity@2022.1/unity/unity-overview/analysis/performance-memory-overview/performance-memory-overview.md",sourceDirName:"unity/unity-overview/analysis/performance-memory-overview",slug:"/unity-overview/analysis/performance-memory-overview/performance-memory-overview",permalink:"/docs/unity-overview/analysis/performance-memory-overview/performance-memory-overview",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"2022/3/31",frontMatter:{id:"Memory in Unity",slug:"/unity-overview/analysis/performance-memory-overview/performance-memory-overview"},sidebar:"unity",previous:{title:"Log files",permalink:"/docs/unity-overview/analysis/log-files"},next:{title:"Memory allocator customization",permalink:"/docs/unity-overview/analysis/performance-memory-overview/memory-allocator-customization"}},c={},l=[{value:"Managed memory",id:"managed-memory",level:2},{value:"C# unmanaged memory",id:"c-unmanaged-memory",level:2},{value:"Native memory",id:"native-memory",level:2}],y={toc:l};function u(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)("wrapper",a({},y,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",a({},{id:"memory-in-unity"}),"Memory in Unity"),(0,r.kt)("p",null,(0,r.kt)("img",a({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/memory-in-unity-header.jpg",alt:"memory-in-unity-header.jpg"}))),(0,r.kt)("p",null,"To ensure your application runs with no performance issues, it\u2019s important to understand how Unity uses and allocates memory. This section of the documentation explains how memory works in Unity, and is intended for readers who want to understand how they can improve the memory performance of their application."),(0,r.kt)("p",null,"Unity uses three memory management layers to handle memory in your application:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",a({parentName:"li"},{href:"#managed-memory"}),"Managed memory"),": A controlled memory layer that uses a managed heap and a ",(0,r.kt)("a",a({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)"}),"garbage collector")," to automatically allocate and assign memory."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",a({parentName:"li"},{href:"#c-unmanaged-memory"}),"C# unmanaged memory"),": A layer of memory management that you can use in conjunction with the Unity Collections namespace and package. This memory type is called \u201cunmanaged\u201d because it doesn\u2019t use a ",(0,r.kt)("a",a({parentName:"li"},{href:"/docs/unity-overview/analysis/performance-memory-overview/performance-garbage-collector/performance-garbage-collector"}),"garbage collector")," to manage unused parts of memory."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",a({parentName:"li"},{href:"#native-memory"}),"Native memory"),": C++ memory that Unity uses to run the engine. In most situations, this memory is inaccessible to Unity users, but it\u2019s useful to be aware of it if you want to fine-tune certain aspects of the performance of your application.")),(0,r.kt)("h2",a({},{id:"managed-memory"}),"Managed memory"),(0,r.kt)("p",null,(0,r.kt)("a",a({parentName:"p"},{href:"/docs/scripting-section/unity-architecture/scripting-backends/scripting-backends"}),"Mono and IL2CPP\u2019s")," scripting virtual machines (VMs) implement the  ",(0,r.kt)("strong",{parentName:"p"},"managed memory"),"  system, which is sometimes referred to as the scripting memory system. These VMs offer a controlled memory environment divided into the following different types:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"The managed heap")," : A section of memory that the VM automatically controls with a ",(0,r.kt)("a",a({parentName:"li"},{href:"/docs/unity-overview/analysis/performance-memory-overview/performance-garbage-collector/performance-garbage-collector"}),"garbage collector")," (GC). Because of this, the memory allocated on the managed heap is referred to as  ",(0,r.kt)("strong",{parentName:"li"},"GC Allocation")," . The ",(0,r.kt)("a",a({parentName:"li"},{href:"/docs/unity-overview/analysis/profiler/profiler"}),"Profiler")," records any occurrence of such an allocation as a  ",(0,r.kt)("strong",{parentName:"li"},"GC.Alloc"),"  sample."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"The scripting stack:"),"  This is built up and unwound as your application steps into and out of any code scopes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Native VM memory:"),"  Contains memory related to Unity\u2019s scripting layer. Most of the time, you won\u2019t need to manipulate the native VM memory, but it\u2019s useful to know that it includes memory related to the executable code that your code generates, in particular around the use of ",(0,r.kt)("a",a({parentName:"li"},{href:"https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/types/generics"}),"generics"),", type meta data that ",(0,r.kt)("a",a({parentName:"li"},{href:"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/reflection"}),"Reflection")," uses, and the memory required to run the VM.")),(0,r.kt)("p",null,"Because the managed memory system uses VMs, it has a controlled environment that automatically tracks the references of allocations to manage their lifetime. This means that it\u2019s less likely for your application to release memory too early, while other code is trying to access it. It also means that you have some safeguard against ",(0,r.kt)("a",a({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Memory_leak"}),"memory leaks")," that happen when memory is inaccessible from code, or from unused memory piling up."),(0,r.kt)("p",null,"Using managed memory in Unity is the easiest way to manage the memory in your application; but it has some disadvantages. The garbage collector is convenient to use, but it\u2019s also unpredictable in how it releases and allocates memory, which might lead to performance issues such as stuttering, which happens when the garbage collector has to stop to release and allocate memory. To work around this unpredictability, you can use the ",(0,r.kt)("a",a({parentName:"p"},{href:"#c-unmanaged-memory"}),"C# unmanaged memory layer"),"."),(0,r.kt)("p",null,"For more information on how managed memory works see the documentation on ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/unity-overview/analysis/performance-memory-overview/performance-managed-memory"}),"Managed memory"),"."),(0,r.kt)("h2",a({},{id:"c-unmanaged-memory"}),"C# unmanaged memory"),(0,r.kt)("p",null,"The  ",(0,r.kt)("strong",{parentName:"p"},"C# unmanaged memory layer"),"  allows you to access the native memory layer to fine-tune memory allocations, with the convenience of writing C# code."),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Unity.Collections"),"namespace (including ",(0,r.kt)("a",a({parentName:"p"},{href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Unity.Collections.NativeArray_1.html"}),"NativeArray"),") in the Unity core API, and the data structures in the ",(0,r.kt)("a",a({parentName:"p"},{href:"https://docs.unity3d.com/Packages/com.unity.collections@latest"}),"Unity Collections package")," to access C# unmanaged memory. If you use Unity\u2019s C# Job system, or Burst, you must use C# unmanaged memory. For more information about this, see the documentation on the ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/scripting-section/job-system/job-system"}),"Job system")," and ",(0,r.kt)("a",a({parentName:"p"},{href:"http://docs.unity3d.com/Packages/com.unity.burst@latest"}),"Burst"),"."),(0,r.kt)("h2",a({},{id:"native-memory"}),"Native memory"),(0,r.kt)("p",null,"The Unity engine\u2019s internal C/C++ core has its own memory management system, which is referred to as  ",(0,r.kt)("strong",{parentName:"p"},"native memory")," . In most situations, you can\u2019t directly access or modify this memory type."),(0,r.kt)("p",null,"Unity stores the scenes in your project, assets, graphics APIs, graphics drivers, subsystem and plug-in buffers, and allocations inside native memory, which means that you can indirectly access the native memory via Unity\u2019s C# API. This means that you can manipulate the data for your application in a safe and easy way, without losing the benefits of the native and performant code that\u2019s at Unity\u2019s native core."),(0,r.kt)("p",null,"Most of the time, you won\u2019t need to interact with Unity\u2019s native memory, but you can see how it affects the performance of your application whenever you use the ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/unity-overview/analysis/profiler/profiler-window/profiler-window"}),"Profiler"),", through ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/unity-overview/analysis/profiler/profiler-markers"}),"Profiler markers"),"."))}u.isMDXComponent=!0}}]);