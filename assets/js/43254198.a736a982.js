"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5082],{5318:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return N}});var l=a(7378);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},i=Object.keys(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=l.createContext({}),m=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=m(e.components);return l.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},s=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=m(a),N=n,c=s["".concat(o,".").concat(N)]||s[N]||k[N]||i;return a?l.createElement(c,r(r({ref:t},u),{},{components:a})):l.createElement(c,r({ref:t},u))}));function N(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,r[1]=p;for(var m=2;m<i;m++)r[m]=a[m];return l.createElement.apply(null,r)}return l.createElement.apply(null,a)}s.displayName="MDXCreateElement"},5179:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return s},frontMatter:function(){return r},metadata:function(){return o},toc:function(){return u}});a(7378);var l=a(5318);function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var l in a)Object.prototype.hasOwnProperty.call(a,l)&&(e[l]=a[l])}return e},n.apply(this,arguments)}function i(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},i=Object.keys(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}const r={id:"boehm",title:"Boehm\u5783\u573e\u56de\u6536",slug:"/translation/boehm"},p='The "Boehm-Demers-Weiser" Conservative Garbage Collector',o={unversionedId:"translation/boehm",id:"translation/boehm",title:"Boehm\u5783\u573e\u56de\u6536",description:"Slide\u5e7b\u706f\u7247\u5730\u5740",source:"@site/docs/translation/boehm.md",sourceDirName:"translation",slug:"/translation/boehm",permalink:"/docs/translation/boehm",editUrl:"https://crowdin.com/project/docusaurus-v2/zh-Hans",tags:[],version:"current",lastUpdatedBy:"danyow",lastUpdatedAt:1650212699,formattedLastUpdatedAt:"2022/4/17",frontMatter:{id:"boehm",title:"Boehm\u5783\u573e\u56de\u6536",slug:"/translation/boehm"},sidebar:"docs",previous:{title:"\u7ffb\u8bd1",permalink:"/docs/translation"},next:{title:"Lua\u7684\u5783\u573e\u56de\u6536",permalink:"/docs/translation/luagc"}},m={},u=[{value:"Outline",id:"outline",level:2},{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:3},{value:"What is it?",id:"what-is-it",level:2},{value:"\u4ed6\u662f\u4ec0\u4e48\uff1f",id:"\u4ed6\u662f\u4ec0\u4e48",level:3},{value:"Example: Lisp S-expressions",id:"example-lisp-s-expressions",level:2},{value:"\u793a\u4f8b\uff1a<code>Lisp S-expressions</code>",id:"\u793a\u4f8blisp-s-expressions",level:3},{value:"Where did it come from?",id:"where-did-it-come-from",level:2},{value:"\u5b83\u662f\u4ece\u54ea\u91cc\u6765\u7684\uff1f",id:"\u5b83\u662f\u4ece\u54ea\u91cc\u6765\u7684",level:3},{value:"What else can it do?",id:"what-else-can-it-do",level:2},{value:"\u5b83\u8fd8\u80fd\u505a\u4ec0\u4e48\uff1f",id:"\u5b83\u8fd8\u80fd\u505a\u4ec0\u4e48",level:3},{value:"What can&#39;t it do?",id:"what-cant-it-do",level:2},{value:"\u5b83\u4e0d\u80fd\u505a\u4ec0\u4e48?",id:"\u5b83\u4e0d\u80fd\u505a\u4ec0\u4e48",level:3},{value:"Dealing with C: Conservative Garbage Collection",id:"dealing-with-c-conservative-garbage-collection",level:2},{value:"\u4e0e<code>C</code>\u6253\u4ea4\u9053\uff1a\u4fdd\u5b88\u7684\u5783\u573e\u6536\u96c6",id:"\u4e0ec\u6253\u4ea4\u9053\u4fdd\u5b88\u7684\u5783\u573e\u6536\u96c6",level:3},{value:"C Interface overview",id:"c-interface-overview",level:2},{value:"<code>C</code>\u63a5\u53e3\u6982\u8ff0",id:"c\u63a5\u53e3\u6982\u8ff0",level:3},{value:"C interface, main functions",id:"c-interface-main-functions",level:2},{value:"<code>C</code> \u63a5\u53e3, \u4e3b\u8981\u7684\u4e00\u4e9b\u65b9\u6cd5:",id:"c-\u63a5\u53e3-\u4e3b\u8981\u7684\u4e00\u4e9b\u65b9\u6cd5",level:3},{value:"C++ interface",id:"c-interface",level:2},{value:"<code>C++</code>\u63a5\u53e3",id:"c\u63a5\u53e3",level:3},{value:"Environment variables",id:"environment-variables",level:2},{value:"\u73af\u5883\u53d8\u91cf",id:"\u73af\u5883\u53d8\u91cf",level:3},{value:"How does it work?",id:"how-does-it-work",level:2},{value:"\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f",id:"\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684",level:3},{value:"Mark/sweep illustration",id:"marksweep-illustration",level:2},{value:"\u6807\u8bb0/\u6e05\u9664 \u63d2\u753b",id:"\u6807\u8bb0\u6e05\u9664-\u63d2\u753b",level:3},{value:"Easy performance issue",id:"easy-performance-issue",level:2},{value:"\u7b80\u5355\u6027\u80fd\u95ee\u9898",id:"\u7b80\u5355\u6027\u80fd\u95ee\u9898",level:3},{value:"Asymptotic Complexity of MarkSweep vs. Copying",id:"asymptotic-complexity-of-marksweep-vs-copying",level:2},{value:"\u8fd0\u884c\u65f6\u95f4\u590d\u6742\u5ea6 <code>M&amp;S</code> vs <code>Copying</code>\u5206\u6790.",id:"\u8fd0\u884c\u65f6\u95f4\u590d\u6742\u5ea6-ms-vs-copying\u5206\u6790",level:3},{value:"Implementation details overview",id:"implementation-details-overview",level:2},{value:"\u5b9e\u73b0\u7ec6\u8282\u63cf\u8ff0",id:"\u5b9e\u73b0\u7ec6\u8282\u63cf\u8ff0",level:3},{value:"Allocator design",id:"allocator-design",level:2},{value:"\u5206\u914d\u5668\u8bbe\u8ba1",id:"\u5206\u914d\u5668\u8bbe\u8ba1",level:3},{value:"Heap layout",id:"heap-layout",level:2},{value:"\u5806\u5e03\u5c40",id:"\u5806\u5e03\u5c40",level:3},{value:"Meta-data",id:"meta-data",level:2},{value:"\u5143\u6570\u636e",id:"\u5143\u6570\u636e",level:3},{value:"Meta-data lookup",id:"meta-data-lookup",level:2},{value:"Pointer validity check",id:"pointer-validity-check",level:2},{value:"\u6307\u9488\u6709\u6548\u6027\u68c0\u67e5",id:"\u6307\u9488\u6709\u6548\u6027\u68c0\u67e5",level:3},{value:"Partial pointer location (type) information.",id:"partial-pointer-location-type-information",level:2},{value:"\u90e8\u5206\u6307\u9488\u4f4d\u7f6e\uff08\u7c7b\u578b\uff09\u4fe1\u606f\u3002",id:"\u90e8\u5206\u6307\u9488\u4f4d\u7f6e\u7c7b\u578b\u4fe1\u606f",level:3},{value:"Locating roots",id:"locating-roots",level:2},{value:"\u5b9a\u4f4d\u6839",id:"\u5b9a\u4f4d\u6839",level:3},{value:"Basic mark algorithm",id:"basic-mark-algorithm",level:2},{value:"\u57fa\u672c\u6807\u8bb0\u7b97\u6cd5",id:"\u57fa\u672c\u6807\u8bb0\u7b97\u6cd5",level:3},{value:"Marker refinements",id:"marker-refinements",level:2},{value:"\u6807\u8bb0\u6539\u8fdb",id:"\u6807\u8bb0\u6539\u8fdb",level:3},{value:"The marker core (version pre-7.0)",id:"the-marker-core-version-pre-70",level:2},{value:"\u6807\u8bb0\u5668\u6838\u5fc3\uff087.0\u4e4b\u524d\u7684\u7248\u672c\uff09",id:"\u6807\u8bb0\u5668\u6838\u5fc370\u4e4b\u524d\u7684\u7248\u672c",level:3},{value:"Marker performance: Why GC needs a fast multiplier.",id:"marker-performance-why-gc-needs-a-fast-multiplier",level:2},{value:"\u6807\u8bb0\u5668\u6027\u80fd\uff1a\u4e3a\u4ec0\u4e48 <code>GC</code> \u9700\u8981\u5feb\u901f\u4e58\u6cd5\u5668",id:"\u6807\u8bb0\u5668\u6027\u80fd\u4e3a\u4ec0\u4e48-gc-\u9700\u8981\u5feb\u901f\u4e58\u6cd5\u5668",level:3},{value:"What if the mark stack overflows?",id:"what-if-the-mark-stack-overflows",level:2},{value:"\u5982\u679c\u6807\u8bb0\u5806\u6808\u6ea2\u51fa",id:"\u5982\u679c\u6807\u8bb0\u5806\u6808\u6ea2\u51fa",level:3},{value:"The &quot;sweep phase&quot;",id:"the-sweep-phase",level:2},{value:"\u6e05\u9664\u9636\u6bb5",id:"\u6e05\u9664\u9636\u6bb5",level:3},{value:"Thread support",id:"thread-support",level:2},{value:"\u7ebf\u7a0b\u652f\u6301",id:"\u7ebf\u7a0b\u652f\u6301",level:3},{value:"Enhancement 1: Black-listing",id:"enhancement-1-black-listing",level:2},{value:"Black-listing (contd.)",id:"black-listing-contd",level:2},{value:"\u9ed1\u540d\u5355 (\u7eed)",id:"\u9ed1\u540d\u5355-\u7eed",level:3},{value:"Optional enhancements",id:"optional-enhancements",level:2},{value:"\u53ef\u9009\u589e\u5f3a\u529f\u80fd",id:"\u53ef\u9009\u589e\u5f3a\u529f\u80fd",level:3},{value:"Generational, Incremental, Mostly Concurrent GC",id:"generational-incremental-mostly-concurrent-gc",level:2},{value:"\u5206\u4ee3\u3001\u589e\u91cf\u3001\u5927\u90e8\u5206\u5e76\u53d1",id:"\u5206\u4ee3\u589e\u91cf\u5927\u90e8\u5206\u5e76\u53d1",level:3},{value:"Parallel marking &amp; processor scalability",id:"parallel-marking--processor-scalability",level:2},{value:"\u5e76\u884c\u6807\u8bb0\u548c\u5904\u7406\u5668",id:"\u5e76\u884c\u6807\u8bb0\u548c\u5904\u7406\u5668",level:3},{value:"Parallel marking",id:"parallel-marking",level:2},{value:"\u5e76\u884c\u6807\u8bb0",id:"\u5e76\u884c\u6807\u8bb0",level:3},{value:"Parallel marking data structure",id:"parallel-marking-data-structure",level:2},{value:"Thread-local allocation buffers",id:"thread-local-allocation-buffers",level:2},{value:"\u7ebf\u7a0b\u5c40\u90e8\u5206\u914d",id:"\u7ebf\u7a0b\u5c40\u90e8\u5206\u914d",level:3},{value:"Thread-local allocation details",id:"thread-local-allocation-details",level:2},{value:"\u7ebf\u7a0b\u5c40\u90e8\u5206\u914d\u7ec6\u8282",id:"\u7ebf\u7a0b\u5c40\u90e8\u5206\u914d\u7ec6\u8282",level:3},{value:"Finalization",id:"finalization",level:2},{value:"\u7ec8\u7ed3",id:"\u7ec8\u7ed3",level:3},{value:"Finalization (quick observations)",id:"finalization-quick-observations",level:2},{value:"\u7ec8\u7ed3(\u5feb\u901f\u89c2\u5bdf)",id:"\u7ec8\u7ed3\u5feb\u901f\u89c2\u5bdf",level:3},{value:"Debugging support",id:"debugging-support",level:2},{value:"Debugging facilities",id:"debugging-facilities",level:2},{value:"\u8c03\u8bd5\u8bbe\u65bd",id:"\u8c03\u8bd5\u8bbe\u65bd",level:3},{value:"Current state",id:"current-state",level:2},{value:"Performance characteristics",id:"performance-characteristics",level:2},{value:"\u6027\u80fd\u7279\u70b9",id:"\u6027\u80fd\u7279\u70b9",level:3},{value:"GCBench vs HotSpot 1.4.2 client",id:"gcbench-vs-hotspot-142-client",level:2},{value:"C/C++ GCBench Comparison",id:"cc-gcbench-comparison",level:2},{value:"C/C++ <code>GCBench</code> \u6bd4\u8f83",id:"cc-gcbench-\u6bd4\u8f83",level:3},{value:"Execution time (msecs, 2GHz Xeon) vs. alternatives",id:"execution-time-msecs-2ghz-xeon-vs-alternatives",level:2},{value:"Max. space usage (MB) vs. others",id:"max-space-usage-mb-vs-others",level:2},{value:"Max pause time (msecs) vs. others",id:"max-pause-time-msecs-vs-others",level:2},{value:"But:",id:"but",level:2},{value:"\u4f46\u662f",id:"\u4f46\u662f",level:3},{value:"Large objects(msecs, MB, 2GHz Xeon)",id:"large-objectsmsecs-mb-2ghz-xeon",level:2},{value:"Large objects(thread-safe)",id:"large-objectsthread-safe",level:2},{value:"Some older measurements on malloc benchmarks",id:"some-older-measurements-on-malloc-benchmarks",level:2},{value:"<code>malloc</code>\u57fa\u51c6\u4e0a\u7684\u4e00\u4e9b\u65e7\u6d4b\u91cf",id:"malloc\u57fa\u51c6\u4e0a\u7684\u4e00\u4e9b\u65e7\u6d4b\u91cf",level:3},{value:"Ghostscript throughput",id:"ghostscript-throughput",level:2},{value:"MT_GCBench2 throughput",id:"mt_gcbench2-throughput",level:2},{value:"Larson (slightly mod.) benchmark throughput",id:"larson-slightly-mod-benchmark-throughput",level:2},{value:"Larson-small throughput",id:"larson-small-throughput",level:2},{value:"Other experiences",id:"other-experiences",level:2},{value:"\u5176\u4ed6\u7ecf\u9a8c",id:"\u5176\u4ed6\u7ecf\u9a8c",level:3},{value:"Space overhead of conservative GC",id:"space-overhead-of-conservative-gc",level:2},{value:"\u4fdd\u5b88<code>GC</code>\u7684\u7a7a\u95f4\u5f00\u9500",id:"\u4fdd\u5b88gc\u7684\u7a7a\u95f4\u5f00\u9500",level:3},{value:"Conclusions",id:"conclusions",level:2},{value:"\u7ed3\u8bba",id:"\u7ed3\u8bba",level:3}],k={toc:u};function s(e){var{components:t}=e,a=i(e,["components"]);return(0,l.kt)("wrapper",n({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",n({},{id:"the-boehm-demers-weiser-conservative-garbage-collector"}),'The "Boehm-Demers-Weiser" Conservative Garbage Collector'),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",n({parentName:"p"},{href:"https://www.hboehm.info/gc/04tutorial.pdf"}),"Slide\u5e7b\u706f\u7247\u5730\u5740"))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",n({parentName:"p"},{href:"https://dl.acm.org/doi/pdf/10.1145/96709.96735"}),"\u8bba\u6587\u5730\u5740"))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",n({parentName:"p"},{href:"https://www.hboehm.info/"}),"\u5927\u4f6c\u4e3b\u9875"))),(0,l.kt)("h2",n({},{id:"outline"}),"Outline"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Introduction",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Interface"),(0,l.kt)("li",{parentName:"ul"},"Implementation basics & goals"))),(0,l.kt)("li",{parentName:"ul"},"Implementation details and issues",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Core collector"),(0,l.kt)("li",{parentName:"ul"},"Enhancements"))),(0,l.kt)("li",{parentName:"ul"},"Experiences and a few measurements")),(0,l.kt)("h3",n({},{id:"\u6982\u8ff0"}),"\u6982\u8ff0"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bfc\u8a00",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u63a5\u53e3"),(0,l.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u57fa\u7840\u4e0e\u76ee\u6807"))),(0,l.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u7ec6\u8282\u548c\u95ee\u9898",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6838\u5fc3\u56de\u6536\u5668"),(0,l.kt)("li",{parentName:"ul"},"\u589e\u5f3a\u529f\u80fd"))),(0,l.kt)("li",{parentName:"ul"},"\u7ecf\u9a8c\u548c\u4e00\u4e9b\u6d4b\u8bd5")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"what-is-it"}),"What is it?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A garbage collecting replacement for C's malloc().",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Calls to free() are optional."),(0,l.kt)("li",{parentName:"ul"},"Unreachable memory is automatically reclaimed, and made available to future\nmalloc() calls."))),(0,l.kt)("li",{parentName:"ul"},"A tracing (mark/sweep) garbage collector.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"It periodically determines which objects can be reached by following pointers."),(0,l.kt)("li",{parentName:"ul"},"The rest can be reused for other purposes."))),(0,l.kt)("li",{parentName:"ul"},"An easy way to add garbage collection to a runtime system.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Easy to interface to."),(0,l.kt)("li",{parentName:"ul"},"Interacts well with C/C++ code."),(0,l.kt)("li",{parentName:"ul"},"Gcj (Java), Mono (C#, .NET), Bigloo (Scheme), MzScheme."))),(0,l.kt)("li",{parentName:"ul"},"A leak detector for programs that call free().",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Unreachable unfreed memory is a memory leak.")))),(0,l.kt)("h3",n({},{id:"\u4ed6\u662f\u4ec0\u4e48"}),"\u4ed6\u662f\u4ec0\u4e48\uff1f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u53ef\u4ee5\u66ff\u4ee3",(0,l.kt)("inlineCode",{parentName:"li"},"C"),"\u4e2d",(0,l.kt)("inlineCode",{parentName:"li"},"malloc()"),"\u7684\u5783\u573e\u56de\u6536\u5668\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bf9",(0,l.kt)("inlineCode",{parentName:"li"},"free()"),"\u7684\u8c03\u7528\u662f\u53ef\u9009\u7684\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u53ef\u8fbe\u5185\u5b58\u4f1a\u81ea\u52a8\u56de\u6536\uff0c\u5e76\u63d0\u4f9b\u7279\u6027 ",(0,l.kt)("inlineCode",{parentName:"li"},"malloc()"),"\u7528\u4ee5\u8c03\u7528\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u8ddf\u8e2a\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"Marks&Weep"),"\uff09\u5783\u573e\u56de\u6536\u5668\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5b83\u5b9a\u671f\u786e\u5b9a\u53ef\u4ee5\u901a\u8fc7\u8ddf\u968f\u6307\u9488\u5224\u65ad\u54ea\u4e9b\u5bf9\u8c61\u53ef\u8fbe\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u76ee\u7684\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u5c06\u8be5\u5783\u573e\u56de\u6536\u52a0\u5165\u5230\u8fd0\u884c\u65f6\u7cfb\u7edf.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6613\u4e8e\u63a5\u53e3\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e0e",(0,l.kt)("inlineCode",{parentName:"li"},"C/C++"),"\u4ee3\u7801\u4ea4\u4e92\u826f\u597d\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GCJ\uff08Java\uff09"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Mono\uff08C#, .NET\uff09"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Bigloo\uff08Scheme\uff09"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"MzScheme"),"\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"free()")," \u7684\u7a0b\u5e8f\u7684\u6cc4\u6f0f\u68c0\u6d4b\u5668\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u53ef\u8fbe\u7684\u5e76\u4e14\u672a\u91ca\u653e\u5185\u5b58\u662f\u5185\u5b58\u6cc4\u6f0f\u3002")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GCJ")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"GNU Compiler for the Java Programing Language"),"(GNU Java\u8bed\u8a00\u7f16\u8bd1\u5668)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Java"),"\u6e90\u6587\u4ef6 -> ",(0,l.kt)("inlineCode",{parentName:"li"},"Java"),"\u5b57\u8282\u7801\u6587\u4ef6"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Java"),"\u6e90\u6587\u4ef6 -> ",(0,l.kt)("inlineCode",{parentName:"li"},"Java"),"\u672c\u5730\u673a\u5668\u7801"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Java"),"\u5b57\u8282\u7801\u6587\u4ef6 -> ",(0,l.kt)("inlineCode",{parentName:"li"},"Java"),"\u672c\u5730\u673a\u5668\u7801")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Bigloo"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Bigloo\u662f\u4e00\u4e2a\u9ad8\u6548\u7684Scheme\u8bed\u8a00\u7f16\u7a0b\u73af\u5883")),(0,l.kt)("p",null,"\u901a\u8fc7\u5c06 ",(0,l.kt)("inlineCode",{parentName:"p"},"Scheme")," \u8f6c\u6210 ",(0,l.kt)("inlineCode",{parentName:"p"},"C")," \u8bed\u8a00\u6765\u4f18\u5316\u7f16\u8bd1\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"Bigloo")," \u5141\u8bb8\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"Scheme")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"C")," \u8bed\u8a00\u95f4\u8fdb\u884c\u8fde\u63a5\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"MzScheme"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"MzScheme\u662f\u4e00\u4e2a\u9ad8\u6548\u7684Scheme\u8bed\u8a00\u7f16\u7a0b\u73af\u5883"),"  "),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"example-lisp-s-expressions"}),"Example: Lisp S-expressions"),(0,l.kt)("pre",null,(0,l.kt)("code",n({parentName:"pre"},{className:"language-c"}),'#include "gc.h"\n\ntypedef union se \n{\n  struct cons * cp; \n  int i;\n} sexpr;\n\nstruct cons \n{\n  union se head;\n  union se tail; \n};\n\n#define car(s) (s).cp->head\n#define cdr(s) (s).cp->tail\n#define from_i(z) ({sexpr tmp; tmp.i=z; tmp;})\n#define to_i(s) (s).i\n\nsexpr cons(sexpr a, sexpr b) \n{\n  sexpr tmp = {GC_MALLOC(sizeof(struct cons))};\n  car(tmp) = a; \n  cdr(tmp) = b;\n  return (tmp);\n};\n\nint main() \n{\n  return to_i(car(cons(from_i(0), from_i(1))));\n}\n')),(0,l.kt)("h3",n({},{id:"\u793a\u4f8blisp-s-expressions"}),"\u793a\u4f8b\uff1a",(0,l.kt)("inlineCode",{parentName:"h3"},"Lisp S-expressions")),(0,l.kt)("p",null,"\u66ff\u6362 ",(0,l.kt)("inlineCode",{parentName:"p"},"malloc()")," \u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"GC_MALLOC()"),"?"),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"where-did-it-come-from"}),"Where did it come from?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Began life (ca. 1980) as a simple GC for the Russell programming language. (\nDemers was original author.)"),(0,l.kt)("li",{parentName:"ul"},"Later (ca. 1985?) changed to remove restrictions on generated code, and allow\nuse in the compiler itself.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Eliminate endless debugging of manual reference counting."))),(0,l.kt)("li",{parentName:"ul"},"Used for student compilers for a language with higher-order functions."),(0,l.kt)("li",{parentName:"ul"},"Mark Weiser explored use as leak detector (ca. 1986)."),(0,l.kt)("li",{parentName:"ul"},"A variant served as the Xerox Cedar GC from the late 80s, replacing\nreference-count collector."),(0,l.kt)("li",{parentName:"ul"},"Unrelated to an earlier garbage collector for C written by Doug McIlroy and\napparently layered on top of malloc.")),(0,l.kt)("h3",n({},{id:"\u5b83\u662f\u4ece\u54ea\u91cc\u6765\u7684"}),"\u5b83\u662f\u4ece\u54ea\u91cc\u6765\u7684\uff1f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f5c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"Russell")," \u7f16\u7a0b\u8bed\u8a00\u7684\u7b80\u5355 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u5f00\u59cb\u751f\u6d3b\uff08\u7ea6 1980 \u5e74\uff09\u3002\uff08\u5fb7\u9ed8\u65af\u662f\u539f\u4f5c\u8005\u3002\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u540e\u6765\uff08\u5927\u7ea6 1985 \u5e74\uff1f\uff09\u66f4\u6539\u4e3a\u5220\u9664\u5bf9\u751f\u6210\u4ee3\u7801\u7684\u9650\u5236\uff0c\u5e76\u5141\u8bb8\u5728\u7f16\u8bd1\u5668\u672c\u8eab\u4e2d\u4f7f\u7528\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6d88\u9664\u624b\u52a8\u5f15\u7528\u8ba1\u6570\u7684\u65e0\u4f11\u6b62\u8c03\u8bd5\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u5177\u6709\u9ad8\u9636\u51fd\u6570\u7684\u8bed\u8a00\u7684\u5b66\u751f\u7f16\u8bd1\u5668\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Mark Weiser")," \u63a2\u7d22\u4e86\u7528\u4f5c\u68c0\u6f0f\u4eea\u7684\u7528\u9014\uff08\u7ea6 1986 \u5e74\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"80 \u5e74\u4ee3\u540e\u671f\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"Xerox Cedar GC")," \u53d8\u4f53\u53d6\u4ee3\u4e86\u5f15\u7528\u8ba1\u6570\u6536\u96c6\u5668\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e0e ",(0,l.kt)("inlineCode",{parentName:"li"},"Doug McIlroy")," \u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"C")," \u7f16\u5199\u7684\u65e9\u671f\u5783\u573e\u6536\u96c6\u5668\u65e0\u5173\uff0c\u5e76\u4e14\u663e\u7136\u4f4d\u4e8e ",(0,l.kt)("inlineCode",{parentName:"li"},"malloc")," \u4e4b\u4e0a\u3002")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"what-else-can-it-do"}),"What else can it do?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"20 years of creeping features, including:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Invoking finalizers after an object becomes unreachable."),(0,l.kt)("li",{parentName:"ul"},"Support for use in runtime systems.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"If the compiler wants to help, it can."))),(0,l.kt)("li",{parentName:"ul"},"Support for heap debugging.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"What's in the heap?"),(0,l.kt)("li",{parentName:"ul"},"Why is it still there? How can it still be referenced?"))),(0,l.kt)("li",{parentName:"ul"},"Support for threads and multiprocessor GC.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maybe a way to speed up standard C applications on multiprocessors?"))),(0,l.kt)("li",{parentName:"ul"},"Various mechanisms for reducing GC pauses:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Incremental (but not hard real-time) GC."),(0,l.kt)("li",{parentName:"ul"},"Generational GC which concentrates effort on young objects.\n(But objects are not moved.)"),(0,l.kt)("li",{parentName:"ul"},"Abortable collections.")))))),(0,l.kt)("h3",n({},{id:"\u5b83\u8fd8\u80fd\u505a\u4ec0\u4e48"}),"\u5b83\u8fd8\u80fd\u505a\u4ec0\u4e48\uff1f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"20\u5e74\u6765\u7684\u7f13\u6162\u652f\u6301\uff0c\u5305\u62ec\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5728\u5bf9\u8c61\u53d8\u5f97\u4e0d\u53ef\u8fbe\u540e\u8c03\u7528\u7ec8\u7ed3\u5668\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301\u5728\u8fd0\u884c\u65f6\u7cfb\u7edf\u4e2d\u4f7f\u7528\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u7f16\u8bd1\u5668\u4e5f\u9700\u8981\u5e2e\u52a9\uff0c\u5b83\u53ef\u4ee5\u505a\u5230\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301 \u5806 \u8c03\u8bd5\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5806 \u91cc\u6709\u4ec0\u4e48\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u4e3a\u4ec0\u4e48\u5b83\u8fd8\u5728\u90a3\u91cc\uff1f\u5b83\u600e\u4e48\u8fd8\u80fd\u88ab\u5f15\u7528\uff1f"))),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301\u7ebf\u7a0b\u548c\u591a\u5904\u7406\u5668",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e5f\u8bb8\u662f\u4e00\u79cd\u80fd\u5728\u591a\u5904\u7406\u5668\u4e0a\u52a0\u901f\u6807\u51c6",(0,l.kt)("inlineCode",{parentName:"li"},"C"),"\u5e94\u7528\u7a0b\u5e8f\u7684\u65b0\u65b9\u5f0f\uff1f"))),(0,l.kt)("li",{parentName:"ul"},"\u51cf\u5c11",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u6682\u505c\u7684\u5404\u79cd\u673a\u5236\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u589e\u91cf\uff08\u4f46\u4e0d\u662f\u786c\u5b9e\u65f6\uff09",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c06\u7cbe\u529b\u96c6\u4e2d\u5728\u5e74\u8f7b\u5bf9\u8c61\u4e0a\u7684\u5206\u4ee3 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),".(\u4f46\u662f\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u79fb\u52a8.)"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4e2d\u6b62\u56de\u6536\u8fc7\u7a0b\u3002")))))),(0,l.kt)("p",null,"\u8fd9\u91cc\u8bf4\u660e\u4e86, \u8be5\u7b97\u6cd5\u5e76\u4e0d\u6253\u7b97\u628a\u5bf9\u8c61\u62f7\u8d1d\u6765\u62f7\u8d1d\u53bb\u7684."),(0,l.kt)("p",null,"\u5bf9\u4e8e\u673a\u8eab\u6027\u80fd\u8fd8\u6ca1\u6ea2\u51fa\u7684\u4ea7\u54c1\u4e0a, \u4f7f\u7528\u8be5",(0,l.kt)("inlineCode",{parentName:"p"},"GC"),"\u7b97\u6cd5, \u53ef\u4ee5\u8bf4\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u65b9\u6848\u4e86."),(0,l.kt)("p",null,"\u6bd4\u5982\u624b\u673a."),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"what-cant-it-do"}),"What can't it do?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Reclaim memory or invoke finalizers/destructors immediately.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Like all tracing garbage collectors, it only checks for unreachable memory occasionally. "),(0,l.kt)("li",{parentName:"ul"},"And synchronous heap finalizers are broken anyway..."))),(0,l.kt)("li",{parentName:"ul"},"Reclaim all unreachable objects.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Generally a few will still have pointers to them stored somewhere."),(0,l.kt)("li",{parentName:"ul"},"The GC doesn't know which registers will be referenced. "),(0,l.kt)("li",{parentName:"ul"},"And there are other issues ..."),(0,l.kt)("li",{parentName:"ul"},"And unreachable isn't well-defined anyway ..."),(0,l.kt)("li",{parentName:"ul"},"But we generally avoid growing leaks.")))),(0,l.kt)("h3",n({},{id:"\u5b83\u4e0d\u80fd\u505a\u4ec0\u4e48"}),"\u5b83\u4e0d\u80fd\u505a\u4ec0\u4e48?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7acb\u5373\u56de\u6536\u5185\u5b58\u6216\u8c03\u7528\u7ec8\u7ed3\u5668/\u6790\u6784\u51fd\u6570\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0e\u6240\u6709\u8ddf\u8e2a\u5783\u573e\u6536\u96c6\u5668\u4e00\u6837\uff0c\u5b83\u53ea\u662f\u5076\u5c14\u68c0\u67e5\u4e0d\u53ef\u8fbe\u5185\u5b58."),(0,l.kt)("li",{parentName:"ul"},"\u65e0\u8bba\u5982\u4f55, \u540c\u6b65\u5806\u7ec8\u7ed3\u5668\u90fd\u88ab\u7834\u574f\u4e86..."))),(0,l.kt)("li",{parentName:"ul"},"\u56de\u6536\u6240\u6709\u6240\u6709\u4e0d\u53ef\u8fbe\u5bf9\u8c61\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u4e9b\u4eba\u4ecd\u7136\u4f1a\u5728\u67d0\u5904\u5b58\u50a8\u6307\u5411\u5b83\u4eec\u7684\u6307\u9488\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u4e0d\u77e5\u9053\u5c06\u5f15\u7528\u54ea\u4e9b\u5bc4\u5b58\u5668\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u8fd8\u6709\u5176\u4ed6\u95ee\u9898..."),(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u53ef\u8fbe\u5176\u5b9e\u4e5f\u662f\u4e0d\u5f88\u660e\u786e\u7684\u5b9a\u4e49..."),(0,l.kt)("li",{parentName:"ul"},"\u4f46\u6211\u4eec\u901a\u5e38\u4f1a\u907f\u514d\u8d8a\u6765\u8d8a\u591a\u7684\u6cc4\u6f0f\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"dealing-with-c-conservative-garbage-collection"}),"Dealing with C: Conservative Garbage Collection"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"For C/C++ programs, we may not know where the pointer variables (roots) are.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"We may want to use a standard compiler. (Slightly risky with optimization, but popular.)"),(0,l.kt)("li",{parentName:"ul"},"Program may use C unions."))),(0,l.kt)("li",{parentName:"ul"},"Even layout of heap objects may be unknown."),(0,l.kt)("li",{parentName:"ul"},"It's easier to build a Java/Scheme/ML/... compiler if pointer location information is optional."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Conservative collectors handle pointer location uncertainty:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("em",{parentName:"strong"},"If it might be a pointer it's treated as a pointer."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Objects with ambiguous references are not moved."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"And we never move any objects.")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"May lead to accidental retention of garbage objects."))))),(0,l.kt)("h3",n({},{id:"\u4e0ec\u6253\u4ea4\u9053\u4fdd\u5b88\u7684\u5783\u573e\u6536\u96c6"}),"\u4e0e",(0,l.kt)("inlineCode",{parentName:"h3"},"C"),"\u6253\u4ea4\u9053\uff1a\u4fdd\u5b88\u7684\u5783\u573e\u6536\u96c6"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e",(0,l.kt)("inlineCode",{parentName:"li"},"C/C++"),"\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u77e5\u9053\u6307\u9488\u53d8\u91cf\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"root set"),"\uff09\u5728\u54ea\u91cc\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u6807\u51c6\u7f16\u8bd1\u5668\u3002\uff08\u4f18\u5316\u6709\u70b9\u98ce\u9669\uff0c\u4f46\u662f\u5f88\u53d7\u6b22\u8fce\u3002\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"li"},"C"),"\u7684",(0,l.kt)("inlineCode",{parentName:"li"},"union"),"(\u8054\u5408)\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u751a\u81f3\u5806\u5bf9\u8c61\u7684\u5e03\u5c40\u4e5f\u53ef\u80fd\u662f\u672a\u77e5\u7684\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u6307\u9488\u4f4d\u7f6e\u4fe1\u606f\u662f\u53ef\u9009\u7684\u3002\u90a3\u4e48\u6784\u5efa",(0,l.kt)("inlineCode",{parentName:"li"},"Java/Scheme/ML..."),"\u7f16\u8bd1\u5668\u5c31\u4f1a\u66f4\u5bb9\u6613."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u4fdd\u5b88\u6536\u96c6\u5668\u5904\u7406\u6307\u9488\u4f4d\u7f6e\u4e0d\u786e\u5b9a\u6027\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("em",{parentName:"strong"},"\u5982\u679c\u5b83\u53ef\u80fd\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5219\u5c06\u5176\u89c6\u4e3a\u6307\u9488\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u4e0d\u79fb\u52a8\u5177\u6709\u4e0d\u660e\u786e\u5f15\u7528\u7684\u5bf9\u8c61\u3002"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u6bd5\u7adf, \u6211\u4eec\u4ece\u4e0d\u79fb\u52a8\u4efb\u4f55\u7269\u4f53\u3002")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5783\u573e\u5bf9\u8c61\u7684\u610f\u5916\u4fdd\u7559\u3002"))))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u5f15\u7528 ",(0,l.kt)("a",n({parentName:"p"},{href:"https://www.bilibili.com/video/BV1r44y1z7X3?p=2&t=38m56s"}),"\u9ad8\u5ddd\u8001\u5e08")," \u6f14\u8bb2\u65f6\u5019\u7684\u8bdd, ")),(0,l.kt)("p",null,"\u5728\u4fdd\u5b88\u5185\u5b58\u56de\u6536\u5668\u6765\u770b\uff0c\u5f53\u56de\u6536\u4e00\u4e2a\u5185\u5b58\u5757\u7684\u65f6\u5019\uff0c\u4f1a\u5c1d\u8bd5\u627e\u5230\u5185\u5b58\u5757\u4e0b\u8fb9\u6240\u6709\u7684\u6307\u9488\u6307\u5411\u7684\u5730\u5740\uff0c\u5e76\u4e14\u6807\u8bb0\u4e3a\u5f15\u7528\u3002\u6bd4\u5982\u8bf4 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object a")," \u5f15\u7528\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object b")," \uff0c\u5f53 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object a")," \u4e0d\u80fd\u56de\u6536\u7684\u65f6\u5019\uff0c\u4f1a\u540c\u65f6\u6807\u8bb0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object b")," \u4e5f\u4e0d\u80fd\u88ab\u56de\u6536\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220410092737.png",alt:null}))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5982\u4f55\u77e5\u9053\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e00\u4e2a\u6570\u8fd8\u662f\u4e00\u4e2a\u6307\u9488\u7684\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u9760\u731c!")),(0,l.kt)("p",null,"\u8fd9\u6709\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"potential pointer"),"\u6f5c\u5728\u6307\u9488\uff0c\u5e76\u4e0d\u77e5\u9053\u5b83\u662f\u4e0d\u662f\u771f\u7684\u6307\u9488\uff0c\u800c\u4ee5\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"pattern")," \u7684\u65b9\u5f0f\u6765\u68c0\u67e5\u5f53\u524d\u8fd9\u4e2a\u6570\u6709\u6ca1\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u6307\u9488\u3002"),(0,l.kt)("p",null,"\u6bd4\u5982\u8bf4\u7b2c\u4e00\u4e2a\u6307\u9488\uff0c\u68c0\u67e5",(0,l.kt)("inlineCode",{parentName:"p"},"0x011"),"\u8fd9\u4e2a\u6570\u503c\u6240\u6307\u5411\u7684\u5730\u5740\u91cc\u8fb9\u6709\u6ca1\u6709\u4e1c\u897f\uff0c\u82e5\u6709\u5c31\u6807\u8bb0\u6210 1 \uff0c\u8fd9\u6b21\u4e0d\u56de\u6536\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"0x012")," \u6307\u5411\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object c"),"\uff0c ",(0,l.kt)("inlineCode",{parentName:"p"},"Object c")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"Object a")," \u6ca1\u6709\u5e94\u7528\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f46\u662f\u5b83\u6070\u597d\u5206\u914d\u5230\u4e86\u8fd9\u5757\u5185\u5b58\u4e0a\u3002"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u8d1d\u6bcd\u6765\u8bf4\uff0c\u6307\u7684\u8fd9\u5757\u5730\u65b9\uff0c\u6709\u4e1c\u897f\u4e0d\u56de\u6536\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"0x013")," \u6307\u5411\u4e86\u4e00\u5757\u6ca1\u7528\u7684\u5185\u5b58\u3002"),(0,l.kt)("p",null,"\u8d1d\u6bcd\u5783\u573e\u56de\u6536\u4f1a\u628a\u8fd9\u4e2a\u5730\u5740\u52a0\u5230\u9ed1\u540d\u5355\u91cc\u3002\u5f53\u4e0b\u6b21\u8fdb\u884c\u5927\u5185\u5b58\u5206\u914d\u7684\u65f6\u5019\uff0c\u521a\u597d\u8e29\u5230\u4e86\u8fd9\u4e2a\u5730\u5740\u7684\u65f6\u5019\uff0c\u8d1d\u6bcd\u4f1a\u544a\u8bc9\u4f60\u8fd9\u5757\u5185\u5b58\u4e0d\u80fd\u7528\uff0c\u8d1d\u6bcd\u628a\u5b83\u5148\u7559\u4e0b\u4e86\uff0c\u4f60\u518d\u53bb\u5206\u914d\u4e00\u5757\u3002"),(0,l.kt)("p",null,"\u8fd9\u5c31\u662f\u975e\u7cbe\u51c6\uff0c\u5bf9\u4e8e\u8981\u56de\u6536\u7684\u5185\u5b58\uff0c\u5b83\u53ef\u80fd\u6536\u4e0d\u56de\u6765\uff0c\u5bf9\u4e8e\u6ca1\u7528\u7684\u5185\u5b58\uff0c\u5b83\u4e5f\u53ef\u80fd\u4e0d\u8ba9\u7528\u3002"),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"c-interface-overview"}),"C Interface overview"),(0,l.kt)("p",null,"Debugging support: GC_xyz() vs. GC_XYZ() functions:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GC_xyz() is the real function."),(0,l.kt)("li",{parentName:"ul"},"GC_XYZ(x) expands to either ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_xyx(x)")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_debug_xyz(x, <source position, etc>)"),"."),(0,l.kt)("li",{parentName:"ul"},"Clients should:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Use the all-caps version."),(0,l.kt)("li",{parentName:"ul"},"Always include gc.h."),(0,l.kt)("li",{parentName:"ul"},"Define GC_DEBUG before including gc.h for debugging."))),(0,l.kt)("li",{parentName:"ul"},"This is becoming obsolete technology.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Requires too much recompilation."),(0,l.kt)("li",{parentName:"ul"},"Libunwind, addr2line allow better alternatives.")))),(0,l.kt)("h3",n({},{id:"c\u63a5\u53e3\u6982\u8ff0"}),(0,l.kt)("inlineCode",{parentName:"h3"},"C"),"\u63a5\u53e3\u6982\u8ff0"),(0,l.kt)("p",null,"\u8c03\u8bd5\u652f\u6301\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"GC_xyz()")," vs. ",(0,l.kt)("inlineCode",{parentName:"p"},"GC_XYZ()"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_xyz()")," \u662f\u771f\u6b63\u7684\u51fd\u6570."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_XYZ(x)")," \u5c55\u5f00\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_xyx(x)")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_debug_xyz(x, <source position, etc>)")),(0,l.kt)("li",{parentName:"ul"},"\u5ba2\u6237\u7aef\u5e94\u8be5:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u5168\u5927\u5199\u7248\u672c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u59cb\u7ec8\u5305\u62ec ",(0,l.kt)("inlineCode",{parentName:"li"},"gc.h")),(0,l.kt)("li",{parentName:"ul"},"\u5728\u5305\u542b",(0,l.kt)("inlineCode",{parentName:"li"},"gc.h"),"\u8fdb\u884c\u8c03\u8bd5\u4e4b\u524d\u5b9a\u4e49",(0,l.kt)("inlineCode",{parentName:"li"},"GC_DEBUG"),"\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u8fd9\u6b63\u5728\u6210\u4e3a\u8fc7\u65f6\u7684\u6280\u672f\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u9700\u8981\u592a\u591a\u7684\u91cd\u65b0\u7f16\u8bd1\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Libunwind"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"addr2line")," \u5141\u8bb8\u66f4\u597d\u7684\u9009\u62e9\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"c-interface-main-functions"}),"C interface, main functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GC_MALLOC(bytes)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"In simple cases, this is enough."))),(0,l.kt)("li",{parentName:"ul"},"GC_MALLOC_ATOMIC(bytes)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Allocate pointer-free or untraced (but collected) memory."))),(0,l.kt)("li",{parentName:"ul"},"GC_MALLOC_UNCOLLECTABLE(bytes)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Allocate uncollectable (but traced) memory."))),(0,l.kt)("li",{parentName:"ul"},"GC_REALLOC(p, bytes)"),(0,l.kt)("li",{parentName:"ul"},"GC_REGISTER_FINALIZER(...)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'Register (or unregister or retrieve) "finalizer" code to be called when an\nobject is otherwise "unreachable". '),(0,l.kt)("li",{parentName:"ul"},"Unlike Java, by default, an object is reachable if it can be referenced from other finalizers. (Also Java variant.)"))),(0,l.kt)("li",{parentName:"ul"},"GC_INIT()  Optional on most platforms. (Must be called from main program on a\nfew.)"),(0,l.kt)("li",{parentName:"ul"},"GC_FREE()  If you insist. (Usually helps performance for large objects, hurts\nfor small ones.)"),(0,l.kt)("li",{parentName:"ul"},"GC_MALLOC_IGNORE_OFF_PAGE()  Like GC_MALLOC(), but for large arrays with\npointers to (near) the beginning."),(0,l.kt)("li",{parentName:"ul"},"Plus statistics, control of incremental GC, more allocator variants, heap\nlimits, GC frequency controls, fast inline allocators, etc.")),(0,l.kt)("h3",n({},{id:"c-\u63a5\u53e3-\u4e3b\u8981\u7684\u4e00\u4e9b\u65b9\u6cd5"}),(0,l.kt)("inlineCode",{parentName:"h3"},"C")," \u63a5\u53e3, \u4e3b\u8981\u7684\u4e00\u4e9b\u65b9\u6cd5:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_MALLOC(bytes)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5728\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c31\u8db3\u591f\u4e86\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_MALLOC_ATOMIC(bytes)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5206\u914d\u65e0\u6307\u9488\u6216\u672a\u8ddf\u8e2a\uff08\u4f46\u5df2\u56de\u6536\u8fc7\uff09\u5185\u5b58\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_MALLOC_UNCOLLECTABLE(bytes)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5206\u914d\u65e0\u6cd5\u56de\u6536\u7684\uff08\u4f46\u5df2\u8ddf\u8e2a\uff09\u7684\u5185\u5b58\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_REALLOC(p, bytes)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_REGISTER_FINALIZER(...)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'\u6ce8\u518c\uff08\u6216\u6ce8\u9500\u6216\u68c0\u7d22\uff09"\u7ec8\u7ed3\u5668"\u4ee3\u7801\u4ee5\u5728\u5bf9\u8c61"\u4e0d\u53ef\u8fbe"\u65f6\u8c03\u7528\u3002'),(0,l.kt)("li",{parentName:"ul"},"\u4e0e ",(0,l.kt)("inlineCode",{parentName:"li"},"Java")," \u4e0d\u540c\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u53ef\u4ee5\u4ece\u5176\u4ed6\u7ec8\u7ed3\u5668\u5f15\u7528\u5bf9\u8c61\uff0c\u5219\u8be5\u5bf9\u8c61\u662f\u53ef\u8bbf\u95ee\u7684\u3002\uff08 ",(0,l.kt)("inlineCode",{parentName:"li"},"Java")," \u53d8\u4f53\u4e5f\u662f\u3002\uff09"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_INIT() "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5728\u5927\u591a\u6570\u5e73\u53f0\u4e0a\u90fd\u662f\u53ef\u9009\u7684\u3002 (\u5fc5\u987b\u5728\u5c11\u6570\u60c5\u51b5\u4e0b\u4ece\u4e3b\u7a0b\u5e8f\u8c03\u7528\u3002)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_FREE()"),"  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u4f60\u575a\u6301. (\u901a\u5e38\u5bf9\u5927\u5bf9\u8c61\u6709\u5e2e\u52a9\uff0c\u5bf9\u5c0f\u5bf9\u8c61\u6709\u4f24\u5bb3.)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_MALLOC_IGNORE_OFF_PAGE()")," ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0e",(0,l.kt)("inlineCode",{parentName:"li"},"GC_MALLOC()"),"\u7c7b\u4f3c, \u4f46\u7528\u4e8e\u6307\u9488\u6307\u5411\uff08\u63a5\u8fd1\uff09\u5f00\u5934\u7684\u5927\u578b\u6570\u7ec4\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u52a0\u4e0a\u7edf\u8ba1\u6570\u636e\u3001\u589e\u91cf",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u63a7\u5236\u3001\u66f4\u591a\u5206\u914d\u5668\u53d8\u91cf\u3001\u5806\u9650\u5236\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u9891\u7387\u63a7\u5236\u3001\u5feb\u901f\u5185\u8054\u5206\u914d\u5668\u7b49\u3002")),(0,l.kt)("hr",null),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"c-interface"}),"C++ interface"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'"gc_cpp.h" provides a base class gc:',(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Overrides new to be GC_MALLOC for subclasses of gc. "),(0,l.kt)("li",{parentName:"ul"},"Overrides ::new to be GC_MALLOC_UNCOLLECTABLE. "),(0,l.kt)("li",{parentName:"ul"},"Provide gc_cleanup class which registers destructor as finalizer. "),(0,l.kt)("li",{parentName:"ul"},"Built by Detlefs, Hull, based on Ellis, Detlefs work. "),(0,l.kt)("li",{parentName:"ul"},"..."))),(0,l.kt)("li",{parentName:"ul"},'"gc_allocator.h" defines STL allocators:',(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"gc_allocator "),(0,l.kt)("li",{parentName:"ul"},"traceable_allocator"))),(0,l.kt)("li",{parentName:"ul"},"Particularly gc_cpp.h is annoyingly brittle.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Perhaps more so than some of the gross hacks we'll hint at later."),(0,l.kt)("li",{parentName:"ul"},"Replacing global operator new seems problematic for many compilers.")))),(0,l.kt)("h3",n({},{id:"c\u63a5\u53e3"}),(0,l.kt)("inlineCode",{parentName:"h3"},"C++"),"\u63a5\u53e3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'"',(0,l.kt)("inlineCode",{parentName:"li"},"gc_cpp.h"),'"\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u7c7b',(0,l.kt)("inlineCode",{parentName:"li"},"gc"),"\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"gc")," \u7684\u5b50\u7c7b\u8986\u76d6 ",(0,l.kt)("inlineCode",{parentName:"li"},"new")," \u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_MALLOC"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c06 ",(0,l.kt)("inlineCode",{parentName:"li"},"::new")," \u8986\u76d6\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_MALLOC_UNCOLLECTABLE"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u63d0\u4f9b\u5c06\u6790\u6784\u51fd\u6570\u6ce8\u518c\u4e3a\u7ec8\u7ed3\u5668\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"gc_cleanup")," \u7c7b\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Detlefs")," \u7531\u8d6b\u5c14\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"Detlefs")," \u5efa\u9020\uff0c\u57fa\u4e8e ",(0,l.kt)("inlineCode",{parentName:"li"},"Ellis"),"\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"Detlefs")," \u5de5\u4f5c\u3002"),(0,l.kt)("li",{parentName:"ul"},"..."))),(0,l.kt)("li",{parentName:"ul"},'"',(0,l.kt)("inlineCode",{parentName:"li"},"gc_allocator.h"),'"\u5b9a\u4e49',(0,l.kt)("inlineCode",{parentName:"li"},"STL"),"\u5206\u914d\u5668\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gc_allocator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"traceable_allocator"),"(\u53ef\u8ffd\u8e2a\u5206\u914d\u5668)"))),(0,l.kt)("li",{parentName:"ul"},"\u5c24\u5176\u662f",(0,l.kt)("inlineCode",{parentName:"li"},"gc_cpp.h"),"\u975e\u5e38\u8106\u5f31\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e5f\u8bb8\u6bd4\u6211\u4eec\u7a0d\u540e\u4f1a\u6697\u793a\u7684\u4e00\u4e9b\u4e25\u91cd\u7684\u9ed1\u5ba2\u653b\u51fb\u66f4\u91cd\u8981\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u8bb8\u591a\u7f16\u8bd1\u5668\u6765\u8bf4\uff0c\u66ff\u6362\u5168\u5c40\u8fd0\u7b97\u7b26",(0,l.kt)("inlineCode",{parentName:"li"},"new"),"\u4f3c\u4e4e\u6709\u95ee\u9898\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"environment-variables"}),"Environment variables"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collector can be influenced by various environment variables:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"GC_INITIAL_HEAP_SIZE"),(0,l.kt)("li",{parentName:"ul"},"GC_MAXIMUM_HEAP_SIZE"),(0,l.kt)("li",{parentName:"ul"},"GC_PRINT_STATS"),(0,l.kt)("li",{parentName:"ul"},"GC_DUMP_REGULARLY"),(0,l.kt)("li",{parentName:"ul"},"GC_ENABLE_INCREMENTAL (caution!)"),(0,l.kt)("li",{parentName:"ul"},"GC_PAUSE_TIME_TARGET"),(0,l.kt)("li",{parentName:"ul"},"GC_DON'T_GC"),(0,l.kt)("li",{parentName:"ul"},"GC_IGNORE_GCJ_INFO ignore compiler-provided pointer location information."),(0,l.kt)("li",{parentName:"ul"},"GC_MARKERS Set the number of GC threads (where supported)."),(0,l.kt)("li",{parentName:"ul"},"...")))),(0,l.kt)("h3",n({},{id:"\u73af\u5883\u53d8\u91cf"}),"\u73af\u5883\u53d8\u91cf"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u56de\u6536\u5668\u53ef\u80fd\u4f1a\u53d7\u5230\u5404\u79cd\u73af\u5883\u53d8\u91cf\u7684\u5f71\u54cd:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_INITIAL_HEAP_SIZE")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_MAXIMUM_HEAP_SIZE")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_PRINT_STATS")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_DUMP_REGULARLY")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_ENABLE_INCREMENTAL")," (\u5c0f\u5fc3\u4f7f\u7528!)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_PAUSE_TIME_TARGET")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_DON'T_GC")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_IGNORE_GCJ_INFO")," ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5ffd\u7565\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u6307\u9488\u4f4d\u7f6e\u4fe1\u606f\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_MARKERS")," ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u7ebf\u7a0b\u7684\u6570\u91cf\uff08\u5982\u679c\u652f\u6301\uff09\u3002"))),(0,l.kt)("li",{parentName:"ul"},"...")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"how-does-it-work"}),"How does it work?"),(0,l.kt)("p",null,"Occasionally (when we run out of memory?):"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Mark all objects referenced directly by pointer variables (roots)"),(0,l.kt)("li",{parentName:"ul"},"Repeatedly:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Mark objects directly reachable from newly marked objects."))),(0,l.kt)("li",{parentName:"ul"},"Finally identify unmarked objects (sweep)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"E.g. put them in free lists."),(0,l.kt)("li",{parentName:"ul"},"Reuse to satisfy allocation requests."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Objects are not moved."))),(0,l.kt)("h3",n({},{id:"\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684"}),"\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f"),(0,l.kt)("p",null,"\u5076\u5c14\uff08\u5f53\u6211\u4eec\u7528\u5b8c\u5185\u5b58\u65f6\uff1f\uff09\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u6307\u9488\u53d8\u91cf(",(0,l.kt)("inlineCode",{parentName:"li"},"roots set"),")\u80fd\u76f4\u63a5\u5f15\u7528\u5230\u7684\u6240\u6709\u5bf9\u8c61"),(0,l.kt)("li",{parentName:"ul"},"\u91cd\u590d\u5730\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u53ef\u4ece\u65b0\u6807\u8bb0\u7684\u5bf9\u8c61\u76f4\u63a5\u53ef\u8fbe\u7684\u5bf9\u8c61\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u6700\u540e\u8bc6\u522b\u672a\u6807\u8bb0\u7684\u5bf9\u8c61\uff08\u6e05\u9664\uff09",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4f8b\u5982: \u628a\u4ed6\u4eec\u653e\u5728",(0,l.kt)("inlineCode",{parentName:"li"},"free list"),"\u4e0a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u91cd\u7528\u4ee5\u6ee1\u8db3\u5206\u914d\u5185\u5b58\u8bf7\u6c42\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5bf9\u8c61\u4e0d\u4f1a\u79fb\u52a8\u3002"))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"marksweep-illustration"}),"Mark/sweep illustration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u7b2c\u4e00\u6b65(\u6807\u8bb0):\n",(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409213248.png",alt:null})))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u7b2c\u4e8c\u90e8(\u6e05\u9664)\n",(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409213447.png",alt:null}))))),(0,l.kt)("h3",n({},{id:"\u6807\u8bb0\u6e05\u9664-\u63d2\u753b"}),"\u6807\u8bb0/\u6e05\u9664 \u63d2\u753b"),(0,l.kt)("p",null,"\u4ece",(0,l.kt)("inlineCode",{parentName:"p"},"Stack"),'(\u6839)\u51fa\u53d1, \u4f9d\u6b21\u6807\u8bb0(\u7eff\u8272\u5bf9\u52fe)\u6807\u8bb0\u53ef\u8fbe\u7684 \u5806 \u7684\u5185\u5b58\u7a7a\u95f4. \u7136\u540e"\u6e05\u9664"\u672a\u88ab\u6807\u8bb0\u7684.'),(0,l.kt)("p",null,"\u4ece\u56fe\u793a\u6765\u7406\u89e3:\n\u8fd9\u91cc\u8fd9\u4e2a\u6e05\u9664\u5176\u5b9e\u86ee\u7b80\u5355\u7684, \u53ea\u662f\u5355\u7eaf\u653e\u5230\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"free list")," \u91cc\u9762, \u7b49\u8981\u6709\u9700\u8981\u7684\u65f6\u5019\u88ab\u91cd\u65b0\u5206\u914d."),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"easy-performance-issue"}),"Easy performance issue"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If heap is nearly full, we collect too frequently.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"May collect once per allocation. "),(0,l.kt)("li",{parentName:"ul"},"We look at all reachable objects each time -> expensive"))),(0,l.kt)("li",{parentName:"ul"},"Solution:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Always make sure that heap is e.g. 1.5 times larger than necessary."),(0,l.kt)("li",{parentName:"ul"},"Each cycle, allocate n/3 bytes, trace 2n/3 bytes."),(0,l.kt)("li",{parentName:"ul"},"Trace 2 bytes per byte allocated.\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/live-data.png",alt:null})))))),(0,l.kt)("ol",n({},{start:2}),(0,l.kt)("li",{parentName:"ol"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Performance is often dominated by memory accesses."),(0,l.kt)("li",{parentName:"ul"},"Each reclaimed object is touched twice per cycle.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Once during sweep phase."),(0,l.kt)("li",{parentName:"ul"},"Once during allocation."))),(0,l.kt)("li",{parentName:"ul"},"Solution:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Sweep a little bit at a time before allocation."),(0,l.kt)("li",{parentName:"ul"},"Try to keep object in cache."),(0,l.kt)("li",{parentName:"ul"},'"Sweep phase" is a misnomer.'),(0,l.kt)("li",{parentName:"ul"},"Imposes constraints on GC data structure.")))),(0,l.kt)("h3",n({},{id:"\u7b80\u5355\u6027\u80fd\u95ee\u9898"}),"\u7b80\u5355\u6027\u80fd\u95ee\u9898"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u5806\u5feb\u6ee1\u4e86\uff0c\u6211\u4eec\u5c31\u56de\u6536\u5730\u66f4\u9891\u7e41\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u6b21\u5206\u914d\u53ef\u56de\u6536\u4e00\u6b21\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u6bcf\u6b21\u90fd\u4f1a\u67e5\u770b\u6240\u6709\u53ef\u8fbe\u7684\u5bf9\u8c61 -> \u6602\u8d35"))),(0,l.kt)("li",{parentName:"ul"},"\u89e3\u51b3\u65b9\u6848\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u59cb\u7ec8\u786e\u4fdd \u5806 \u6bd4\u9700\u8981\u7684\u59271.5\u500d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5468\u671f\uff0c\u5206\u914d ",(0,l.kt)("inlineCode",{parentName:"li"},"n/3")," \u5b57\u8282\u65f6\uff0c\u8ddf\u8e2a ",(0,l.kt)("inlineCode",{parentName:"li"},"2n/3")," \u5b57\u8282\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5728\u5206\u914d\u5230\u7684\u5185\u5b58\u7a7a\u95f4\u91cc\u8ddf\u8e2a\u524d2\u4e2a\u5b57\u8282\u3002\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/live-data.png",alt:null})))))),(0,l.kt)("ol",n({},{start:2}),(0,l.kt)("li",{parentName:"ol"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6027\u80fd\u901a\u5e38\u7531\u5185\u5b58\u8bbf\u95ee\u51b3\u5b9a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u56de\u6536\u7684\u5bf9\u8c61\u6bcf\u4e2a\u5468\u671f\u88ab\u89e6\u6478\u4e24\u6b21\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e00\u6b21\u5728\u6e05\u9664\u9636\u6bb5\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u6b21\u5728\u5206\u914d\u8fc7\u7a0b\u4e2d\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u89e3\u51b3\u65b9\u6848\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5206\u914d\u524d\u4e00\u6b21\u6e05\u9664\u4e00\u70b9\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c1d\u8bd5\u5c06\u5bf9\u8c61\u4fdd\u7559\u5728\u7f13\u5b58\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},'"\u6e05\u9664\u9636\u6bb5"\u7528\u8bcd\u4e0d\u5f53\u3002'),(0,l.kt)("li",{parentName:"ul"},"\u5bf9",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u6570\u636e\u7ed3\u6784\u65bd\u52a0\u7ea6\u675f\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"asymptotic-complexity-of-marksweep-vs-copying"}),"Asymptotic Complexity of MarkSweep vs. Copying"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Conventional view:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Copying: O(live_data_size)"),(0,l.kt)("li",{parentName:"ul"},"M/S:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Mark: O(live_data_size)"),(0,l.kt)("li",{parentName:"ul"},"Sweep: O(heap_size)"),(0,l.kt)("li",{parentName:"ul"},"Total: O(heap_size)"))),(0,l.kt)("li",{parentName:"ul"},"M/S more expensive (if heap_size >> live_data_size)"))),(0,l.kt)("li",{parentName:"ul"},"Alternate view:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Sweep doesn't count; part of allocation."),(0,l.kt)("li",{parentName:"ul"},"M/S can avoid touching pointer-free data (strings, bitmaps)"),(0,l.kt)("li",{parentName:"ul"},"M/S: O(pointer_containing_data)"),(0,l.kt)("li",{parentName:"ul"},"Copying more expensive",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"(if pointer_containing_data << live_data_size)")))))),(0,l.kt)("h3",n({},{id:"\u8fd0\u884c\u65f6\u95f4\u590d\u6742\u5ea6-ms-vs-copying\u5206\u6790"}),"\u8fd0\u884c\u65f6\u95f4\u590d\u6742\u5ea6 ",(0,l.kt)("inlineCode",{parentName:"h3"},"M&S")," vs ",(0,l.kt)("inlineCode",{parentName:"h3"},"Copying"),"\u5206\u6790."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f20\u7edf\u89c2\u70b9\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Copying")," \uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"O(live_data_size)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"M&S"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0: ",(0,l.kt)("inlineCode",{parentName:"li"},"O(live_data_size)")),(0,l.kt)("li",{parentName:"ul"},"\u626b\u63cf: ",(0,l.kt)("inlineCode",{parentName:"li"},"O(heap_size)")),(0,l.kt)("li",{parentName:"ul"},"\u603b\u8ba1: ",(0,l.kt)("inlineCode",{parentName:"li"},"O(heap_size)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"M&S")," \u590d\u6742\u5ea6\u66f4\u9ad8\u5f53\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"heap_size")," >> ",(0,l.kt)("inlineCode",{parentName:"li"},"live_data_size)")))),(0,l.kt)("li",{parentName:"ul"},"\u53e6\u4e00\u79cd\u89c2\u70b9\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6e05\u9664\u4e0d\u7b97\u6570\u5206\u914d\u7684\u4e00\u90e8\u5206\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"M&S"),"\u53ef\u4ee5\u907f\u514d\u63a5\u89e6\u65e0\u6307\u9488\u6570\u636e\uff08\u5b57\u7b26\u4e32\u3001\u4f4d\u56fe\uff09"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"M&S"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"O(pointer_containing_data)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Copying")," \u590d\u6742\u5ea6\u66f4\u9ad8\u5f53",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\uff08\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"li"},"pointer_containing_data")," << ",(0,l.kt)("inlineCode",{parentName:"li"},"live_data_size")," \uff09")))))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"implementation-details-overview"}),"Implementation details overview"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"General design issues:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The underlying allocator."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Pointer validity checks and mark bits.")),(0,l.kt)("li",{parentName:"ul"},"Partial pointer location information."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Locating potential roots.")),(0,l.kt)("li",{parentName:"ul"},"Mark algorithm and stack overflow."),(0,l.kt)("li",{parentName:"ul"},"Thread support."))),(0,l.kt)("li",{parentName:"ul"},"Enhancements:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},'Black-listing of "false pointers"')),(0,l.kt)("li",{parentName:"ul"},"Incremental/Concurrent/Generational GC."),(0,l.kt)("li",{parentName:"ul"},"Parallel marking."),(0,l.kt)("li",{parentName:"ul"},"Thread-local allocation."),(0,l.kt)("li",{parentName:"ul"},"Finalization."),(0,l.kt)("li",{parentName:"ul"},"Debug support.")))),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200001.png",alt:null}))),(0,l.kt)("h3",n({},{id:"\u5b9e\u73b0\u7ec6\u8282\u63cf\u8ff0"}),"\u5b9e\u73b0\u7ec6\u8282\u63cf\u8ff0"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e00\u822c\u8bbe\u8ba1\u95ee\u9898\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5e95\u5c42\u5206\u914d\u5668\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u6307\u9488\u6709\u6548\u6027\u68c0\u67e5\u5e76\u6807\u8bb0\u4f4d\u3002")),(0,l.kt)("li",{parentName:"ul"},"\u90e8\u5206\u6307\u9488\u4f4d\u7f6e\u4fe1\u606f\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5bfb\u627e\u6f5c\u5728\u7684\u6839",(0,l.kt)("inlineCode",{parentName:"strong"},"roots set"),"\u3002")),(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u7b97\u6cd5\u548c\u5806\u6808\u6ea2\u51fa\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7ebf\u7a0b\u652f\u6301\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u589e\u5f3a\u529f\u80fd\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},'"\u9519\u8bef\u6307\u9488"\u9ed1\u540d\u5355')),(0,l.kt)("li",{parentName:"ul"},"\u589e\u91cf/\u5e76\u53d1/\u5206\u4ee3",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5e73\u884c\u6807\u8bb0\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7ebf\u7a0b\u672c\u5730\u5206\u914d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7ec8\u7ed3\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u8c03\u8bd5\u652f\u6301\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"allocator-design"}),"Allocator design"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Segregate objects by size, pointer contents..."),(0,l.kt)("li",{parentName:"ul"},'Each "page" contains objects of a single size.'),(0,l.kt)("li",{parentName:"ul"},"Separate free lists for each small object size."),(0,l.kt)("li",{parentName:"ul"},"Large object allocator for pages, large objects."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Characteristics:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"No per object space overhead (except mark bits)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Small object fragmentation overhead factor:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"< #size classes = O(log(largest_sz/smallest_sz))")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Asymptotically optimal (Robson 71)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Fast allocation.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Partial sweeps are possible.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Can avoid touching pointer-free pages."))))),(0,l.kt)("h3",n({},{id:"\u5206\u914d\u5668\u8bbe\u8ba1"}),"\u5206\u914d\u5668\u8bbe\u8ba1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6309\u5927\u5c0f\u3001\u6307\u9488\u5185\u5bb9\u5206\u9694\u5bf9\u8c61..."),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a",(0,l.kt)("inlineCode",{parentName:"li"},'"page"'),"\u5305\u542b\u5355\u4e2a\u5927\u5c0f\u7684\u5bf9\u8c61\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5c0f\u5bf9\u8c61\u5927\u5c0f\u90fd\u6709\u5355\u72ec\u5730",(0,l.kt)("inlineCode",{parentName:"li"},"free list"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7528\u4e8e",(0,l.kt)("inlineCode",{parentName:"li"},"page"),"\u3001\u5927\u5bf9\u8c61\u7684\u5927\u5bf9\u8c61\u5206\u914d\u5668\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u7279\u70b9"),"\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u65e0\u6bcf\u5bf9\u8c61\u7a7a\u95f4\u5f00\u9500\uff08\u6807\u8bb0\u4f4d\u9664\u5916\uff09")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5c0f\u5bf9\u8c61\u788e\u7247\u5f00\u9500\u7cfb\u6570\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"O(log(largest_sz/smallest_sz))"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u6e10\u8fd1\u6700\u4f18\uff08",(0,l.kt)("inlineCode",{parentName:"strong"},"Robson 71"),"\uff09")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5feb\u901f\u5206\u914d"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u90e8\u5206\u626b\u63cf\u662f\u53ef\u80fd\u7684\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u53ef\u4ee5\u907f\u514d\u89e6\u6478\u65e0\u6307\u9488",(0,l.kt)("inlineCode",{parentName:"strong"},"page"),"\u3002"))))),(0,l.kt)("p",null,(0,l.kt)("a",n({parentName:"p"},{href:"https://www.bilibili.com/video/BV1r44y1z7X3?p=2&t=35m05s"}),"\u9ad8\u5ddd\u8001\u5e08\u8bb2\u8d1d\u6bcd\u7684\u5185\u5b58\u8bbe\u8ba1")),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220410094632.png",alt:null}))),(0,l.kt)("p",null,"\u8d1d\u6bcd\u5728\u5185\u5b58\u7ba1\u7406\u7684\u65f6\u5019\uff0c\u662f\u4e00\u4e2a\u4e24\u7ea7\u7684\u7ba1\u7406\uff1a\u7b2c\u4e00\u7ea7\uff0cKind\u7c7b\u578b\uff0c\u8d1d\u6bcd\u5728\u5206\u914d\u7684\u65f6\u5019\u4f1a\u5206\u914d\u51fa\u5f88\u591a\u79cd\u4e0d\u540c\u7684\u7c7b\u578b\u3002"),(0,l.kt)("p",null,"\u5e38\u89c1\u7684\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"PTRFREE"),"\uff08\u65e0\u6307\u9488\u7c7b\u578b\uff09\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"Normal"),"\uff08\u6bd4\u8f83\u4e00\u822c\u7684\u7c7b\u578b\uff09\uff0c\u8fd8\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"Uncollectable"),"\uff08\u4e0d\u53ef\u56de\u6536\u7c7b\u578b\uff09\uff0c\u4e00\u822c\u662f\u8d1d\u6bcd\u81ea\u5df1\u8981\u7528\u7684\u4e00\u5757\u5185\u5b58\u4f1a\u5206\u914d\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"Uncollectable"),"\u3002"),(0,l.kt)("p",null,"\u6bcf\u4e00\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5728\u5217\u8868\u4e0b\u9762\u5206\u522b\u4f1a\u6302\u4e00\u4e2a\u4e8c\u7ea7\u5217\u8868\uff0c\u53bb\u6807\u660e\u5f53\u524d\u8fd9\u4e00\u5757\u5185\u5b58\u5757\u4e0b\u9762\u7684\u5927\u5c0f\uff0c\u5728\u7b2c\u4e8c\u5c42\u7684\u4e0b\u9762\u6302\u7740\u4e00\u4e2a\u94fe\u8868\uff0c\u8fd9\u4e2a\u94fe\u8868\u91cc\u8fb9\u6bcf\u4e00\u5757\u5c31\u662f\u5bf9\u5e94\u4e0a\u9762\u5927\u5c0f\u7684\u4e00\u5c0f\u5757\u5185\u5b58\u3002"),(0,l.kt)("p",null,"\u56fe\u4e2d\u4e24\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"Block0")," \u662f\u7269\u7406\u8fde\u63a5\u7684\uff0c\u8fd9\u4e24\u5757\u7269\u7406\u5730\u5740\u662f\u8fde\u7eed\u7684\uff0c\u5047\u5982\u73b0\u5728\u8981\u56de\u6536\u4e24\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"Block0")," \uff0c\u5f53\u8fd9\u4e24\u5757\u5185\u5b58\u90fd\u88ab\u91ca\u653e\u6389\u7684\u65f6\u5019\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"Unity"),"\u4f1a\u5c1d\u8bd5\u53bb\u627e\u4e24\u5757\uff0c\u6bd4\u5982\u8bf4\u91ca\u653e\u7b2c\u4e00\u5757\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"Unity"),"\u53d1\u73b0\u540e\u8fb9\u7684\u7269\u7406\u5185\u5b58\u4e5f\u662f\u88ab\u91ca\u653e\u6389\u7684\u3002"),(0,l.kt)("p",null,"\u4fbf\u628a\u4e24\u5757\u5408\u5e76\u8d77\u6765\uff0c\u8ba9\u6307\u9488\u76f4\u63a5\u6302\u5230\u66f4\u5927\u7684\u5730\u65b9\u53bb\uff0c\u4ece\u800c\u5c3d\u91cf\u51cf\u5c11\u6574\u4f53\u5185\u5b58\u788e\u7247\u7684\u53d1\u751f\u3002\u8fd9\u4e2a\u7b56\u7565\u80fd\u7406\u89e3\u4e3a\u5c3d\u91cf\u4f1a\u628a\u7a7a\u95f2\u51fa\u6765\u7684\u5185\u5b58\u5408\u5e76\u6210\u4e00\u4e2a\u8f83\u5927\u7684\u5185\u5b58\u5757\uff0c\u540c\u65f6\u5728\u4ee5\u79fb\u52a8\u6307\u9488\u7684\u65b9\u5f0f\u3002"),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"heap-layout"}),"Heap layout"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200042.png",alt:null}))),(0,l.kt)("h3",n({},{id:"\u5806\u5e03\u5c40"}),"\u5806\u5e03\u5c40"),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"meta-data"}),"Meta-data"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Need mark bit for each object."),(0,l.kt)("li",{parentName:"ul"},"Information for pointer validity & object size, etc."),(0,l.kt)("li",{parentName:"ul"},"Support discontiguous heaps"),(0,l.kt)("li",{parentName:"ul"},"Options for mark bits:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"In object:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Objects: must be aligned.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Stealing a bit may require a word.")," "))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"At beginning of each block:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"All mark bits are mapped to few cache lines.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Must touch pages with pointer-free objects.")))),(0,l.kt)("li",{parentName:"ul"},"In separate data structure.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"More instructions for each access."),(0,l.kt)("li",{parentName:"ul"},"Pointer-free pages are not touched, fewer cache issues.")))))),(0,l.kt)("h3",n({},{id:"\u5143\u6570\u636e"}),"\u5143\u6570\u636e"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u9700\u8981\u6807\u8bb0\u4f4d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6307\u9488\u6709\u6548\u6027\u548c\u5bf9\u8c61\u5927\u5c0f\u7b49\u4fe1\u606f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301\u4e0d\u8fde\u7eed\u5806"),(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u4f4d\u7684\u9009\u9879\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"\u5728\u5bf9\u8c61\u4e2d\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"\u5bf9\u8c61\uff1a\u5fc5\u987b\u5bf9\u9f50\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"\u7a83\u53d6\u4e00\u4e2a\u5b57\u8282\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u5355\u8bcd\u3002")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"\u5728\u6bcf\u4e2a\u5757\u7684\u5f00\u5934\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"\u6240\u6709\u6807\u8bb0\u4f4d\u90fd\u6620\u5c04\u5230\u51e0\u4e2a\u9ad8\u901f\u7f13\u5b58\u884c\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"\u5fc5\u987b\u4f7f\u7528\u65e0\u6307\u9488\u5bf9\u8c61\u89e6\u6478",(0,l.kt)("inlineCode",{parentName:"em"},"page"),"\u3002")))),(0,l.kt)("li",{parentName:"ul"},"\u5728\u5355\u72ec\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u6b21\u8bbf\u95ee\u90fd\u6709\u66f4\u591a\u8bf4\u660e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u65e0\u6307\u9488",(0,l.kt)("inlineCode",{parentName:"li"},"page"),"\u4e0d\u4f1a\u88ab\u89e6\u78b0\uff0c\u7f13\u5b58\u95ee\u9898\u66f4\u5c11\u3002")))))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"meta-data-lookup"}),"Meta-data lookup"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200112.png",alt:null}))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Page descriptor"),": \u9875\u9762\u63cf\u8ff0\u7b26"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Mark bits"),": \u6807\u8bb0\u4f4d"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Offset Map(later)"),": \u504f\u79fb\u8868\uff08\u5ef6\u8fdf\uff09 ")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"pointer-validity-check"}),"Pointer validity check"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Get page descriptor. Valid heap page?",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"About three memory references.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Simple top level hashing scheme for 64-bit addresses."))),(0,l.kt)("li",{parentName:"ul"},"Two with a small cache."))),(0,l.kt)("li",{parentName:"ul"},"If not first page of object, adjust."),(0,l.kt)("li",{parentName:"ul"},"Valid offset in valid object?",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Remainder computation on offset in page gives object start."),(0,l.kt)("li",{parentName:"ul"},'Remainder can be looked up in table of "valid offsets".'),(0,l.kt)("li",{parentName:"ul"},"Allows pointers to only certain offsets in object to be considered valid. Check is constant time."),(0,l.kt)("li",{parentName:"ul"},"Small constant number of memory references.")))),(0,l.kt)("h3",n({},{id:"\u6307\u9488\u6709\u6548\u6027\u68c0\u67e5"}),"\u6307\u9488\u6709\u6548\u6027\u68c0\u67e5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u83b7\u53d6\u9875\u9762\u63cf\u8ff0\u7b26\u3002\u6709\u6548\u7684\u5806",(0,l.kt)("inlineCode",{parentName:"li"},"page"),"\uff1f",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5927\u7ea6\u4e09\u6b21\u5185\u5b58\u5f15\u7528\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"64\u4f4d\u5730\u5740\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u9876\u5c42\u54c8\u5e0c\u65b9\u6848\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u4e24\u4e2a\u5e26\u6709\u5c0f\u7f13\u5b58\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u4e0d\u662f\u5bf9\u8c61\u7684\u7b2c\u4e00",(0,l.kt)("inlineCode",{parentName:"li"},"page"),"\uff0c\u8bf7\u8c03\u6574\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u6548\u5bf9\u8c61\u4e2d\u7684\u6709\u6548\u504f\u79fb\u91cf\uff1f",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u9875\u4e2d\u504f\u79fb\u91cf\u7684\u4f59\u6570\u8ba1\u7b97\u4f7f\u5bf9\u8c61\u5f00\u59cb\u3002"),(0,l.kt)("li",{parentName:"ul"},'\u5269\u4f59\u90e8\u5206\u53ef\u5728"\u6709\u6548\u504f\u79fb"\u8868\u4e2d\u67e5\u627e\u3002'),(0,l.kt)("li",{parentName:"ul"},"\u53ea\u5141\u8bb8\u6307\u5411\u5bf9\u8c61\u4e2d\u67d0\u4e9b\u504f\u79fb\u91cf\u7684\u6307\u9488\u88ab\u89c6\u4e3a\u6709\u6548\u3002\u68c0\u67e5\u662f\u56fa\u5b9a\u65f6\u95f4\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c11\u91cf\u6052\u5b9a\u6570\u91cf\u7684\u5185\u5b58\u5f15\u7528\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"partial-pointer-location-type-information"}),"Partial pointer location (type) information."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"It's often easy to determine location of pointers in heap objects (e.g. gcj (Java), Mono (.Net))."),(0,l.kt)("li",{parentName:"ul"},"Collector provides different allocation calls to communicate this."),(0,l.kt)("li",{parentName:"ul"},"Objects are segregated both by size and kind."),(0,l.kt)("li",{parentName:"ul"},"Each kind has associated object descriptor:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"First n fields are pointers."),(0,l.kt)("li",{parentName:"ul"},"30- or 62-bit bitmap identifies pointer locations."),(0,l.kt)("li",{parentName:"ul"},"Client specified mark procedure."),(0,l.kt)("li",{parentName:"ul"},"Indirect: descriptor is in object or vtable.")))),(0,l.kt)("h3",n({},{id:"\u90e8\u5206\u6307\u9488\u4f4d\u7f6e\u7c7b\u578b\u4fe1\u606f"}),"\u90e8\u5206\u6307\u9488\u4f4d\u7f6e\uff08\u7c7b\u578b\uff09\u4fe1\u606f\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u786e\u5b9a\u5806\u5bf9\u8c61\u4e2d\u6307\u9488\u7684\u4f4d\u7f6e\u901a\u5e38\u5f88\u5bb9\u6613\uff08\u4f8b\u5982",(0,l.kt)("inlineCode",{parentName:"li"},"GCJ\uff08Java\uff09"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Mono\uff08.Net\uff09"),"\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u56de\u6536\u5668\u63d0\u4f9b\u4e0d\u540c\u7684\u5206\u914d\u8c03\u7528\u6765\u8fdb\u884c\u901a\u4fe1\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u8c61\u662f\u6309\u5927\u5c0f\u548c\u79cd\u7c7b\u5206\u5f00\u7684\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u5173\u8054\u7684\u5bf9\u8c61\u63cf\u8ff0\u7b26\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u524d ",(0,l.kt)("inlineCode",{parentName:"li"},"n")," \u4e2a\u5b57\u6bb5\u662f\u6307\u9488\u3002"),(0,l.kt)("li",{parentName:"ul"},"30\u4f4d\u621662\u4f4d\u4f4d\u56fe\u6807\u8bc6\u6307\u9488\u4f4d\u7f6e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5ba2\u6237\u6307\u5b9a\u7684\u6807\u8bb0\u7a0b\u5e8f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u95f4\u63a5\uff1a\u63cf\u8ff0\u7b26\u4f4d\u4e8e\u5bf9\u8c61\u6216",(0,l.kt)("inlineCode",{parentName:"li"},"vtable"),"\u4e2d\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"locating-roots"}),"Locating roots"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"By default roots consist of:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Registers"),(0,l.kt)("li",{parentName:"ul"},"Runtime stack(s)"),(0,l.kt)("li",{parentName:"ul"},"Statically allocated data regions",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Main program + dynamic libraries"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"How do we get their contents/location?"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Registers: abuse setjmp, __builtin_unwind_init, ...")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Runtime stack(s): you don't really want to know."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Need consistent caller-save reg. snapshot")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Static data segments: you don't want to know that either.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Very platform dependent"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"But you only have to do it once per platform."))))))),(0,l.kt)("h3",n({},{id:"\u5b9a\u4f4d\u6839"}),"\u5b9a\u4f4d\u6839"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6839",(0,l.kt)("inlineCode",{parentName:"li"},"roots set"),"\u5305\u62ec\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bc4\u5b58\u5668"),(0,l.kt)("li",{parentName:"ul"},"\u8fd0\u884c\u65f6\u6808"),(0,l.kt)("li",{parentName:"ul"},"\u9759\u6001\u5206\u914d\u7684\u6570\u636e\u533a\u57df",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e3b\u7a0b\u5e8f + \u52a8\u6001\u5e93"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u6211\u4eec\u5982\u4f55\u5f97\u5230\u4ed6\u4eec\u7684\u4f4d\u7f6e\uff1f"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5bc4\u5b58\u5668\uff1a\u6ee5\u7528",(0,l.kt)("inlineCode",{parentName:"strong"},"setjmp")," ",(0,l.kt)("inlineCode",{parentName:"strong"},"__builtin_unwind_init"),"...")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u8fd0\u884c\u65f6\u6808\uff1a\u4f60\u5e76\u4e0d\u60f3\u77e5\u9053\u3002"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u9700\u8981\u4e00\u4e2a\u56fa\u5b9a\u7684\u8c03\u7528\u8005\u6765\u4fdd\u5b58",(0,l.kt)("inlineCode",{parentName:"strong"},"reg."),"\u5feb\u7167")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u9759\u6001\u6570\u636e\u6bb5\uff1a\u4f60\u4e5f\u4e0d\u60f3\u77e5\u9053\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u975e\u5e38\u4f9d\u8d56\u5e73\u53f0"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u4f46\u6bcf\u4e2a\u5e73\u53f0\u60a8\u53ea\u9700\u6267\u884c\u4e00\u6b21\u3002"))))))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"basic-mark-algorithm"}),"Basic mark algorithm"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Maintain explicit mark stack of pairs:\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200205.png",alt:null}))),(0,l.kt)("li",{parentName:"ul"},"Initially:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"For each individual root, push object."),(0,l.kt)("li",{parentName:"ul"},"For each root range, push range."))),(0,l.kt)("li",{parentName:"ul"},"Then repeatedly:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Pop (addr, descr) pair from stack."),(0,l.kt)("li",{parentName:"ul"},"For each possible pointer in memory described by pair:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Check pointer validity. If valid and unmarked:"),(0,l.kt)("li",{parentName:"ul"},"Set mark bit for target. (Already have page descriptor.)"),(0,l.kt)("li",{parentName:"ul"},"Push object address and descriptor (from page descriptor)")))))),(0,l.kt)("h3",n({},{id:"\u57fa\u672c\u6807\u8bb0\u7b97\u6cd5"}),"\u57fa\u672c\u6807\u8bb0\u7b97\u6cd5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7ef4\u62a4\u663e\u5f0f\u6807\u8bb0\u6808\u5bf9(",(0,l.kt)("inlineCode",{parentName:"li"},"key"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"value"),")\uff1a\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200205.png",alt:null}))),(0,l.kt)("li",{parentName:"ul"},"\u6700\u521d\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u72ec\u7684\u6839(",(0,l.kt)("inlineCode",{parentName:"li"},"roots set"),")\uff0c\u63a8\u5165\u5bf9\u8c61\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u6bcf\u4e2a\u6839\u8303\u56f4\uff0c\u63a8\u5165\u6574\u4e2a\u6839\u8303\u56f4\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u7136\u540e\u53cd\u590d\u8bf4\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4ece\u6808\u4e2d\u5f39\u51fa\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"addr"),"\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"descr"),"\uff09\u5bf9\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u7531 ",(0,l.kt)("inlineCode",{parentName:"li"},"pair")," \u63cf\u8ff0\u7684\u5185\u5b58\u4e2d\u6bcf\u4e2a\u53ef\u80fd\u7684\u6307\u9488\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u3002\u5982\u679c\u6709\u6548\u4e14\u672a\u6807\u8bb0\uff1a"),(0,l.kt)("li",{parentName:"ul"},"\u4e3a\u76ee\u6807\u8bbe\u7f6e\u6807\u8bb0\u4f4d\u3002\uff08\u5df2\u7ecf\u6709\u9875\u9762\u63cf\u8ff0\u7b26\u3002\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u63a8\u5165\u5bf9\u8c61\u5730\u5740\u548c\u63cf\u8ff0\u7b26\uff08\u4ece\u9875\u9762\u63cf\u8ff0\u7b26\uff09")))))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"marker-refinements"}),"Marker refinements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Tune as much as possible.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"This is where the GC spends its time."))),(0,l.kt)("li",{parentName:"ul"},"It's the memory accesses that matter.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Prefetch object as we push its descriptor on stack."),(0,l.kt)("li",{parentName:"ul"},"May save 1/3 of mark time."))),(0,l.kt)("li",{parentName:"ul"},"Range check possible pointers for plausibility first.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Eliminates almost all non-pointers."))),(0,l.kt)("li",{parentName:"ul"},"Minor benefit from keeping cache of recently looked up block descriptors.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Probably more important for 64 bit platforms."),(0,l.kt)("li",{parentName:"ul"},"But uncached lookup is already fast.")))),(0,l.kt)("h3",n({},{id:"\u6807\u8bb0\u6539\u8fdb"}),"\u6807\u8bb0\u6539\u8fdb"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5c3d\u91cf\u8c03\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8fd9\u662f",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u82b1\u8d39\u65f6\u95f4\u7684\u5730\u65b9\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u91cd\u8981\u7684\u662f\u5185\u5b58\u8bbf\u95ee\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5f53\u6211\u4eec\u5c06\u5176\u63cf\u8ff0\u7b26\u538b\u5165\u5806\u65f6\u9884\u53d6\u5bf9\u8c61\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u8282\u7701 1/3 \u4e2a\u6807\u8bb0\u65f6\u95f4\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u8303\u56f4\u9996\u5148\u68c0\u67e5\u53ef\u80fd\u7684\u6307\u9488\u7684\u5408\u7406\u6027\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6d88\u9664\u4e86\u51e0\u4e4e\u6240\u6709\u7684\u975e\u6307\u9488\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u4fdd\u7559\u6700\u8fd1\u67e5\u627e\u7684\u5757\u63cf\u8ff0\u7b26\u7684\u7f13\u5b58\u5e26\u6765\u7684\u5c0f\u597d\u5904\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e64\u4f4d\u5e73\u53f0\u53ef\u80fd\u66f4\u91cd\u8981\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f46\u65e0\u7f13\u5b58\u67e5\u627e\u5df2\u7ecf\u5f88\u5feb\u4e86\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"the-marker-core-version-pre-70"}),"The marker core (version pre-7.0)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Retrieve mark descriptor from stack."),(0,l.kt)("li",{parentName:"ol"},'(Possibly retrieve "indirect" descriptor from object.)'),(0,l.kt)("li",{parentName:"ol"},"Look for pointers in object satisfying range check. Immediately prefetch at that address."),(0,l.kt)("li",{parentName:"ol"},"For each likely nested pointer, processing first one last:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Look up header in cache (2 memory references)."),(0,l.kt)("li",{parentName:"ul"},"Get offset from beginning of block."),(0,l.kt)("li",{parentName:"ul"},"Divide by object size to get object start, and displacement in object."),(0,l.kt)("li",{parentName:"ul"},"If displacement is nonzero, check table for validity."),(0,l.kt)("li",{parentName:"ul"},"Check mark bit in header."),(0,l.kt)("li",{parentName:"ul"},"If not set, set it, get descriptor from block header, push entry on mark stack.")))),(0,l.kt)("h3",n({},{id:"\u6807\u8bb0\u5668\u6838\u5fc370\u4e4b\u524d\u7684\u7248\u672c"}),"\u6807\u8bb0\u5668\u6838\u5fc3\uff087.0\u4e4b\u524d\u7684\u7248\u672c\uff09"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u4ece\u6808\u4e2d\u68c0\u7d22\u6807\u8bb0\u63cf\u8ff0\u7b26\u3002"),(0,l.kt)("li",{parentName:"ol"},'\uff08\u53ef\u80fd\u4ece\u5bf9\u8c61\u4e2d\u68c0\u7d22"\u95f4\u63a5"\u63cf\u8ff0\u7b26\u3002\uff09'),(0,l.kt)("li",{parentName:"ol"},"\u5728\u6ee1\u8db3\u8303\u56f4\u68c0\u67e5\u7684\u5bf9\u8c61\u4e2d\u5bfb\u627e\u6307\u9488\u3002\u7acb\u5373\u9884\u53d6\u8be5\u5730\u5740\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u80fd\u7684\u5d4c\u5957\u6307\u9488\uff0c\u6700\u540e\u5904\u7406\u7b2c\u4e00\u4e2a\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5728\u7f13\u5b58\u4e2d\u67e5\u627e\u6807\u5934\uff082\u4e2a\u5185\u5b58\u5f15\u7528\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4ece\u5757\u7684\u5f00\u5934\u83b7\u5f97\u504f\u79fb\u91cf\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9664\u4ee5\u5bf9\u8c61\u5927\u5c0f\u4ee5\u83b7\u5f97\u5bf9\u8c61\u5f00\u59cb\u548c\u5bf9\u8c61\u4e2d\u7684\u4f4d\u79fb\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u4f4d\u79fb\u4e0d\u4e3a\u96f6\uff0c\u68c0\u67e5\u8868\u7684\u6709\u6548\u6027\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u68c0\u67e5\u5934\u90e8\u7684\u6807\u8bb0\u4f4d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5219\u8bbe\u7f6e\u5b83\uff0c\u4ece\u5757\u5934\u83b7\u53d6\u63cf\u8ff0\u7b26\uff0c\u5c06\u6761\u76ee\u63a8\u5165\u6807\u8bb0\u6808\u4e0a\u3002")))),(0,l.kt)("p",null,"\u8fd9\u91cc\u5f88\u5927\u4e00\u4e2a\u7bc7\u5e45\u5728\u63cf\u5199\u6808. \u4f46\u63cf\u8ff0\u7684\u662f\u6807\u8bb0\u5668"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f\u5206\u914d\u5668\u7684\u76f8\u5173\u63cf\u8ff0, \u5408\u5e76\u53c2\u8003:"),(0,l.kt)("p",null,(0,l.kt)("a",n({parentName:"p"},{href:"https://www.bilibili.com/video/BV1r44y1z7X3?p=2&t=13m25s"}),"\u9ad8\u5ddd\u8001\u5e08\u8bb2\u6808\u5206\u914d\u5668")),(0,l.kt)("p",null,"\u6808\u5206\u914d\u5668\u6709\u4e09\u4e2a\u7279\u70b9:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7b2c\u4e00\u4e2a\u662f\u7279\u522b\u5730\u5feb\uff0c"),(0,l.kt)("li",{parentName:"ul"},"\u7b2c\u4e8c\u4e2a\u662f\u7279\u522b\u5730\u5c0f\uff0c"),(0,l.kt)("li",{parentName:"ul"},"\u7b2c\u4e09\u4e2a\u662f\u4e34\u65f6\uff0c")),(0,l.kt)("p",null,"\u5206\u914d\u5668\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u7528\u6765\u5206\u914d\u4e34\u65f6\u53d8\u91cf\u3002"),(0,l.kt)("p",null,"\u5f53\u8981\u53bb\u5206\u914d\u4e00\u5757\u5185\u5b58\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a ",(0,l.kt)("inlineCode",{parentName:"p"},"Unity")," \u5e2e\u5fd9\u5206\u914d\u4e86\u4e24\u5757\u5185\u5b58\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7b2c\u4e00\u5757\u662f",(0,l.kt)("inlineCode",{parentName:"li"},"header"),"\uff0c\u8bb0\u5f55\u4e86\u5f53\u524d\u8fd9\u4e00\u6b21\u5206\u914d\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u6bd4\u5982\uff1a\u67d0\u4e00\u5757\u5f53\u524d\u662f\u4e0d\u662f\u8981\u88ab\u5220\u6389\uff0c\u662f\u4e0d\u662f\u8fd8\u5728\u7528\uff1b\u771f\u6b63\u7ed9\u7528\u6237\u7684\u533a\u57df\u5927\u5c0f\uff1b\u6bd4\u5982\u8bf4\u5f53\u524d\u5757\u7684\u524d\u9762\u4e00\u5757\u662f\u8c01\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Header"),"\u4e0b\u9762\u624d\u662f\u7b2c\u4e8c\u5757\uff0c\u5373\u7528\u6237\u7684\u5206\u914d\u4f7f\u7528\u533a\u57df\u3002\u8fd9\u4e00\u6574\u5757\u5185\u5b58\u662f\u5728\u4e00\u5f00\u59cb\u5c31\u5df2\u7ecf\u9884\u5148\u5206\u914d\u597d\u7684\uff0c\u5728\u8fdb\u884c\u6808\u5206\u914d\u7684\u65f6\u5019\uff0c\u53ea\u662f\u5728\u4e0d\u505c\u7684\u8c03\u6574\u6808\u9876\u6307\u9488\uff0c\u4f9d\u6b21\u5411\u4e0b\u5206\u914d\uff0c\u6bcf\u4e00\u6b21\u53ea\u5728\u6808\u7684\u9876\u7aef\uff0c\u4e5f\u5c31\u662f\u8fd9\u5757\u5185\u5b58\u7684\u5c3e\u90e8\u518d\u53bb\u5206\u914d\u3002")),(0,l.kt)("p",null,"\u5f53\u6574\u4e2a\u9884\u5148\u5206\u914d\u6808\u5185\u5b58\u88ab\u6d88\u8017\u5e72\u51c0\u4e86\u4e4b\u540e\uff0c\u8fd8\u4f1a\u989d\u5916\u7684\u62d3\u5c55\u51fa\u4e00\u5757\u65b0\u7684\uff0c\u8fd9\u4e2a\u62d3\u5c55\u4e0d\u662f\u65e0\u9650\u7684\u800c\u662f\u6709\u4e00\u4e2a\u5927\u5c0f\u7684\u9650\u5236\u3002"),(0,l.kt)("p",null,"\u5728\u56de\u6536\u5185\u5b58\u65f6\uff0c\u9996\u5148\u628a\u8fd9\u5757\u5185\u5b58\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"deleted")," \u7684\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"Header")," \u91cc\u8fb9\u6807\u8bb0\u62101\uff0c\u8868\u793a\u8fd9\u4e00\u5757\u5185\u5b58\u5df2\u7ecf\u65e0\u7528\u4e86\uff0c\u518d\u6808\u9876\u6307\u9488\u56de\u5f39\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u662f\u975e\u5e38\u5feb\u7684\u3002\u5206\u914d\u548c\u56de\u6536\u4e00\u6837\u90fd\u662f\u632a\u6808\u6307\u9488\uff0c\u6240\u4ee5\u5206\u914d\u548c\u56de\u6536\u90fd\u975e\u5e38\u5730\u5feb\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u56de\u6536\u7684\u4f4d\u7f6e\u662f\u4e2d\u95f4\u800c\u4e0d\u662f\u5185\u5b58\u5757\u7684\u5c3e\u5df4\uff0c\u53ea\u9700\u8981\u628a\u5934\u7684\u8fd9\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"deleted")," \u7684\u6807\u8bb0\u62101\uff0c\u4e5f\u5c31\u662f\u6807\u8bb0\u4e0a\u5df2\u7ecf\u5220\u9664\u4e86\uff0c\u76f4\u5230\u5c3e\u5df4\u88ab\u56de\u6536\uff0c\u5728\u6808\u9876\u6307\u9488\u56de\u5f39\u7684\u65f6\u5019\uff0c\u4f1a\u53bb\u518d\u68c0\u67e5\u5f53\u524d\u8fd9\u4e00\u5757\u662f\u4e0d\u662f\u4e5f\u88ab\u5220\u9664\u4e86\uff0c"),(0,l.kt)("p",null,"\u5982\u679c\u662f\uff0c\u6808\u9876\u6307\u9488\u518d\u6b21\u5411\u4e0a\u79fb\u52a8\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u88ab\u5220\u9664\u7684\u5757\uff0c\u6216\u8005\u662f\u632a\u5230\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"Header"),"\uff0c\u8fd9\u6837\u5c31\u5bfc\u81f4\u5982\u679c\u5c3e\u5df4\u5904\u7684\u5185\u5b58\u4e00\u76f4\u6ca1\u6709\u91ca\u653e\uff0c\u4e2d\u95f4\u5df2\u7ecf\u91ca\u653e\u7684\u5185\u5b58\u5757\u65e0\u6cd5\u518d\u6b21\u4f7f\u7528\uff0c\u8fd9\u5c31\u662f\u6808\u5206\u914d\u5668\u7684\u4e00\u4e2a\u9650\u5236\uff0c\u5b83\u65e0\u6cd5\u5feb\u901f\u7acb\u523b\u53bb\u91cd\u7528\u5df2\u7ecf\u91ca\u653e\u7684\u5185\u5b58\uff0c\u5b83\u5fc5\u987b\u8981\u7b49\u6808\u9876\u88ab\u91ca\u653e\u7684\u65f6\u5019\uff0c\u624d\u80fd\u5411\u56de\u53bb\u5bfb\u627e\u8fd9\u4e9b\u8fde\u7eed\u5185\u5b58\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u5f53\u56e0\u4e3a\u4f60\u7684\u6570\u636e\u91cf\u592a\u5927\uff0c\u628a\u62e5\u6324\u7684\u4e34\u65f6\u5806\u6808\u6491\u7206\u4e86\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\uff1a")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u53bb\u51cf\u5c11\u4f60\u4eec\u6bcf\u4e00\u5e27\u7684\u6570\u636e\u91cf\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u901a\u8fc7Unity\u6e90\u7801\uff0c\u628a\u5806\u6808\u52a0\u5927\u4e00\u70b9\u3002")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"marker-performance-why-gc-needs-a-fast-multiplier"}),"Marker performance: Why GC needs a fast multiplier."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"On toy benchmark, small objects., 1x1.4GHz Itanium"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"500MB/sec (Peak mem. Bandwidth 6.4GB/sec.)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"About 90 cycles/object. (L3 cache miss ~200cycles)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"About 260MB/sec, 180 cycles/object on a 2GHz Xeon.")),(0,l.kt)("li",{parentName:"ul"},"Cache misses matter a lot."),(0,l.kt)("li",{parentName:"ul"},"Divisions are a problem.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Can easily multiply by reciprocal."),(0,l.kt)("li",{parentName:"ul"},"Integer multiply has around 15 cycles latency on IA64.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Similar on Pentium 4?"))),(0,l.kt)("li",{parentName:"ul"},"Very hard to hide latency."),(0,l.kt)("li",{parentName:"ul"},"Table lookup of remainder, mark bit per allocation granule (not object)\nwins (~20% on P4 Xeon)."))),(0,l.kt)("li",{parentName:"ul"},"Could we do multiple header lookups & divisions at once to hide latency? Maybe")),(0,l.kt)("h3",n({},{id:"\u6807\u8bb0\u5668\u6027\u80fd\u4e3a\u4ec0\u4e48-gc-\u9700\u8981\u5feb\u901f\u4e58\u6cd5\u5668"}),"\u6807\u8bb0\u5668\u6027\u80fd\uff1a\u4e3a\u4ec0\u4e48 ",(0,l.kt)("inlineCode",{parentName:"h3"},"GC")," \u9700\u8981\u5feb\u901f\u4e58\u6cd5\u5668"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5728\u73a9\u5177\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u5c0f\u5bf9\u8c61\uff0c",(0,l.kt)("inlineCode",{parentName:"strong"},"1x1.4GHz")," \u5b89\u817e"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"500MB/s"),"\uff08\u5cf0\u503c\u5185\u5b58\u3002\u5e26\u5bbd ",(0,l.kt)("inlineCode",{parentName:"strong"},"6.4GB/s"),"\u3002\uff09")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5927\u7ea6 90 \u4e2a\u5468\u671f/\u5bf9\u8c61\u3002\uff08",(0,l.kt)("inlineCode",{parentName:"strong"},"L3")," \u7f13\u5b58\u672a\u547d\u4e2d ",(0,l.kt)("inlineCode",{parentName:"strong"},"~200cycles"),"\uff09")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5728 ",(0,l.kt)("inlineCode",{parentName:"strong"},"2GHz Xeon")," \u4e0a\u5927\u7ea6 ",(0,l.kt)("inlineCode",{parentName:"strong"},"260MB/s"),"\uff0c180 \u4e2a\u5468\u671f/\u5bf9\u8c61\u3002")),(0,l.kt)("li",{parentName:"ul"},"\u7f13\u5b58\u672a\u547d\u4e2d\u5f88\u91cd\u8981\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5206\u5de5\u662f\u4e2a\u95ee\u9898\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e58\u4ee5\u5012\u6570\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6574\u6570\u4e58\u6cd5\u5728 ",(0,l.kt)("inlineCode",{parentName:"li"},"IA64")," \u4e0a\u6709\u5927\u7ea6 15 \u4e2a\u5468\u671f\u7684\u5ef6\u8fdf\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Pentium 4")," \u7c7b\u4f3c\u5417\uff1f"))),(0,l.kt)("li",{parentName:"ul"},"\u5f88\u96be\u9690\u85cf\u5ef6\u8fdf\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f59\u6570\u7684\u8868\u67e5\u627e\uff0c\u6bcf\u4e2a\u5206\u914d\u9897\u7c92\uff08\u975e\u5bf9\u8c61\uff09\u7684\u6807\u8bb0\u4f4d\u83b7\u80dc\uff08\u5728 ",(0,l.kt)("inlineCode",{parentName:"li"},"P4 Xeon")," \u4e0a\u7ea6\u4e3a 20%\uff09\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u8fdb\u884c\u591a\u4e2a\u6807\u5934\u67e5\u627e\u548c\u5212\u5206\u4ee5\u9690\u85cf\u5ef6\u8fdf\u5417\uff1f\u4e5f\u8bb8")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"what-if-the-mark-stack-overflows"}),"What if the mark stack overflows?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Likely as you approach memory limit.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Programmers expect to be able to recover from running out-of-memory")," ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"... although it is almost never 100% reliable, GC or not.")))),(0,l.kt)("li",{parentName:"ul"},"We",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Drop part of stack."),(0,l.kt)("li",{parentName:"ul"},"Set overflowed flag."))),(0,l.kt)("li",{parentName:"ul"},"If flag is set at end of mark phase:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Rescan heap. Look for marked -> unmarked pointers."),(0,l.kt)("li",{parentName:"ul"},"Mark again from such targets."),(0,l.kt)("li",{parentName:"ul"},"Repeat if necessary."),(0,l.kt)("li",{parentName:"ul"},"Grow mark stack if possible."))),(0,l.kt)("li",{parentName:"ul"},"Never push large number of entries without setting a mark bit.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Ensures forward progress.")))),(0,l.kt)("h3",n({},{id:"\u5982\u679c\u6807\u8bb0\u5806\u6808\u6ea2\u51fa"}),"\u5982\u679c\u6807\u8bb0\u5806\u6808\u6ea2\u51fa"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u53ef\u80fd\u5f53\u60a8\u63a5\u8fd1\u5185\u5b58\u9650\u5236\u65f6\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u7a0b\u5e8f\u5458\u5e0c\u671b\u80fd\u591f\u4ece\u5185\u5b58\u4e0d\u8db3\u4e2d\u6062\u590d"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u2026\u2026\u5c3d\u7ba1\u5b83\u51e0\u4e4e\u4ece\u6765\u90fd\u4e0d\u662f 100% \u53ef\u9760\u7684\uff0c\u4e0d\u7ba1 ",(0,l.kt)("inlineCode",{parentName:"strong"},"GC")," \u4e0e\u5426\u3002")))),(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5220\u9664\u5806\u6808\u7684\u4e00\u90e8\u5206\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u6ea2\u51fa\u6807\u5fd7\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u5728\u6807\u8bb0\u9636\u6bb5\u7ed3\u675f\u65f6\u8bbe\u7f6e\u4e86\u6807\u5fd7\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u91cd\u65b0\u626b\u63cf\u5806\u3002\u5bfb\u627e\u6807\u8bb0 -> \u672a\u6807\u8bb0\u7684\u6307\u9488\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4ece\u8fd9\u4e9b\u76ee\u6807\u518d\u6b21\u6807\u8bb0\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5fc5\u8981\u65f6\u91cd\u590d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u53ef\u80fd\uff0c\u589e\u52a0\u6807\u8bb0\u5806\u6808\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5207\u52ff\u5728\u672a\u8bbe\u7f6e\u6807\u8bb0\u4f4d\u7684\u60c5\u51b5\u4e0b\u63a8\u9001\u5927\u91cf\u6761\u76ee\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u786e\u4fdd\u524d\u8fdb\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"the-sweep-phase"}),'The "sweep phase"'),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Sweep large objects and completely empty pages eagerly."),(0,l.kt)("li",{parentName:"ul"},"Completely empty pages are easily detectable and surprisingly common.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Effectively coalesces some small objects very cheaply."))),(0,l.kt)("li",{parentName:"ul"},"Sweep small object pages when we encounter an empty free list."),(0,l.kt)("li",{parentName:"ul"},"Separate pages can be swept in parallel."),(0,l.kt)("li",{parentName:"ul"},"Empirically, execution time is almost always dominated by marker.")),(0,l.kt)("h3",n({},{id:"\u6e05\u9664\u9636\u6bb5"}),"\u6e05\u9664\u9636\u6bb5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6025\u5207\u5730\u626b\u63cf\u5927\u5bf9\u8c61\u548c\u5b8c\u5168\u6e05\u7a7a\u9875\u9762\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5b8c\u5168\u7a7a\u767d\u7684\u9875\u9762\u5f88\u5bb9\u6613\u88ab\u68c0\u6d4b\u5230\u5e76\u4e14\u975e\u5e38\u666e\u904d\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u975e\u5e38\u4fbf\u5b9c\u5730\u6709\u6548\u5730\u5408\u5e76\u4e00\u4e9b\u5c0f\u5bf9\u8c61\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u7a7a\u7684\u7a7a\u95f2\u5217\u8868\u65f6\uff0c\u626b\u63cf\u5c0f\u5bf9\u8c61\u9875\u9762\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5e76\u884c\u626b\u63cf\u5355\u72ec\u7684\u9875\u9762\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6839\u636e\u7ecf\u9a8c\uff0c\u6267\u884c\u65f6\u95f4\u51e0\u4e4e\u603b\u662f\u7531\u6807\u8bb0\u652f\u914d\u3002")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"thread-support"}),"Thread support"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Uncontrolled concurrent mutation of data structures can cause objects to be overlooked by marker:\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200333.png",alt:null}))),(0,l.kt)("li",{parentName:"ul"},"Results in reclaimed reachable objects."),(0,l.kt)("li",{parentName:"ul"},"We stop threads during critical GC phases.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Unlike most GCs, threads can be\nstopped anywhere."))),(0,l.kt)("li",{parentName:"ul"},"On most platforms, we send each thread a signal, with handshake in handler.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Ensures that thread is stopped."),(0,l.kt)("li",{parentName:"ul"},"Pushes register contents onto the (GC-visible) stack."))),(0,l.kt)("li",{parentName:"ul"},"Typically requires that thread creation calls be intercepted by GC.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"GC substitutes its own thread start routine."),(0,l.kt)("li",{parentName:"ul"},"Keeps track of threads, shadowing thread library.")))),(0,l.kt)("h3",n({},{id:"\u7ebf\u7a0b\u652f\u6301"}),"\u7ebf\u7a0b\u652f\u6301"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u7ed3\u6784\u7684\u4e0d\u53d7\u63a7\u5236\u7684\u5e76\u53d1\u7a81\u53d8\u4f1a\u5bfc\u81f4\u5bf9\u8c61\u88ab\u6807\u8bb0\u5ffd\u7565\uff1a\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200333.png",alt:null}))),(0,l.kt)("li",{parentName:"ul"},"\u5bfc\u81f4\u56de\u6536\u7684\u53ef\u8fbe\u5bf9\u8c61"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u5728\u5173\u952e\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u9636\u6bb5\u505c\u6b62\u7ebf\u7a0b\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0e\u5927\u591a\u6570 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u4e0d\u540c\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u505c\u6b62\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5728\u5927\u591a\u6570\u5e73\u53f0\u4e0a\uff0c\u6211\u4eec\u5411\u6bcf\u4e2a\u7ebf\u7a0b\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\uff0c\u5e76\u5728\u5904\u7406\u7a0b\u5e8f\u4e2d\u8fdb\u884c\u63e1\u624b\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u786e\u4fdd\u7ebf\u7a0b\u505c\u6b62\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c06\u5bc4\u5b58\u5668\u5185\u5bb9\u63a8\u9001\u5230\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u53ef\u89c1\u7684\uff09\u5806\u6808\u4e0a\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u901a\u5e38\u8981\u6c42 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u62e6\u622a\u7ebf\u7a0b\u521b\u5efa\u8c03\u7528\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u66ff\u6362\u5b83\u81ea\u5df1\u7684\u7ebf\u7a0b\u542f\u52a8\u4f8b\u7a0b\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u8ddf\u8e2a\u7ebf\u7a0b\uff0c\u9690\u85cf\u7ebf\u7a0b\u5e93\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"enhancement-1-black-listing"}),"Enhancement 1: Black-listing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Conservative pointer-finding can cause memory retention:\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200419.png",alt:null}))),(0,l.kt)("li",{parentName:"ul"},"In many cases, this is avoidable.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"If we see an address near future heap growth:\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200457.png",alt:null}))),(0,l.kt)("li",{parentName:"ul"},"Don't allocate at location 0x1a34c. "),(0,l.kt)("li",{parentName:"ul"},"We track pages with bogus pointers to them.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Marker updates list."),(0,l.kt)("li",{parentName:"ul"},"Allocate at most small pointer-free objects there.")))))),(0,l.kt)("h3",n({},{id:""})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4fdd\u5b88\u7684\u6307\u9488\u67e5\u627e\u4f1a\u5bfc\u81f4\u5185\u5b58\u4fdd\u7559\uff1a\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200419.png",alt:null}))),(0,l.kt)("li",{parentName:"ul"},"\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u53ef\u4ee5\u907f\u514d\u7684\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u6211\u4eec\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u770b\u5230\u4e00\u4e2a\u5730\u5740\u5806\u589e\u957f\uff1a\n",(0,l.kt)("img",n({parentName:"li"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200457.png",alt:null}))),(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u8981\u5728\u4f4d\u7f6e ",(0,l.kt)("inlineCode",{parentName:"li"},"0x1a34c")," \u5206\u914d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u8ddf\u8e2a\u5e26\u6709\u865a\u5047\u6307\u9488\u7684\u9875\u9762\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u66f4\u65b0\u5217\u8868\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5728\u90a3\u91cc\u5206\u914d\u6700\u591a\u5c0f\u7684\u65e0\u6307\u9488\u5bf9\u8c61\u3002")))))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"black-listing-contd"}),"Black-listing (contd.)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can be substantial improvement, especially with large root sets containing\nrandom, but static data."),(0,l.kt)("li",{parentName:"ul"},"Only dynamic data can cause retention.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"But dynamically created data is also more likely to disappear later."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Usually we see good results with conservative pointer finding, minimal layout information and"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"32 bit address space, heaps up to a few 100MB, or")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"64-bit address space."))))),(0,l.kt)("h3",n({},{id:"\u9ed1\u540d\u5355-\u7eed"}),"\u9ed1\u540d\u5355 (\u7eed)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5927\u5e45\u6539\u8fdb\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u5305\u542b\u968f\u673a\u4f46\u9759\u6001\u6570\u636e\u7684\u5927\u578b\u6839\u96c6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ea\u6709\u52a8\u6001\u6570\u636e\u4f1a\u5bfc\u81f4\u4fdd\u7559\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4f46\u662f\u52a8\u6001\u521b\u5efa\u7684\u6570\u636e\u4e5f\u66f4\u6709\u53ef\u80fd\u5728\u4ee5\u540e\u6d88\u5931\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u901a\u5e38\u6211\u4eec\u4f1a\u901a\u8fc7\u4fdd\u5b88\u7684\u6307\u9488\u67e5\u627e\u3001\u6700\u5c11\u7684\u5e03\u5c40\u4fe1\u606f\u548c"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"32 \u4f4d\u5730\u5740\u7a7a\u95f4\uff0c\u6700\u591a\u53ef\u5806\u5230 ",(0,l.kt)("inlineCode",{parentName:"strong"},"100MB"),"\uff0c\u6216")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"64 \u4f4d\u5730\u5740\u7a7a\u95f4\u3002"))))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"optional-enhancements"}),"Optional enhancements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Remaining enhancements are (or were)\nimplemented and available, but not all combinable.")),(0,l.kt)("h3",n({},{id:"\u53ef\u9009\u589e\u5f3a\u529f\u80fd"}),"\u53ef\u9009\u589e\u5f3a\u529f\u80fd"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5269\u4f59\u7684\u589e\u5f3a\u529f\u80fd\u5df2\uff08\u6216\u66fe\u7ecf\uff09\u5b9e\u65bd\u5e76\u53ef\u7528\uff0c\u4f46\u5e76\u975e\u5168\u90e8\u53ef\u7ec4\u5408\u3002")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"generational-incremental-mostly-concurrent-gc"}),"Generational, Incremental, Mostly Concurrent GC"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Observation:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Running marker concurrently establishes invariant:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Pointers from marked objects or roots either",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"point to marked objects, or"),(0,l.kt)("li",{parentName:"ul"},"were modified since object was marked."))))),(0,l.kt)("li",{parentName:"ul"},"Such a concurrent mark phase can be fixed if we can",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Identify possibly modified objects (and roots)"),(0,l.kt)("li",{parentName:"ul"},"Mark again from modified objects."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},'Most generational collectors track modifications with a compiler introduced "write barrier".')," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"We use the VM system, e.g."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Write protect pages (e.g. mprotect for Linux)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Catch protection faults (e.g. SIGSEGV)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Free if allocation is rare, but otherwise not ideal.")))),(0,l.kt)("li",{parentName:"ul"},"Mostly concurrent GC:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Run concurrent marker once."),(0,l.kt)("li",{parentName:"ul"},"Run fixup marker zero or more times concurrently, preserving invariant, reducing # dirty objects. "),(0,l.kt)("li",{parentName:"ul"},"Run fixup marker with threads stopped once. "),(0,l.kt)("li",{parentName:"ul"},"Works, reduces pause times, used in other systems. "),(0,l.kt)("li",{parentName:"ul"},"Scheduling tricky, requires threads."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Incremental GC:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},'Do a little "concurrent" marking during some allocations.')," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Amount of marking proportional to allocation.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Same pause time benefit, no throughput benefit.")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Generational GC:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},'Leave mark bits set after "full GC", but track dirty pages.')," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},'"Fixup GC" is minor GC.'))))),(0,l.kt)("h3",n({},{id:"\u5206\u4ee3\u589e\u91cf\u5927\u90e8\u5206\u5e76\u53d1"}),"\u5206\u4ee3\u3001\u589e\u91cf\u3001\u5927\u90e8\u5206\u5e76\u53d1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u89c2\u5bdf\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8fd0\u884c\u6807\u8bb0\u540c\u65f6\u5efa\u7acb\u4e0d\u53d8\u91cf\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6765\u81ea\u6807\u8bb0\u5bf9\u8c61\u6216\u6839\u7684\u6307\u9488",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6307\u5411\u6807\u8bb0\u7684\u5bf9\u8c61\uff0c\u6216"),(0,l.kt)("li",{parentName:"ul"},"\u81ea\u6807\u8bb0\u5bf9\u8c61\u4ee5\u6765\u5df2\u4fee\u6539\u3002"))))),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u53ef\u4ee5\u4fee\u590d\u8fd9\u6837\u7684\u5e76\u53d1\u6807\u8bb0\u9636\u6bb5",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8bc6\u522b\u53ef\u80fd\u4fee\u6539\u7684\u5bf9\u8c61\uff08\u548c\u6839\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u4ece\u4fee\u6539\u7684\u5bf9\u8c61\u518d\u6b21\u6807\u8bb0\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5927\u591a\u6570\u4e16\u4ee3\u6536\u96c6\u5668\u4f7f\u7528\u5f15\u5165\u201c\u5199\u5c4f\u969c\u201d\u7684\u7f16\u8bd1\u5668\u6765\u8ddf\u8e2a\u4fee\u6539\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u6211\u4eec\u4f7f\u7528VM\u7cfb\u7edf\uff0c\u4f8b\u5982"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5199\u4fdd\u62a4\u9875\u9762\uff08\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"strong"},"Linux")," \u7684 ",(0,l.kt)("inlineCode",{parentName:"strong"},"mprotect"),"\uff09")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u6355\u83b7\u4fdd\u62a4\u6545\u969c\uff08\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"strong"},"SIGSEGV"),"\uff09")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5982\u679c\u5206\u914d\u5f88\u5c11\uff0c\u5219\u514d\u8d39\uff0c\u5426\u5219\u4e0d\u7406\u60f3\u3002")))),(0,l.kt)("li",{parentName:"ul"},"\u4e3b\u8981\u662f\u5e76\u53d1",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8fd0\u884c\u5e76\u53d1\u6807\u8bb0\u4e00\u6b21\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u540c\u65f6\u8fd0\u884c\u4fee\u6b63\u6807\u8bb0\u96f6\u6b21\u6216\u591a\u6b21\uff0c\u4fdd\u6301\u4e0d\u53d8\uff0c\u51cf\u5c11#\u810f\u5bf9\u8c61\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5728\u7ebf\u7a0b\u505c\u6b62\u4e00\u6b21\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u4fee\u590d\u6807\u8bb0\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5de5\u4f5c\uff0c\u51cf\u5c11\u6682\u505c\u65f6\u95f4\uff0c\u7528\u4e8e\u5176\u4ed6\u7cfb\u7edf\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u8c03\u5ea6\u68d8\u624b\uff0c\u9700\u8981\u7ebf\u7a0b\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u589e\u91cf",(0,l.kt)("inlineCode",{parentName:"strong"},"GC"),"\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5728\u67d0\u4e9b\u5206\u914d\u671f\u95f4\u505a\u4e00\u4e9b\u201c\u5e76\u53d1\u201d\u6807\u8bb0\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u6807\u8bb0\u91cf\u4e0e\u5206\u914d\u6210\u6b63\u6bd4\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u76f8\u540c\u7684\u6682\u505c\u65f6\u95f4\u4f18\u52bf\uff0c\u6ca1\u6709\u541e\u5410\u91cf\u4f18\u52bf\u3002")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5206\u4ee3",(0,l.kt)("inlineCode",{parentName:"strong"},"GC"),"\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5728",(0,l.kt)("inlineCode",{parentName:"strong"},"\u201cfull GC\u201d"),"\u4e4b\u540e\u8bbe\u7f6e\u6807\u8bb0\u4f4d\uff0c\u4f46\u8ddf\u8e2a\u810f\u9875\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"\u201cFixup GC\u201d"),"\u662f\u6b21\u8981 ",(0,l.kt)("inlineCode",{parentName:"strong"},"GC"),"\u3002"))))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"parallel-marking--processor-scalability"}),"Parallel marking & processor scalability"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"As client parallelism increases, eventually we spend all time in sequential\npart of GC."),(0,l.kt)("li",{parentName:"ul"},"Sweeping is done a page at a time & can be parallelized. What about marking?"),(0,l.kt)("li",{parentName:"ul"},"Marking is also quite parallelizable."),(0,l.kt)("li",{parentName:"ul"},"First, and most thoroughly, done by Endo, Taura, and Yonezawa (SC97, 64 processor machine)."),(0,l.kt)("li",{parentName:"ul"},"Our distribution contains simpler version ...")),(0,l.kt)("h3",n({},{id:"\u5e76\u884c\u6807\u8bb0\u548c\u5904\u7406\u5668"}),"\u5e76\u884c\u6807\u8bb0\u548c\u5904\u7406\u5668"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u968f\u7740\u5ba2\u6237\u7aef\u5e76\u884c\u5ea6\u7684\u589e\u52a0\uff0c\u6700\u7ec8\u6211\u4eec\u5c06\u6240\u6709\u65f6\u95f4\u90fd\u82b1\u5728\u4e86 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u7684\u987a\u5e8f\u90e8\u5206\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u626b\u63cf\u4e00\u6b21\u5b8c\u6210\u4e00\u9875\u5e76\u4e14\u53ef\u4ee5\u5e76\u884c\u5316\u3002\u6807\u8bb0\u5462\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u4e5f\u662f\u76f8\u5f53\u53ef\u5e76\u884c\u7684\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9996\u5148\uff0c\u4e5f\u662f\u6700\u5f7b\u5e95\u7684\uff0c\u7531 ",(0,l.kt)("inlineCode",{parentName:"li"},"Endo"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Taura")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"Yonezawa"),"\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"SC97\u300164 processor machine"),"\uff09\u5b8c\u6210\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u7684\u53d1\u884c\u7248\u5305\u542b\u66f4\u7b80\u5355\u7684\u7248\u672c...")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"parallel-marking"}),"Parallel marking"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"For n processors, we have n-1 threads waiting to help with next GC."),(0,l.kt)("li",{parentName:"ul"},"Global mark stack becomes queue."),(0,l.kt)("li",{parentName:"ul"},"Each marker thread regularly:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Removes a few entries from queue tail."),(0,l.kt)("li",{parentName:"ul"},"Marks from those using a local mark stack."))),(0,l.kt)("li",{parentName:"ul"},"Mark bits are shared between marker threads.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Either use mark bytes, or atomic-compare-and-swap.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Mark bytes usually win. (1/8 - 1/16 memory overhead.)"))),(0,l.kt)("li",{parentName:"ul"},"Work may be duplicated but rarely is."))),(0,l.kt)("li",{parentName:"ul"},"Load balance by returning part of local stack to top of queue",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"When local mark stack overflows."),(0,l.kt)("li",{parentName:"ul"},"When it notices empty global queue."))),(0,l.kt)("li",{parentName:"ul"},"Seems to scale adequately, at least for small SMPs.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Limit appears to be bus bandwidth.")))),(0,l.kt)("h3",n({},{id:"\u5e76\u884c\u6807\u8bb0"}),"\u5e76\u884c\u6807\u8bb0"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e ",(0,l.kt)("inlineCode",{parentName:"li"},"n")," \u4e2a\u5904\u7406\u5668\uff0c\u6211\u4eec\u6709 ",(0,l.kt)("inlineCode",{parentName:"li"},"n-1")," \u4e2a\u7ebf\u7a0b\u7b49\u5f85\u5e2e\u52a9\u4e0b\u4e00\u6b21 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5168\u5c40\u6807\u8bb0\u6808\u53d8\u6210\u961f\u5217\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u6807\u8bb0\u7ebf\u7a0b\u5b9a\u671f\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4ece\u961f\u5217\u5c3e\u90e8\u5220\u9664\u4e00\u4e9b\u6761\u76ee\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u672c\u5730\u6807\u8bb0\u5806\u6808\u7684\u6807\u8bb0\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u4f4d\u5728\u6807\u8bb0\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8981\u4e48\u4f7f\u7528\u6807\u8bb0\u5b57\u8282\uff0c\u8981\u4e48\u4f7f\u7528\u539f\u5b50\u6bd4\u8f83\u548c\u4ea4\u6362\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u5b57\u8282\u901a\u5e38\u4f1a\u83b7\u80dc\u3002\uff081/8 - 1/16 \u5185\u5b58\u5f00\u9500\u3002\uff09"))),(0,l.kt)("li",{parentName:"ul"},"\u5de5\u4f5c\u53ef\u80fd\u4f1a\u91cd\u590d\uff0c\u4f46\u5f88\u5c11\u4f1a\u91cd\u590d\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u5c06\u90e8\u5206\u672c\u5730\u5806\u6808\u8fd4\u56de\u5230\u961f\u5217\u9876\u90e8\u6765\u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5f53\u672c\u5730\u6807\u8bb0\u5806\u6808\u6ea2\u51fa\u65f6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u5b83\u6ce8\u610f\u5230\u7a7a\u7684\u5168\u5c40\u961f\u5217\u65f6\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u4f3c\u4e4e\u53ef\u4ee5\u5145\u5206\u6269\u5c55\uff0c\u81f3\u5c11\u5bf9\u4e8e\u5c0f\u578b ",(0,l.kt)("inlineCode",{parentName:"li"},"SMP")," \u800c\u8a00\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u9650\u5236\u4f3c\u4e4e\u662f\u603b\u7ebf\u5e26\u5bbd\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"parallel-marking-data-structure"}),"Parallel marking data structure"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200629.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"thread-local-allocation-buffers"}),"Thread-local allocation buffers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Malloc/free implementations acquire and release a lock twice per object\nallocation/deallocation:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Once per allocation."),(0,l.kt)("li",{parentName:"ul"},"Once per deallocation."))),(0,l.kt)("li",{parentName:"ul"},"Garbage collectors avoid per-deallocation lock."),(0,l.kt)("li",{parentName:"ul"},"We can also avoid per-allocation lock!"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Use per-thread allocation caches."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},'Each thread allocates a "bunch" of memory.'),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Single lock acquisition.")," "))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Dividing it up doesn't require a lock.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Easy with linear allocation, but also possible here."))))),(0,l.kt)("h3",n({},{id:"\u7ebf\u7a0b\u5c40\u90e8\u5206\u914d"}),"\u7ebf\u7a0b\u5c40\u90e8\u5206\u914d"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Malloc/free \u5b9e\u73b0\u6bcf\u6b21\u5bf9\u8c61\u5206\u914d/\u91ca\u653e\u4e24\u6b21\u83b7\u53d6\u548c\u91ca\u653e\u9501\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u6b21\u5206\u914d\u4e00\u6b21\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u6b21\u91ca\u653e\u4e00\u6b21\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5783\u573e\u6536\u96c6\u5668\u907f\u514d\u6bcf\u6b21\u91ca\u653e\u9501\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u8fd8\u53ef\u4ee5\u907f\u514d\u6309\u5206\u914d\u9501\uff01"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u4f7f\u7528\u6bcf\u7ebf\u7a0b\u5206\u914d\u7f13\u5b58\u3002"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2a\u201c\u4e00\u5806\u201d\u5185\u5b58\u3002"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5355\u9501\u83b7\u53d6\u3002")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5206\u5272\u5b83\u4e0d\u9700\u8981\u9501\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u7ebf\u6027\u5206\u914d\u5f88\u5bb9\u6613\uff0c\u4f46\u5728\u8fd9\u91cc\u4e5f\u662f\u53ef\u80fd\u7684\u3002"))))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"thread-local-allocation-details"}),"Thread-local allocation details"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Each thread has array of small object free-list headers."),(0,l.kt)("li",{parentName:"ul"},"Each header contains either:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Count of allocated objects of that size."),(0,l.kt)("li",{parentName:"ul"},"Pointer to local free list."))),(0,l.kt)("li",{parentName:"ul"},"To allocate:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"For small counts, increment count, allocate from global free list."),(0,l.kt)("li",{parentName:"ul"},"For count at threshold, or empty free-list, get a page of objects."),(0,l.kt)("li",{parentName:"ul"},"For nonempty free-list, allocate from local free-list.")))),(0,l.kt)("h3",n({},{id:"\u7ebf\u7a0b\u5c40\u90e8\u5206\u914d\u7ec6\u8282"}),"\u7ebf\u7a0b\u5c40\u90e8\u5206\u914d\u7ec6\u8282"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u7ec4\u5c0f\u5bf9\u8c61\u7a7a\u95f2\u5217\u8868\u5934\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u6807\u5934\u90fd\u5305\u542b\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8be5\u5927\u5c0f\u7684\u5df2\u5206\u914d\u5bf9\u8c61\u7684\u8ba1\u6570\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6307\u5411\u672c\u5730\u7a7a\u95f2\u5217\u8868\u7684\u6307\u9488\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5206\u914d\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5c0f\u8ba1\u6570\uff0c\u589e\u52a0\u8ba1\u6570\uff0c\u4ece\u5168\u5c40\u7a7a\u95f2\u5217\u8868\u4e2d\u5206\u914d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u9608\u503c\u8ba1\u6570\u6216\u7a7a\u7a7a\u95f2\u5217\u8868\uff0c\u83b7\u53d6\u5bf9\u8c61\u9875\u9762\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u975e\u7a7a\u7a7a\u95f2\u5217\u8868\uff0c\u4ece\u672c\u5730\u7a7a\u95f2\u5217\u8868\u4e2d\u5206\u914d\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"finalization"}),"Finalization"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Finalizable objects are added to a growable hash table."),(0,l.kt)("li",{parentName:"ul"},"After each GC, we walk this hash table two or three times:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Mark all objects reachable from objects in the table.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"But not the objects in the table themselves."),(0,l.kt)("li",{parentName:"ul"},"Table entries contain the procedures to do this marking to handle variants\nlike Java."))),(0,l.kt)("li",{parentName:"ul"},"Enqueue still unmarked objects in the table for finalization, and possibly\nmark them."),(0,l.kt)("li",{parentName:"ul"},"Possibly mark objects reachable from finalizable objects. (Java style\nfinalization only.)"))),(0,l.kt)("li",{parentName:"ul"},"Process finalizable objects, preferably in separate thread, once allocation\nlock is released. (See POPL 2003 paper.)"),(0,l.kt)("li",{parentName:"ul"},'Weak pointers ("disappearing links") are handled similarly.')),(0,l.kt)("h3",n({},{id:"\u7ec8\u7ed3"}),"\u7ec8\u7ed3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53ef\u7ec8\u7ed3\u5bf9\u8c61\u88ab\u6dfb\u52a0\u5230\u53ef\u589e\u957f\u7684\u54c8\u5e0c\u8868\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u6b21 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u904d\u5386\u8fd9\u4e2a\u54c8\u5e0c\u8868\u4e24\u5230\u4e09\u904d\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bb0\u4ece\u8868\u4e2d\u7684\u5bf9\u8c61\u53ef\u5230\u8fbe\u7684\u6240\u6709\u5bf9\u8c61\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4f46\u4e0d\u662f\u8868\u4e2d\u7684\u5bf9\u8c61\u672c\u8eab\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u8868\u6761\u76ee\u5305\u542b\u6267\u884c\u6b64\u6807\u8bb0\u4ee5\u5904\u7406 ",(0,l.kt)("inlineCode",{parentName:"li"},"Java")," \u7b49\u53d8\u4f53\u7684\u8fc7\u7a0b\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5c06\u8868\u4e2d\u4ecd\u672a\u6807\u8bb0\u7684\u5bf9\u8c61\u6392\u5165\u961f\u5217\u4ee5\u8fdb\u884c\u6700\u7ec8\u786e\u5b9a\uff0c\u5e76\u53ef\u80fd\u6807\u8bb0\u5b83\u4eec\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u80fd\u6807\u8bb0\u53ef\u4ece\u53ef\u7ec8\u7ed3\u5bf9\u8c61\u5230\u8fbe\u7684\u5bf9\u8c61\u3002\uff08\u4ec5\u9650 ",(0,l.kt)("inlineCode",{parentName:"li"},"Java")," \u98ce\u683c\u7684\u6700\u7ec8\u786e\u5b9a\u3002\uff09"))),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u65e6\u5206\u914d\u9501\u88ab\u91ca\u653e\uff0c\u6700\u597d\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u4e2d\u5904\u7406\u53ef\u7ec8\u7ed3\u7684\u5bf9\u8c61\u3002\uff08\u53c2\u89c1 ",(0,l.kt)("inlineCode",{parentName:"li"},"POPL 2003")," \u8bba\u6587\u3002\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u5f31\u6307\u9488\uff08\u201c\u6d88\u5931\u7684\u94fe\u63a5\u201d\uff09\u7684\u5904\u7406\u65b9\u5f0f\u7c7b\u4f3c\u3002")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"finalization-quick-observations"}),"Finalization (quick observations)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Finalization is moderately expensive.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Extra space overhead."),(0,l.kt)("li",{parentName:"ul"},"Tracing cost is significantly higher, even with Java-style finalization\n(factor of 5?)"))),(0,l.kt)("li",{parentName:"ul"},"Clients should avoid registering unnecessary finalizers.\n(JVMs can do this statically.)"),(0,l.kt)("li",{parentName:"ul"},"Finalizers do not affect performance of the rest of the GC."),(0,l.kt)("li",{parentName:"ul"},"Finalizers must introduce concurrency (even if we had a simple reference\ncounting collector). There is no such thing as deterministic finalization for\nheap objects.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Collector runs them in GC_malloc by default. This is a bug except in very\nsimple cases. Use GC_finalizer_notifier."),(0,l.kt)("li",{parentName:"ul"},"Concurrency is tricky. Be careful.")))),(0,l.kt)("h3",n({},{id:"\u7ec8\u7ed3\u5feb\u901f\u89c2\u5bdf"}),"\u7ec8\u7ed3(\u5feb\u901f\u89c2\u5bdf)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6700\u7ec8\u786e\u5b9a\u7684\u6210\u672c\u9002\u4e2d\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u989d\u5916\u7684\u7a7a\u95f4\u5f00\u9500\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u8ddf\u8e2a\u6210\u672c\u660e\u663e\u66f4\u9ad8\uff0c\u5373\u4f7f\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"Java")," \u98ce\u683c\u7684\u7ec8\u7ed3\uff085 \u500d\uff1f\uff09"))),(0,l.kt)("li",{parentName:"ul"},"\u5ba2\u6237\u7aef\u5e94\u907f\u514d\u6ce8\u518c\u4e0d\u5fc5\u8981\u7684\u7ec8\u7ed3\u5668\u3002\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"JVM")," \u53ef\u4ee5\u9759\u6001\u5730\u6267\u884c\u6b64\u64cd\u4f5c\u3002\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u7ec8\u7ed3\u5668\u4e0d\u4f1a\u5f71\u54cd ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u5176\u4f59\u90e8\u5206\u7684\u6027\u80fd\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7ec8\u7ed3\u5668\u5fc5\u987b\u5f15\u5165\u5e76\u53d1\u6027\uff08\u5373\u4f7f\u6211\u4eec\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u5f15\u7528\u8ba1\u6570\u6536\u96c6\u5668\uff09\u3002\u5806\u5bf9\u8c61\u6ca1\u6709\u786e\u5b9a\u6027\u7ec8\u7ed3\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6536\u96c6\u5668\u9ed8\u8ba4\u5728 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_malloc")," \u4e2d\u8fd0\u884c\u5b83\u4eec\u3002\u9664\u4e86\u975e\u5e38\u7b80\u5355\u7684\u60c5\u51b5\u5916\uff0c\u8fd9\u662f\u4e00\u4e2a\u9519\u8bef\u3002\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_finalizer_notifier"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5e76\u53d1\u662f\u68d8\u624b\u7684\u3002\u5f53\u5fc3\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"debugging-support"}),"Debugging support"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'Debug allocators "wrap" each object with extra information:'),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Source file, line number of allocation site."),(0,l.kt)("li",{parentName:"ul"},"Possibly a stack trace for allocation site."),(0,l.kt)("li",{parentName:"ul"},"Space for a back pointer. (Should be elsewhere...)"),(0,l.kt)("li",{parentName:"ul"},"Requested object size."),(0,l.kt)("li",{parentName:"ul"},"Magic (address dependent) numbers before and after object."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Can mostly tolerate a mixture of wrapped and unwrapped objects."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'Relies on "magic numbers".'),(0,l.kt)("li",{parentName:"ul"},"May lead to extra error reports."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8c03\u8bd5\u5206\u914d\u5668\u7528\u989d\u5916\u7684\u4fe1\u606f\u201c\u5305\u88c5\u201d\u6bcf\u4e2a\u5bf9\u8c61\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6e90\u6587\u4ef6\uff0c\u5206\u914d\u7ad9\u70b9\u7684\u884c\u53f7\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u80fd\u662f\u5206\u914d\u7ad9\u70b9\u7684\u5806\u6808\u8ddf\u8e2a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u540e\u5411\u6307\u9488\u7684\u7a7a\u95f4\u3002\uff08\u5e94\u8be5\u5728\u522b\u5904\u2026\u2026\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u8bf7\u6c42\u7684\u5bf9\u8c61\u5927\u5c0f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u8c61\u524d\u540e\u7684\u9b54\u672f\uff08\u5730\u5740\u76f8\u5173\uff09\u6570\u5b57\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5bb9\u5fcd\u5305\u88f9\u548c\u672a\u5305\u88f9\u7269\u4f53\u7684\u6df7\u5408\u3002"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4f9d\u9760\u201c\u5e7b\u6570\u201d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u80fd\u5bfc\u81f4\u989d\u5916\u7684\u9519\u8bef\u62a5\u544a\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"debugging-facilities"}),"Debugging facilities"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GC can check for overwrite errors."),(0,l.kt)("li",{parentName:"ul"},"Various error checks in GC_debug routines."),(0,l.kt)("li",{parentName:"ul"},"Can be configured for leak detection."),(0,l.kt)("li",{parentName:"ul"},"Can tell you whether a single misidentified pointer might result in unbounded\nspace leak (See POPL 2002)"),(0,l.kt)("li",{parentName:"ul"},"Can give back-traces of random heap samples (requires different build flags):",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",n({parentName:"pre"},{className:"language-log"}),"  ****Chose address 0x81ac567 in object 0x81ac568 (trace_test.c:13, sz=8,\n  PTRFREE)\n  Reachable via 0 levels of pointers from offset 4 in object:\n  0x8192090 (trace_test.c:11, sz=8, NORMAL)\n  Reachable via 1 levels of pointers from offset 0 in object:\n  0x81920b8 (trace_test.c:11, sz=8, NORMAL)\n  Reachable via 2 levels of pointers from root at 0x8055bd4\n")))),(0,l.kt)("h3",n({},{id:"\u8c03\u8bd5\u8bbe\u65bd"}),"\u8c03\u8bd5\u8bbe\u65bd"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u53ef\u4ee5\u68c0\u67e5\u8986\u76d6\u9519\u8bef\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GC_debug")," \u4f8b\u7a0b\u4e2d\u7684\u5404\u79cd\u9519\u8bef\u68c0\u67e5\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u914d\u7f6e\u7528\u4e8e\u6cc4\u6f0f\u68c0\u6d4b\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u544a\u8bc9\u60a8\u5355\u4e2a\u9519\u8bef\u8bc6\u522b\u7684\u6307\u9488\u662f\u5426\u53ef\u80fd\u5bfc\u81f4\u65e0\u9650\u7a7a\u95f4\u6cc4\u6f0f\uff08\u53c2\u89c1 ",(0,l.kt)("inlineCode",{parentName:"li"},"POPL 2002"),"\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u63d0\u4f9b\u968f\u673a\u5806\u6837\u672c\u7684\u56de\u6eaf\uff08\u9700\u8981\u4e0d\u540c\u7684\u6784\u5efa\u6807\u5fd7\uff09\uff1a")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"current-state"}),"Current state"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'Easily available (google "garbage collector")'),(0,l.kt)("li",{parentName:"ul"},"Supports Linux, Unix variants, Windows, MacOSX,"),(0,l.kt)("li",{parentName:"ul"},"Used in a variety of C/C++ systems",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"w3m, vesta, ..."),(0,l.kt)("li",{parentName:"ul"},"High end Xerox printers."),(0,l.kt)("li",{parentName:"ul"},"Sometimes as leak detector (e.g Mozilla)."),(0,l.kt)("li",{parentName:"ul"},"Usually with little type information."))),(0,l.kt)("li",{parentName:"ul"},"Used in many language runtimes:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Gcj (gcc), Mono, Bigloo Scheme"),(0,l.kt)("li",{parentName:"ul"},"Usually with heap type information."),(0,l.kt)("li",{parentName:"ul"},"Information on static data (e.g. 4.5MB for gcj) would be easy and useful."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Current version 6.3; 6.4 should appear shortly.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Stay tuned for 7.0alpha1 (cleaner code base, ...)"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bb9\u6613\u83b7\u5f97\uff08\u767e\u5ea6\u4e00\u4e0b\u201c\u5783\u573e\u6536\u96c6\u5668\u201d\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"li"},"Linux"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Unix")," \u53d8\u4f53\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Windows"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"MacOSX"),"\u3001"),(0,l.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u5404\u79cd ",(0,l.kt)("inlineCode",{parentName:"li"},"C/C++")," \u7cfb\u7edf",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"w3m"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"vesta"),", ..."),(0,l.kt)("li",{parentName:"ul"},"\u9ad8\u7aef\u65bd\u4e50\u6253\u5370\u673a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u65f6\u7528\u4f5c\u68c0\u6f0f\u4eea\uff08\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"Mozilla"),"\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u5e38\u53ea\u6709\u5f88\u5c11\u7684\u7c7b\u578b\u4fe1\u606f\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5728\u8bb8\u591a\u8bed\u8a00\u8fd0\u884c\u65f6\u4e2d\u4f7f\u7528\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Gcj (gcc)"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Mono"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Bigloo")," \u65b9\u6848"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u5e38\u5e26\u6709\u5806\u7c7b\u578b\u4fe1\u606f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u5173\u9759\u6001\u6570\u636e\u7684\u4fe1\u606f\uff08\u4f8b\u5982\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"gcj")," \u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"4.5MB"),"\uff09\u5c06\u662f\u7b80\u5355\u800c\u6709\u7528\u7684\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5f53\u524d\u7248\u672c ",(0,l.kt)("inlineCode",{parentName:"strong"},"6.3"),"\uff1b",(0,l.kt)("inlineCode",{parentName:"strong"},"6.4")," \u5e94\u8be5\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u8bf7\u7ee7\u7eed\u5173\u6ce8 ",(0,l.kt)("inlineCode",{parentName:"strong"},"7.0alpha1"),"\uff08\u66f4\u7b80\u6d01\u7684\u4ee3\u7801\u5e93\uff0c...\uff09"))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"performance-characteristics"}),"Performance characteristics"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"We use GCBench here.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"More of a sanity check than a benchmark. "),(0,l.kt)("li",{parentName:"ul"},"Allocates complete binary trees of varying depths."),(0,l.kt)("li",{parentName:"ul"},"Depth n -> 2 n - 1 nodes of 2 pointers + 2 ints"),(0,l.kt)("li",{parentName:"ul"},"Translated to multiple source languages."),(0,l.kt)("li",{parentName:"ul"},"Can see effect of object lifetime. "),(0,l.kt)("li",{parentName:"ul"},"About as realistic as any toy benchmark (not very)")))),(0,l.kt)("h3",n({},{id:"\u6027\u80fd\u7279\u70b9"}),"\u6027\u80fd\u7279\u70b9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"GCBench"),"\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0e\u5176\u8bf4\u662f\u57fa\u51c6\uff0c\u4e0d\u5982\u8bf4\u662f\u5065\u5168\u6027\u68c0\u67e5\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5206\u914d\u4e0d\u540c\u6df1\u5ea6\u7684\u5b8c\u6574\u4e8c\u53c9\u6811\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6df1\u5ea6 n -> 2 n - 2 \u4e2a\u6307\u9488\u7684 1 \u4e2a\u8282\u70b9 + 2 \u4e2a\u6574\u6570"),(0,l.kt)("li",{parentName:"ul"},"\u7ffb\u8bd1\u6210\u591a\u79cd\u6e90\u8bed\u8a00\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u770b\u5230\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7684\u5f71\u54cd\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e0e\u4efb\u4f55\u73a9\u5177\u57fa\u51c6\u4e00\u6837\u903c\u771f\uff08\u4e0d\u662f\u975e\u5e38\uff09")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"gcbench-vs-hotspot-142-client"}),"GCBench vs HotSpot 1.4.2 client"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200803.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"cc-gcbench-comparison"}),"C/C++ GCBench Comparison"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Compare:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"C with malloc/free",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'"Pause" is tree deallocation time (predictable).'))),(0,l.kt)("li",{parentName:"ul"},"Boost classic reference counting (simple and tuned version)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'"Pause" is recursive deallocation time during assignment(unpredictable).'))),(0,l.kt)("li",{parentName:"ul"},"Boost versions use C++ benchmark."),(0,l.kt)("li",{parentName:"ul"},"Expl. free and BDW GC use C version."),(0,l.kt)("li",{parentName:"ul"},"HotSpot uses Java version.")))),(0,l.kt)("h3",n({},{id:"cc-gcbench-\u6bd4\u8f83"}),"C/C++ ",(0,l.kt)("inlineCode",{parentName:"h3"},"GCBench")," \u6bd4\u8f83"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6bd4\u8f83\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"C")," \u5e26 ",(0,l.kt)("inlineCode",{parentName:"li"},"malloc/free"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u201c\u6682\u505c\u201d\u662f\u6811\u91ca\u653e\u65f6\u95f4\uff08\u53ef\u9884\u6d4b\uff09\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u63d0\u5347\u7ecf\u5178\u5f15\u7528\u8ba1\u6570\uff08\u7b80\u5355\u548c\u8c03\u6574\u7684\u7248\u672c\uff09",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u201c\u6682\u505c\u201d\u662f\u5206\u914d\u671f\u95f4\u7684\u9012\u5f52\u91ca\u653e\u65f6\u95f4\uff08\u4e0d\u53ef\u9884\u6d4b\uff09\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Boost")," \u7248\u672c\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"C++")," \u57fa\u51c6\u6d4b\u8bd5\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u89e3\u91ca\u3002",(0,l.kt)("inlineCode",{parentName:"li"},"free")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"BDW GC")," \u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"C")," \u7248\u672c\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"HotSpot")," \u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"Java")," \u7248\u672c\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"execution-time-msecs-2ghz-xeon-vs-alternatives"}),"Execution time (msecs, 2GHz Xeon) vs. alternatives"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200836.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"max-space-usage-mb-vs-others"}),"Max. space usage (MB) vs. others"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200856.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"max-pause-time-msecs-vs-others"}),"Max pause time (msecs) vs. others"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200917.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"but"}),"But:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GCBench uses small objects."),(0,l.kt)("li",{parentName:"ul"},"Allocation + GC cost is proportional to object size."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Redo experiment with 128 extra null pointer per node."))),(0,l.kt)("h3",n({},{id:"\u4f46\u662f"}),"\u4f46\u662f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GCBench")," \u4f7f\u7528\u5c0f\u5bf9\u8c61\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5206\u914d + ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u6210\u672c\u4e0e\u5bf9\u8c61\u5927\u5c0f\u6210\u6b63\u6bd4\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u91cd\u505a\u5b9e\u9a8c\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709 128 \u4e2a\u989d\u5916\u7684\u7a7a\u6307\u9488\u3002"))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"large-objectsmsecs-mb-2ghz-xeon"}),"Large objects(msecs, MB, 2GHz Xeon)"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409200955.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"large-objectsthread-safe"}),"Large objects(thread-safe)"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409201050.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"some-older-measurements-on-malloc-benchmarks"}),"Some older measurements on malloc benchmarks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"These are a bit obsolete, things have probably improved, but ..."),(0,l.kt)("li",{parentName:"ul"},"Measured on 4xPPro (which was obsolete then).")),(0,l.kt)("h3",n({},{id:"malloc\u57fa\u51c6\u4e0a\u7684\u4e00\u4e9b\u65e7\u6d4b\u91cf"}),(0,l.kt)("inlineCode",{parentName:"h3"},"malloc"),"\u57fa\u51c6\u4e0a\u7684\u4e00\u4e9b\u65e7\u6d4b\u91cf"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8fd9\u4e9b\u6709\u70b9\u8fc7\u65f6\u4e86\uff0c\u60c5\u51b5\u53ef\u80fd\u6709\u6240\u6539\u5584\uff0c\u4f46\u662f..."),(0,l.kt)("li",{parentName:"ul"},"\u5728 ",(0,l.kt)("inlineCode",{parentName:"li"},"4xPPro"),"\uff08\u5f53\u65f6\u5df2\u7ecf\u8fc7\u65f6\uff09\u4e0a\u6d4b\u91cf\u3002")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"ghostscript-throughput"}),"Ghostscript throughput"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409201114.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"mt_gcbench2-throughput"}),"MT_GCBench2 throughput"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409201152.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"larson-slightly-mod-benchmark-throughput"}),"Larson (slightly mod.) benchmark throughput"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409201215.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"larson-small-throughput"}),"Larson-small throughput"),(0,l.kt)("p",null,(0,l.kt)("img",n({parentName:"p"},{src:"https://raw.githubusercontent.com/danyow/picgo/main/20220409201301.png",alt:null}))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"other-experiences"}),"Other experiences"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Generally works quite well for small (< 100MB live data)\nclients or on 64-bit machines.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Sometimes needs a bit pointer location information for frequently occurring\nheap objects. Usually GC_MALLOC_ATOMIC is sufficient for C code."))),(0,l.kt)("li",{parentName:"ul"},"Some successful uses with much larger heaps."),(0,l.kt)("li",{parentName:"ul"},"Some problems with 500MB heaps on 32-bit machines."),(0,l.kt)("li",{parentName:"ul"},"Large arrays (> about 1MB) sometimes problematic."),(0,l.kt)("li",{parentName:"ul"},"Fragmentation cost (for heaps > a few MB) is typically less than a factor of\n2.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Fragmentation essentially never an issue for small objects."),(0,l.kt)("li",{parentName:"ul"},"Whole block coalescing is important."))),(0,l.kt)("li",{parentName:"ul"},"I haven't seen much of a problem with long running apps.\n(Vesta, Xerox printers)."),(0,l.kt)("li",{parentName:"ul"},"Stationary objects allow one word object headers in gcj.")),(0,l.kt)("h3",n({},{id:"\u5176\u4ed6\u7ecf\u9a8c"}),"\u5176\u4ed6\u7ecf\u9a8c"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u901a\u5e38\u9002\u7528\u4e8e\u5c0f\u578b\uff08< ",(0,l.kt)("inlineCode",{parentName:"li"},"100MB")," \u5b9e\u65f6\u6570\u636e\uff09\u5ba2\u6237\u7aef\u6216 64 \u4f4d\u673a\u5668\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6709\u65f6\u9700\u8981\u9891\u7e41\u51fa\u73b0\u7684\u5806\u5bf9\u8c61\u7684\u4f4d\u6307\u9488\u4f4d\u7f6e\u4fe1\u606f\u3002\u901a\u5e38 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC_MALLOC_ATOMIC")," \u5bf9\u4e8e C \u4ee3\u7801\u5c31\u8db3\u591f\u4e86\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e9b\u6210\u529f\u7684\u4f7f\u7528\u66f4\u5927\u7684\u5806\u3002"),(0,l.kt)("li",{parentName:"ul"},"32 \u4f4d\u673a\u5668\u4e0a ",(0,l.kt)("inlineCode",{parentName:"li"},"500MB")," \u5806\u7684\u4e00\u4e9b\u95ee\u9898\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5927\u578b\u6570\u7ec4\uff08> \u5927\u7ea6 ",(0,l.kt)("inlineCode",{parentName:"li"},"1MB"),"\uff09\u6709\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u788e\u7247\u6210\u672c\uff08\u5bf9\u4e8e > \u51e0 ",(0,l.kt)("inlineCode",{parentName:"li"},"MB")," \u7684\u5806\uff09\u901a\u5e38\u5c0f\u4e8e 2 \u500d\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5c0f\u7269\u4f53\u6765\u8bf4\uff0c\u788e\u7247\u5316\u57fa\u672c\u4e0a\u4e0d\u662f\u95ee\u9898\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6574\u4e2a\u5757\u5408\u5e76\u5f88\u91cd\u8981\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u6211\u6ca1\u6709\u770b\u5230\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u4ec0\u4e48\u95ee\u9898\u3002\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"Vesta"),"\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"Xerox printers"),"\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u56fa\u5b9a\u5bf9\u8c61\u5141\u8bb8\u5728 ",(0,l.kt)("inlineCode",{parentName:"li"},"gcj")," \u4e2d\u4f7f\u7528\u4e00\u4e2a\u5355\u8bcd\u5bf9\u8c61\u6807\u9898\u3002")),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"space-overhead-of-conservative-gc"}),"Space overhead of conservative GC"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Clever empirical study:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'Hirzel, Diwan, Henkel, "On the Usefulness of Type and Liveness Accuracy for\nGarbage Collection", TOPLAS 24, 6, November 2002.',(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Liveness information is usually more important than type information,\nespecially on 64-bit platforms."),(0,l.kt)("li",{parentName:"ul"},"Up to 62% space overhead."))))),(0,l.kt)("li",{parentName:"ul"},"More theoretical study:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'Boehm, "Bounding Space Usage of Conservative Garbage Collectors", POPL 2002.')))),(0,l.kt)("h3",n({},{id:"\u4fdd\u5b88gc\u7684\u7a7a\u95f4\u5f00\u9500"}),"\u4fdd\u5b88",(0,l.kt)("inlineCode",{parentName:"h3"},"GC"),"\u7684\u7a7a\u95f4\u5f00\u9500"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5de7\u5999\u7684\u5b9e\u8bc1\u7814\u7a76\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Hirzel"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Diwan"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Henkel"),"\uff0c\u201c\u5173\u4e8e\u5783\u573e\u6536\u96c6\u7684\u7c7b\u578b\u548c\u6d3b\u6027\u51c6\u786e\u6027\u7684\u6709\u7528\u6027\u201d\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"TOPLAS 24, 6, November 2002"),"\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6d3b\u6027\u4fe1\u606f\u901a\u5e38\u6bd4\u7c7b\u578b\u4fe1\u606f\u66f4\u91cd\u8981\uff0c\u5c24\u5176\u662f\u5728 64 \u4f4d\u5e73\u53f0\u4e0a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ad8\u8fbe 62% \u7684\u7a7a\u95f4\u5f00\u9500\u3002"))))),(0,l.kt)("li",{parentName:"ul"},"\u66f4\u591a\u7406\u8bba\u7814\u7a76\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Boehm"),"\uff0c\u201c\u4fdd\u5b88\u5783\u573e\u6536\u96c6\u5668\u7684\u8fb9\u754c\u7a7a\u95f4\u4f7f\u7528\u201d\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"POPL 2002"),"\u3002")))),(0,l.kt)("hr",null),(0,l.kt)("h2",n({},{id:"conclusions"}),"Conclusions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collector is still a useful tool for",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Avoiding manual memory management issues in C/C++."),(0,l.kt)("li",{parentName:"ul"},"Quickly building language runtimes, especially, but not only, for research\nsystems."),(0,l.kt)("li",{parentName:"ul"},"Some GC research. (One underlying algorithm, mult. languages.)"))),(0,l.kt)("li",{parentName:"ul"},"Performance is competitive with malloc/free.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Usually wins for threads + small objects."))),(0,l.kt)("li",{parentName:"ul"},"Tracing performance is very close to best commercial JVMs.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"See also Smith and Morrisett, ISMM 98."),(0,l.kt)("li",{parentName:"ul"},"Currently does less well when there is a large benefit from generational\nGC. (But see OOPSLA 2003 paper by Barabash et al.)"))),(0,l.kt)("li",{parentName:"ul"},"There may be a cache cost to free list allocation.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"See work by Blackburn, Cheng, and McKinley."),(0,l.kt)("li",{parentName:"ul"},"But I don't think we fully understand this yet...")))),(0,l.kt)("h3",n({},{id:"\u7ed3\u8bba"}),"\u7ed3\u8bba"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6536\u96c6\u5668\u4ecd\u7136\u662f\u4e00\u4e2a\u6709\u7528\u7684\u5de5\u5177",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u907f\u514d ",(0,l.kt)("inlineCode",{parentName:"li"},"C/C++")," \u4e2d\u7684\u624b\u52a8\u5185\u5b58\u7ba1\u7406\u95ee\u9898\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5feb\u901f\u6784\u5efa\u8bed\u8a00\u8fd0\u884c\u65f6\uff0c\u5c24\u5176\u662f\u4f46\u4e0d\u4ec5\u9650\u4e8e\u7814\u7a76\u7cfb\u7edf\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e9b ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u7814\u7a76\u3002\uff08\u4e00\u79cd\u5e95\u5c42\u7b97\u6cd5\uff0c\u591a\u79cd\u8bed\u8a00\u3002\uff09"))),(0,l.kt)("li",{parentName:"ul"},"\u6027\u80fd\u4e0e ",(0,l.kt)("inlineCode",{parentName:"li"},"malloc/free")," \u5177\u6709\u7ade\u4e89\u529b\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u901a\u5e38\u8d62\u5f97\u7ebf\u7a0b+\u5c0f\u5bf9\u8c61\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u8ddf\u8e2a\u6027\u80fd\u975e\u5e38\u63a5\u8fd1\u6700\u597d\u7684\u5546\u4e1a ",(0,l.kt)("inlineCode",{parentName:"li"},"JVM"),"\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u53e6\u89c1 ",(0,l.kt)("inlineCode",{parentName:"li"},"Smith")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"Morrisett\uff0cISMM 98"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u5206\u4ee3 ",(0,l.kt)("inlineCode",{parentName:"li"},"GC")," \u6709\u5f88\u5927\u7684\u597d\u5904\u65f6\uff0c\u76ee\u524d\u505a\u5f97\u4e0d\u592a\u597d\u3002\uff08\u4f46\u8bf7\u53c2\u9605 ",(0,l.kt)("inlineCode",{parentName:"li"},"Barabash")," \u7b49\u4eba\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"OOPSLA 2003")," \u8bba\u6587\u3002\uff09"))),(0,l.kt)("li",{parentName:"ul"},"\u7a7a\u95f2\u5217\u8868\u5206\u914d\u53ef\u80fd\u4f1a\u4ea7\u751f\u7f13\u5b58\u6210\u672c\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u53c2\u89c1 ",(0,l.kt)("inlineCode",{parentName:"li"},"Blackburn"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"Cheng")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"McKinley")," \u7684\u4f5c\u54c1\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f46\u6211\u8ba4\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u8fd9\u4e00\u70b9......")))),(0,l.kt)("hr",null))}s.isMDXComponent=!0}}]);