"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[92426],{35318:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return d}});var i=n(27378);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function u(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=i.createContext({}),l=function(t){var e=i.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):u(u({},e),t)),n},c=function(t){var e=l(t.components);return i.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},m=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,s=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),m=l(n),d=r,b=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?i.createElement(b,u(u({ref:e},c),{},{components:n})):i.createElement(b,u({ref:e},c))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,u=new Array(a);u[0]=m;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:r,u[1]=o;for(var l=2;l<a;l++)u[l]=n[l];return i.createElement.apply(null,u)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65044:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return c}});n(27378);var i=n(35318);function r(){return r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r.apply(this,arguments)}function a(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}const u={id:"Structuring UXML attributes",slug:"/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-attributes"},o="Structuring UXML attributes",s={unversionedId:"unity/uitoolkits/uielements/uibuilder/uib-structuring-ui/Structuring UXML attributes",id:"version-Unity@2022.1/unity/uitoolkits/uielements/uibuilder/uib-structuring-ui/Structuring UXML attributes",title:"Structuring UXML attributes",description:"Attributes in UXML",source:"@site/versioned_docs/version-Unity@2022.1/unity/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-attributes.md",sourceDirName:"unity/uitoolkits/uielements/uibuilder/uib-structuring-ui",slug:"/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-attributes",permalink:"/en/docs/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-attributes",editUrl:"https://github.com/danyow/danyow.github.io/edit/main/docs/unity/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-attributes.md",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"3/31/2022",frontMatter:{id:"Structuring UXML attributes",slug:"/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-attributes"},sidebar:"unity",previous:{title:"Structuring UI",permalink:"/en/docs/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui"},next:{title:"Using custom (C#) elements",permalink:"/en/docs/uitoolkits/uielements/uibuilder/uib-structuring-ui/uib-structuring-ui-custom-elements"}},l={},c=[{value:"Attributes in UXML",id:"attributes-in-uxml",level:2},{value:"Change attributes in the Inspector",id:"change-attributes-in-the-inspector",level:2},{value:"Change attributes in the Canvas",id:"change-attributes-in-the-canvas",level:2}],p={toc:c};function m(t){var{components:e}=t,n=a(t,["components"]);return(0,i.kt)("wrapper",r({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",r({},{id:"structuring-uxml-attributes"}),"Structuring UXML attributes"),(0,i.kt)("h2",r({},{id:"attributes-in-uxml"}),"Attributes in UXML"),(0,i.kt)("p",null,"Elements have per-element attributes which can be set in UXML. You can think of them as constructor or initialization arguments. This includes the ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," attribute. The base ",(0,i.kt)("inlineCode",{parentName:"p"},"VisualElement")," class comes with a few standard attributes that all elements share (since all elements inherit from ",(0,i.kt)("inlineCode",{parentName:"p"},"VisualElement"),"), like: ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tooltip"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"tabindex"),". More advanced elements and controls will have additional attributes you can set, for example, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Label")," adds the ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," attribute."),(0,i.kt)("p",null,"A small note on the ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," attribute. The ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," attribute supports multi-line text. Just use  ",(0,i.kt)("strong",{parentName:"p"},"Enter"),"  to add newline characters in the  ",(0,i.kt)("strong",{parentName:"p"},"Inspector")," ."),(0,i.kt)("h2",r({},{id:"change-attributes-in-the-inspector"}),"Change attributes in the Inspector"),(0,i.kt)("p",null,"All attributes, both standard and custom, appear at the top of the  ",(0,i.kt)("strong",{parentName:"p"},"Inspector"),"  in a section that has the same name as the name of the element\u2019s type. For example, if you click on a ",(0,i.kt)("inlineCode",{parentName:"p"},"Button"),", look for a section in the  ",(0,i.kt)("strong",{parentName:"p"},"Inspector"),"  called  ",(0,i.kt)("strong",{parentName:"p"},"Button")," ."),(0,i.kt)("p",null,"You can set the value of an attribute by changing the corresponding field in the attribute section. If the field appears  ",(0,i.kt)("strong",{parentName:"p"},"bold"),"  with a solid line on the left of the field\u2019s label, it means the attribute is already set and not using the default. For example, setting ",(0,i.kt)("inlineCode",{parentName:"p"},"tooltip")," from empty to ",(0,i.kt)("inlineCode",{parentName:"p"},"test")," and then back to empty is different from never setting it in the first place: the first case is ",(0,i.kt)("inlineCode",{parentName:"p"},"unset")," while the second case is ",(0,i.kt)("inlineCode",{parentName:"p"},"set to empty"),". What ",(0,i.kt)("inlineCode",{parentName:"p"},"this attribute is set")," means is there\u2019s an entry in the UXML text on this element setting this attribute to ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"value"),(0,i.kt)("p",null,"If the attribute isn\u2019t mentioned in the UXML text, it\u2019s ",(0,i.kt)("inlineCode",{parentName:"p"},"not set"),"."),(0,i.kt)("p",null,"You can unset an attribute by right-clicking on the field\u2019s label and choosing  ",(0,i.kt)("strong",{parentName:"p"},"Unset")," . You can unset all attributes, including the ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," attribute, by right-clicking on any attribute field and choosing  ",(0,i.kt)("strong",{parentName:"p"},"Unset All")," ."),(0,i.kt)("h2",r({},{id:"change-attributes-in-the-canvas"}),"Change attributes in the Canvas"),(0,i.kt)("p",null,"The only attribute you can change directly in the  ",(0,i.kt)("strong",{parentName:"p"},"Canvas"),"  is the ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," attribute on text elements. To change the ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," attribute on something like a ",(0,i.kt)("inlineCode",{parentName:"p"},"Button")," or a ",(0,i.kt)("inlineCode",{parentName:"p"},"Label")," you can double-click on it in the  ",(0,i.kt)("strong",{parentName:"p"},"Canvas")," . A temporary text field will appear, using the same font settings as the original text:"),(0,i.kt)("p",null,(0,i.kt)("img",r({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/UIBuilder/EditButtonTextInCanvas.png",alt:"EditButtonTextInCanvas"}))),(0,i.kt)("p",null,"EditButtonTextInCanvas"),(0,i.kt)("p",null,"Pressing  ",(0,i.kt)("strong",{parentName:"p"},"Enter"),"  commits the change. If the ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," attribute contains newline characters, use  ",(0,i.kt)("strong",{parentName:"p"},"Shift + Enter"),"  to commit the change. Press  ",(0,i.kt)("strong",{parentName:"p"},"Esc"),"  to cancel any changes."))}m.isMDXComponent=!0}}]);