"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[70403],{35318:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var i=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},s=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,v=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?i.createElement(v,u(u({ref:t},s),{},{components:n})):i.createElement(v,u({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,u=new Array(o);u[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,u[1]=a;for(var c=2;c<o;c++)u[c]=n[c];return i.createElement.apply(null,u)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},14633:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return s}});n(27378);var i=n(35318);function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},r.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const u={id:"Extending the device simulator",slug:"/unity-overview/using-the-editor/device-simulator/device-simulator-plugins"},a="Extending the device simulator",l={unversionedId:"unity/unity-overview/using-the-editor/device-simulator/Extending the device simulator",id:"version-Unity@2022.1/unity/unity-overview/using-the-editor/device-simulator/Extending the device simulator",title:"Extending the device simulator",description:"The Device Simulator supports plugins to extend its functionality and change the UI of the Control Panel in the Simulator view.",source:"@site/versioned_docs/version-Unity@2022.1/unity/unity-overview/using-the-editor/device-simulator/device-simulator-plugins.md",sourceDirName:"unity/unity-overview/using-the-editor/device-simulator",slug:"/unity-overview/using-the-editor/device-simulator/device-simulator-plugins",permalink:"/en/docs/unity-overview/using-the-editor/device-simulator/device-simulator-plugins",editUrl:"https://github.com/danyow/danyow.github.io/edit/main/docs/unity/unity-overview/using-the-editor/device-simulator/device-simulator-plugins.md",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"3/31/2022",frontMatter:{id:"Extending the device simulator",slug:"/unity-overview/using-the-editor/device-simulator/device-simulator-plugins"},sidebar:"unity",previous:{title:"Device Simulator introduction",permalink:"/en/docs/unity-overview/using-the-editor/device-simulator/device-simulator-introduction"},next:{title:"Simulated classes",permalink:"/en/docs/unity-overview/using-the-editor/device-simulator/device-simulator-simulated-classes"}},c={},s=[{value:"Creating a plugin",id:"creating-a-plugin",level:2}],d={toc:s};function p(e){var{components:t}=e,n=o(e,["components"]);return(0,i.kt)("wrapper",r({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",r({},{id:"extending-the-device-simulator"}),"Extending the device simulator"),(0,i.kt)("p",null,"The Device Simulator supports plugins to extend its functionality and change the UI of the Control Panel in the Simulator view."),(0,i.kt)("h2",r({},{id:"creating-a-plugin"}),"Creating a plugin"),(0,i.kt)("p",null,"To create a Device Simulator plugin, extend the ",(0,i.kt)("a",r({parentName:"p"},{href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/DeviceSimulation.DeviceSimulatorPlugin.html"}),"DeviceSimulatorPlugin")," class."),(0,i.kt)("p",null,"To insert UI into the Device Simulator view, your plugin must:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Override the ",(0,i.kt)("inlineCode",{parentName:"li"},"title")," property to return a non-empty string."),(0,i.kt)("li",{parentName:"ul"},"Override the ",(0,i.kt)("inlineCode",{parentName:"li"},"OnCreateUI")," method to return a ",(0,i.kt)("a",r({parentName:"li"},{href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/UIElements.VisualElement.html"}),"VisualElement")," that contains the UI.")),(0,i.kt)("p",null,"If your plugin doesn\u2019t meet these conditions, the Device Simulator instantiates the plugin but doesn\u2019t display its UI in the Simulator view."),(0,i.kt)("p",null,"The following example demonstrates how to create a plugin that overrides the title property and adds UI to the Simulator view."),(0,i.kt)("pre",null,(0,i.kt)("code",r({parentName:"pre"},{}),'public class TouchInfoPlugin : DeviceSimulatorPlugin\n{\n    public override string title =&gt; "Touch Info";\n    private Label m_TouchCountLabel;\n    private Label m_LastTouchEvent;\n    private Button m_ResetCountButton;\n\n    [SerializeField]\n    private int m_TouchCount = 0;\n\n    public override void OnCreate()\n    {\n        deviceSimulator.touchScreenInput += touchEvent =&gt;\n        {\n            m_TouchCount += 1;\n            UpdateTouchCounterText();\n            m_LastTouchEvent.text = $"Last touch event: {touchEvent.phase.ToString()}";\n        };\n    }\n\n    public override VisualElement OnCreateUI()\n    {\n        VisualElement root = new VisualElement();\n        \n        m_LastTouchEvent = new Label("Last touch event: None");\n        \n        m_TouchCountLabel = new Label();\n        UpdateTouchCounterText();\n\n        m_ResetCountButton = new Button {text = "Reset Count" };\n        m_ResetCountButton.clicked += () =&gt;\n        {\n            m_TouchCount = 0;\n            UpdateTouchCounterText();\n        };\n\n        root.Add(m_LastTouchEvent);\n        root.Add(m_TouchCountLabel);\n        root.Add(m_ResetCountButton);\n            \n        return root;\n    }\n\n    private void UpdateTouchCounterText()\n    {\n        if (m_TouchCount &gt; 0)\n            m_TouchCountLabel.text = $"Touches recorded: {m_TouchCount}";\n        else\n            m_TouchCountLabel.text = "No taps recorded";\n    }\n}\n')))}p.isMDXComponent=!0}}]);