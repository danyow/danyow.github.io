"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[16666],{35318:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var o=r(27378);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,s=function(e,t){if(null==e)return{};var r,o,s={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=o.createContext({}),p=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var r=e.components,s=e.mdxType,n=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),d=s,h=c["".concat(l,".").concat(d)]||c[d]||m[d]||n;return r?o.createElement(h,a(a({ref:t},u),{},{components:r})):o.createElement(h,a({ref:t},u))}));function d(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=r.length,a=new Array(n);a[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var p=2;p<n;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}c.displayName="MDXCreateElement"},8258:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return c},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u}});r(27378);var o=r(35318);function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},s.apply(this,arguments)}function n(e,t){if(null==e)return{};var r,o,s=function(e,t){if(null==e)return{};var r,o,s={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}const a={id:"Importing assets simultaneously",slug:"/asset-workflow/importing-assets/parallel-import"},i=void 0,l={unversionedId:"unity/asset-workflow/importing-assets/Importing assets simultaneously",id:"version-Unity@2022.1/unity/asset-workflow/importing-assets/Importing assets simultaneously",title:"Importing assets simultaneously",description:"Importing assets simultaneously",source:"@site/versioned_docs/version-Unity@2022.1/unity/asset-workflow/importing-assets/parallel-import.md",sourceDirName:"unity/asset-workflow/importing-assets",slug:"/asset-workflow/importing-assets/parallel-import",permalink:"/en/docs/asset-workflow/importing-assets/parallel-import",editUrl:"https://github.com/danyow/danyow.github.io/edit/main/docs/unity/asset-workflow/importing-assets/parallel-import.md",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"3/31/2022",frontMatter:{id:"Importing assets simultaneously",slug:"/asset-workflow/importing-assets/parallel-import"},sidebar:"unity",previous:{title:"Importing assets",permalink:"/en/docs/asset-workflow/importing-assets/importing-assets"},next:{title:"\u9884\u8bbe",permalink:"/en/docs/asset-workflow/presets/presets"}},p={},u=[{value:"Importing assets simultaneously",id:"importing-assets-simultaneously",level:2},{value:"The scope of parallel imports",id:"the-scope-of-parallel-imports",level:2},{value:"Implications for scripted importers",id:"implications-for-scripted-importers",level:2},{value:"Controlling the import worker processes",id:"controlling-the-import-worker-processes",level:2}],m={toc:u};function c(e){var{components:t}=e,r=n(e,["components"]);return(0,o.kt)("wrapper",s({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",s({},{id:"importing-assets-simultaneously"}),"Importing assets simultaneously"),(0,o.kt)("p",null,"By default, Unity imports assets one after another sequentially on the main Editor process. However, Unity also supports parallel importing for some types of asset. Parallel importing uses multiple processes to import assets simultaneously, which is faster than the default sequential method of importing."),(0,o.kt)("p",null,"To enable parallel importing, go to  ",(0,o.kt)("strong",{parentName:"p"},"Edit"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"Project Settings"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"Editor")," , then under the  ",(0,o.kt)("strong",{parentName:"p"},"Asset Pipeline"),"  section, enable the  ",(0,o.kt)("strong",{parentName:"p"},"Parallel Import"),"  checkbox."),(0,o.kt)("p",null,(0,o.kt)("img",s({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/ParallelImportEnable.png",alt:"The Parallel Import option in the Project Settings window."}))),(0,o.kt)("p",null,"The Parallel Import option in the Project Settings window."),(0,o.kt)("h2",s({},{id:"the-scope-of-parallel-imports"}),"The scope of parallel imports"),(0,o.kt)("p",null,"Unity\u2019s  ",(0,o.kt)("strong",{parentName:"p"},"Parallel Import"),"  feature supports only certain types of asset. It applies only when the Editor is performing its standard asset database refresh, which occurs when it detects new or modified assets in the Project folder and automatically imports them."),(0,o.kt)("p",null,"The specific types of asset which Unity can import in parallel are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Image file types imported by the ",(0,o.kt)("a",s({parentName:"li"},{href:"/en/docs/graphics/textures/importing-textures/importing-textures"}),"Texture Importer")),(0,o.kt)("li",{parentName:"ul"},"Model file types imported by the ",(0,o.kt)("a",s({parentName:"li"},{href:"/en/docs/graphics/models/models-importing/importing-model-files"}),"Model Importer"))),(0,o.kt)("p",null,"Other types of asset are always imported sequentially during an asset database refresh."),(0,o.kt)("p",null,"Some Asset Database API methods also respect this setting, if you use them to import, refresh, or create Texture or Model assets. These are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",s({parentName:"li"},{href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/AssetDatabase.ImportAsset.html"}),"AssetDatabase.ImportAsset")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",s({parentName:"li"},{href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/AssetDatabase.Refresh.html"}),"AssetDatabase.Refresh")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",s({parentName:"li"},{href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/AssetDatabase.CreateAsset.html"}),"AssetDatabase.CreateAsset"))),(0,o.kt)("h2",s({},{id:"implications-for-scripted-importers"}),"Implications for scripted importers"),(0,o.kt)("p",null,"Because parallel imports operate on separate processes, any side effects of your scripted importer code also take effect in that process rather than the main Editor process. Side effects that run on separate processes can cause unexpected problems. For example, if you modify a static variable on a C# class during import on a worker thread, that modification is not automatically visible to code running on the Editor\u2019s main thread."),(0,o.kt)("p",null,"Any code that you write for importing should always be self-contained, deterministic, and shouldn\u2019t change the context it\u2019s running in (for example, it shouldn\u2019t change the Editor settings or create new assets on disk). Following these rules helps your importer code avoid parallel threading issues. It also ensures that your import results are always consistent, and that the Editor always uses cached artifacts instead of unnecessarily reimporting your assets."),(0,o.kt)("h2",s({},{id:"controlling-the-import-worker-processes"}),"Controlling the import worker processes"),(0,o.kt)("p",null,"In the Asset Pipeline settings, there are three settings that allow you to control the behaviour of the import worker processes. These settings are project-specific."),(0,o.kt)("p",null,(0,o.kt)("img",s({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/ParallelImportWorkers.png",alt:"The import worker process controls, in the Project Settings window."}))),(0,o.kt)("p",null,"The import worker process controls, in the Project Settings window."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"The import worker process controls, in the Project Settings window.")," |Setting Name|\u63cf\u8ff0| |:\u2013|:\u2013| | ",(0,o.kt)("strong",{parentName:"p"},"Desired Import Worker Count")," |The number of import worker processes that the import pipeline considers the optimal number to run in parallel.| | ",(0,o.kt)("strong",{parentName:"p"},"Standby Import Worker Count")," |The minimum number of worker processes to keep, even if they\u2019re idle.",(0,o.kt)("br",null),(0,o.kt)("br",null),"If there are more worker processes than this, Unity shuts down import workers that have been idle for some time, to free up system resources. This property allows you to manage how Unity balances system resources when some processes are idle, compared with the time it takes to start up new import worker processes.",(0,o.kt)("br",null),(0,o.kt)("br",null),"You might see an improvement in import performance by increasing this value if you are frequently iterating on model, animation or texture work, and are therefore frequently importing batches of models or image files.| | ",(0,o.kt)("strong",{parentName:"p"},"Idle Import Worker Shutdown Delay")," |The amount of time in seconds to wait before shutting down an idle worker.|"),(0,o.kt)("p",null,"You can also control the default values that Unity sets the  ",(0,o.kt)("strong",{parentName:"p"},"Desired Import Worker Count"),"  for new projects. To do this, go to  ",(0,o.kt)("strong",{parentName:"p"},"Preferences"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"Asset Pipeline"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"Import Worker Count %")," ."),(0,o.kt)("p",null,(0,o.kt)("img",s({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/ParallelImportWorkers2.png",alt:"The Importer Worker Count setting in the Preferences window."}))),(0,o.kt)("p",null,"The Importer Worker Count setting in the Preferences window."),(0,o.kt)("p",null,"When you create a new project, Unity uses the  ",(0,o.kt)("strong",{parentName:"p"},"Import Worker Count %"),"  value to assign your project\u2019s  ",(0,o.kt)("strong",{parentName:"p"},"Desired Import Worker Count"),"  value to the percentage of the number of logical cores available on your system."),(0,o.kt)("p",null,"For example, if your system has 16 logical cores and this preference is set to 25%, the  ",(0,o.kt)("strong",{parentName:"p"},"Desired Import Worker Count"),"  for new projects is 4. If you set this value too high, your import worker processes need to compete over other processes and system resources such as reading and writing files. The default value of 25% is suitable for most situations."))}c.isMDXComponent=!0}}]);