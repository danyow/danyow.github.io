"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[48912],{35318:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var o=r(27378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),s=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=s(r),m=n,d=f["".concat(p,".").concat(m)]||f[m]||u[m]||i;return r?o.createElement(d,a(a({ref:t},c),{},{components:r})):o.createElement(d,a({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},438:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return c}});r(27378);var o=r(35318);function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},n.apply(this,arguments)}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const a={id:"Profiling tools",slug:"/unity-overview/analysis/performance-profiling-tools/performance-profiling-tools"},l="Profiling tools",p={unversionedId:"unity/unity-overview/analysis/performance-profiling-tools/Profiling tools",id:"version-Unity@2022.1/unity/unity-overview/analysis/performance-profiling-tools/Profiling tools",title:"Profiling tools",description:"Profiling your application is the best way to measure its performance. You can use a variety of profiling tools to understand where there might be any issues with elements of your application including memory usage, CPU performance, GPU performance, and your custom scripts.",source:"@site/versioned_docs/version-Unity@2022.1/unity/unity-overview/analysis/performance-profiling-tools/performance-profiling-tools.md",sourceDirName:"unity/unity-overview/analysis/performance-profiling-tools",slug:"/unity-overview/analysis/performance-profiling-tools/performance-profiling-tools",permalink:"/en/docs/unity-overview/analysis/performance-profiling-tools/performance-profiling-tools",editUrl:"https://github.com/danyow/danyow.github.io/edit/main/docs/unity/unity-overview/analysis/performance-profiling-tools/performance-profiling-tools.md",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"3/31/2022",frontMatter:{id:"Profiling tools",slug:"/unity-overview/analysis/performance-profiling-tools/performance-profiling-tools"},sidebar:"unity",previous:{title:"Managed memory",permalink:"/en/docs/unity-overview/analysis/performance-memory-overview/performance-managed-memory"},next:{title:"Analyzing profiler traces",permalink:"/en/docs/unity-overview/analysis/performance-profiling-tools/performance-profiler-traces"}},s={},c=[{value:"Unity\u2019s profiling tools",id:"unitys-profiling-tools",level:2},{value:"Third party profiling tools",id:"third-party-profiling-tools",level:3}],u={toc:c};function f(e){var{components:t}=e,r=i(e,["components"]);return(0,o.kt)("wrapper",n({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",n({},{id:"profiling-tools"}),"Profiling tools"),(0,o.kt)("p",null,(0,o.kt)("a",n({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Profiling_(computer_programming)"}),"Profiling")," your application is the best way to measure its performance. You can use a variety of profiling tools to understand where there might be any issues with elements of your application including memory usage, CPU performance, GPU performance, and your custom scripts."),(0,o.kt)("h2",n({},{id:"unitys-profiling-tools"}),"Unity\u2019s profiling tools"),(0,o.kt)("p",null,"Unity has several profiling tools that you can use to measure the performance of your application:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"/en/docs/unity-overview/analysis/profiler/profiler"}),"Unity Profiler"),": Measure the performance of the Unity Editor, your application in Play mode, or connect to a device running your application in development mode."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://docs.unity3d.com/Packages/com.unity.profiling.core@latest"}),"Profiling Core package"),": Provides APIs that you can use to add contextual information to Unity Profiler captures"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://docs.unity3d.com/Packages/com.unity.memoryprofiler@latest"}),"Memory Profiler"),": A tool that provides in-depth memory performance analysis"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://docs.unity3d.com/Packages/com.unity.performance.profile-analyzer@latest"}),"Profile Analyzer"),": Compare two profiling datasets together to analyze how your changes affect your application\u2019s performance.")),(0,o.kt)("h3",n({},{id:"third-party-profiling-tools"}),"Third party profiling tools"),(0,o.kt)("p",null,"Alongside the Unity Profiler, you should use platform-specific profilers to ensure that your application runs as expected. The following list provides some examples of available profiling tools. You can also use Unity\u2019s ",(0,o.kt)("a",n({parentName:"p"},{href:"/en/docs/unity-overview/analysis/profiler/low-level-native-plugin-profiler"}),"low level native plug-in Profiler API")," to export profiling data to third-party profiling tools."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Android:")," "),(0,o.kt)("li",{parentName:"ul"},"General Android GPU profiling: Google\u2019s ",(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.android.com/agi"}),"Android GPU Inspector"),", if you have a device that supports it."),(0,o.kt)("li",{parentName:"ul"},"Arm CPU: ",(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.arm.com/tools-and-software/embedded/arm-development-studio/components/streamline-performance-analyzer"}),"Streamline")," from Arm Mobile Studio."),(0,o.kt)("li",{parentName:"ul"},"Arm Mali GPU: Use the tools from ",(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.arm.com/solutions/hpc/hpc-software/categories/profiling-tools"}),"Arm Mobile Studio")," for GPU and system profiling."),(0,o.kt)("li",{parentName:"ul"},"Imagination PowerVR GPU: ",(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.imaginationtech.com/pvrtune/"}),"PVRTune")," for GPU profiling."),(0,o.kt)("li",{parentName:"ul"},"Qualcomm chips: ",(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.qualcomm.com/software/snapdragon-profiler"}),"Snapdragon Profiler")," for GPU and system profiling. For GPU profiling on older Qualcomm GPUs, use the ",(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.qualcomm.com/software/adreno-gpu-profiler"}),"Adreno Profiler"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"macOS and iOS")," :"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.apple.com/xcode/"}),"Xcode")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"PC:")," "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.amd.com/amd-uprof/"}),"AMD uProf")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://www.intel.com/content/www/us/en/developer/tools/graphics-performance-analyzers/overview.html"}),"Intel GPA")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://developer.nvidia.com/nsight-graphics"}),"NVIDIA Nsight Graphics")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://devblogs.microsoft.com/pix/download/"}),"PIX on Windows")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://superluminal.eu/"}),"Superluminal")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://www.intel.com/content/www/us/en/developer/tools/oneapi/vtune-profiler.html"}),"VTune")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://docs.microsoft.com/en-us/windows-hardware/test/wpt/"}),"Windows Performance Analysis Toolkit"))),(0,o.kt)("p",null,"These tools have the most utility on platforms that can use ",(0,o.kt)("a",n({parentName:"p"},{href:"/en/docs/scripting-section/unity-architecture/scripting-backends/il2cpp/il2cpp"}),"IL2CPP")," to produce a C++ version of the project. These native-code versions provide transparent call stacks and high-resolution method timings that are unavailable when running under Mono."))}f.isMDXComponent=!0}}]);