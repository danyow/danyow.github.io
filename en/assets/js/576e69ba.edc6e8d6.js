"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[89945],{35318:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var i=t(27378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),u=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=u(t),f=r,d=g["".concat(s,".").concat(f)]||g[f]||c[f]||a;return t?i.createElement(d,o(o({ref:n},p),{},{components:t})):i.createElement(d,o({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=t[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},42922:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});t(27378);var i=t(35318);function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r.apply(this,arguments)}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const o={id:"Native plug-ins",slug:"/scripting-section/plugins/native-plugins"},l="Native plug-ins",s={unversionedId:"unity/scripting-section/plugins/Native plug-ins",id:"version-Unity@2022.1/unity/scripting-section/plugins/Native plug-ins",title:"Native plug-ins",description:"Unity supports native plug-ins, which are libraries of native code you can write in languages such as C, C++, and Objective-C. Plug-ins allow the code you write in C# to call functions from these libraries. This feature allows Unity to integrate with middleware libraries or existing C/C++ code.",source:"@site/versioned_docs/version-Unity@2022.1/unity/scripting-section/plugins/native-plugins.md",sourceDirName:"unity/scripting-section/plugins",slug:"/scripting-section/plugins/native-plugins",permalink:"/en/docs/scripting-section/plugins/native-plugins",editUrl:"https://github.com/danyow/danyow.github.io/edit/main/docs/unity/scripting-section/plugins/native-plugins.md",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"3/31/2022",frontMatter:{id:"Native plug-ins",slug:"/scripting-section/plugins/native-plugins"},sidebar:"unity",previous:{title:"\u4f4e\u7ea7\u539f\u751f\u63d2\u4ef6\u7740\u8272\u5668\u7f16\u8bd1\u5668\u8bbf\u95ee",permalink:"/en/docs/scripting-section/plugins/native-plugin-interface/low-level-native-plugin-shader-compiler-access"},next:{title:"Import and configure plug-ins",permalink:"/en/docs/scripting-section/plugins/plugin-inspector"}},u={},p=[{value:"Using a native plug-in",id:"using-a-native-plug-in",level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u5176\u4ed6\u4fe1\u606f",id:"\u5176\u4ed6\u4fe1\u606f",level:2}],c={toc:p};function g(e){var{components:n}=e,t=a(e,["components"]);return(0,i.kt)("wrapper",r({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",r({},{id:"native-plug-ins"}),"Native plug-ins"),(0,i.kt)("p",null,"Unity supports native plug-ins, which are libraries of native code you can write in languages such as C, C++, and Objective-C. Plug-ins allow the code you write in C# to call functions from these libraries. This feature allows Unity to integrate with middleware libraries or existing C/C++ code."),(0,i.kt)("p",null,"The native plug-in provides a simple C interface, which the C# script then exposes to your other scripts. Unity can also call functions that the native plug-in exports when certain low-level rendering events happen (for example, when you create a graphics device). See ",(0,i.kt)("a",r({parentName:"p"},{href:"/en/docs/scripting-section/plugins/native-plugin-interface/native-plugin-interface"}),"Low-level native plug-in interface")," for more information."),(0,i.kt)("p",null,"For an example of a native plugin, see ",(0,i.kt)("a",r({parentName:"p"},{href:"https://github.com/Unity-Technologies/NativeRenderingPlugin"}),"Native Renderer Plugin"),"."),(0,i.kt)("h2",r({},{id:"using-a-native-plug-in"}),"Using a native plug-in"),(0,i.kt)("p",null,"To use a native plug-in:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Write functions in a C-based language to access the features you need."),(0,i.kt)("li",{parentName:"ol"},"Compile them into a library."),(0,i.kt)("li",{parentName:"ol"},"In Unity, create a C# script that calls functions in the native library.")),(0,i.kt)("p",null,"You build native plug-ins with native code compilers on the target platform. Because plug-in functions use a C-based call interface, you must declare the functions with C linkage to avoid name mangling issues."),(0,i.kt)("h2",r({},{id:"\u793a\u4f8b"}),"\u793a\u4f8b"),(0,i.kt)("p",null,"A simple native library with a single function might have code that looks like this:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"float ExamplePluginFunction () { return 5.0F; }")),(0,i.kt)("p",null,"To access this code from within Unity, use the following C# script:"),(0,i.kt)("pre",null,(0,i.kt)("code",r({parentName:"pre"},{}),'using UnityEngine;\nusing System.Runtime.InteropServices;\n\nclass ExampleScript : MonoBehaviour {\n    #if UNITY_IPHONE\n    // On iOS plugins are statically linked into\n    // the executable, so we have to use __Internal as the\n    // library name.\n    [DllImport ("__Internal")]\n    #else\n    // Other platforms load plugins dynamically, so pass the\n    // name of the plugin\'s dynamic library.\n    [DllImport ("PluginName")]   \n    #endif\n    private static extern float ExamplePluginFunction ();\n\n    void Awake () {\n        // Calls the ExamplePluginFunction inside the plugin\n        // And prints 5 to the console\n        print (ExamplePluginFunction ());\n       }\n    }\n')),(0,i.kt)("h2",r({},{id:"\u5176\u4ed6\u4fe1\u606f"}),"\u5176\u4ed6\u4fe1\u606f"),(0,i.kt)("p",null,"You can learn more about using native plugins to interact with third-party code libraries, including how you can implement rendering in your plug-in, with the following pages:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",r({parentName:"li"},{href:"/en/docs/scripting-section/plugins/native-plugin-interface/native-plugin-interface"}),"\u4f4e\u7ea7\u539f\u751f\u63d2\u4ef6\u63a5\u53e3")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",r({parentName:"li"},{href:"https://www.mono-project.com/docs/advanced/pinvoke/"}),"Mono Interop with native libraries")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",r({parentName:"li"},{href:"https://docs.microsoft.com/en-us/dotnet/framework/interop/marshaling-data-with-platform-invoke?redirectedfrom=MSDN"}),"P-invoke documentation on MSDN"))))}g.isMDXComponent=!0}}]);