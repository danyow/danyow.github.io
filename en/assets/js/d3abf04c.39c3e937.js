"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[23371],{35318:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var r=t(27378);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),g=i,h=u["".concat(s,".").concat(g)]||u[g]||m[g]||a;return t?r.createElement(h,o(o({ref:n},p),{},{components:t})):r.createElement(h,o({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},69904:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});t(27378);var r=t(35318);function i(){return i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},i.apply(this,arguments)}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}const o={id:"Manually combining meshes",slug:"/graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes"},c="Manually combining meshes",s={unversionedId:"unity/graphics/graphics-performance-profiling/optimizing-draw-calls/Manually combining meshes",id:"version-Unity@2022.1/unity/graphics/graphics-performance-profiling/optimizing-draw-calls/Manually combining meshes",title:"Manually combining meshes",description:"You can manually combine multiple meshes into a single mesh as a draw call optimization technique. Unity renders the combined mesh in a single draw call instead of one draw call per mesh. This technique can be a good alternative to draw call batching in cases where the meshes are close together and don\u2019t move relative to one another. For example, for a static cupboard with lots of drawers, it makes sense to combine everything into a single mesh.",source:"@site/versioned_docs/version-Unity@2022.1/unity/graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes.md",sourceDirName:"unity/graphics/graphics-performance-profiling/optimizing-draw-calls",slug:"/graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes",permalink:"/en/docs/graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes",editUrl:"https://github.com/danyow/danyow.github.io/edit/main/docs/unity/graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes.md",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"3/31/2022",frontMatter:{id:"Manually combining meshes",slug:"/graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes"},sidebar:"unity",previous:{title:"Optimizing draw calls",permalink:"/en/docs/graphics/graphics-performance-profiling/optimizing-draw-calls/optimizing-draw-calls"},next:{title:"Draw call batching",permalink:"/en/docs/graphics/graphics-performance-profiling/optimizing-draw-calls/draw-call-batching/draw-call-batching"}},l={},p=[],m={toc:p};function u(e){var{components:n}=e,t=a(e,["components"]);return(0,r.kt)("wrapper",i({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",i({},{id:"manually-combining-meshes"}),"Manually combining meshes"),(0,r.kt)("p",null,"You can manually combine multiple meshes into a single mesh as a ",(0,r.kt)("a",i({parentName:"p"},{href:"/en/docs/graphics/graphics-performance-profiling/optimizing-draw-calls/optimizing-draw-calls"}),"draw call optimization")," technique. Unity renders the combined mesh in a single draw call instead of one draw call per mesh. This technique can be a good alternative to ",(0,r.kt)("a",i({parentName:"p"},{href:"/en/docs/graphics/graphics-performance-profiling/optimizing-draw-calls/draw-call-batching/draw-call-batching"}),"draw call batching")," in cases where the meshes are close together and don\u2019t move relative to one another. For example, for a static cupboard with lots of drawers, it makes sense to combine everything into a single mesh."),(0,r.kt)("p",null," ",(0,r.kt)("strong",{parentName:"p"},"Warning")," : Unity can\u2019t individually cull meshes you combine. This means that if one part of a combined mesh is onscreen, Unity draws the entire combined mesh. If the meshes are static and you want Unity to individually cull them, use ",(0,r.kt)("a",i({parentName:"p"},{href:"/en/docs/graphics/graphics-performance-profiling/optimizing-draw-calls/draw-call-batching/static-batching"}),"static batching")," instead."),(0,r.kt)("p",null,"There are two main ways to combine meshes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In your asset generation tool while authoring the mesh."),(0,r.kt)("li",{parentName:"ul"},"In Unity using ",(0,r.kt)("a",i({parentName:"li"},{href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Mesh.CombineMeshes.html"}),"Mesh.CombineMeshes"),".")))}u.isMDXComponent=!0}}]);