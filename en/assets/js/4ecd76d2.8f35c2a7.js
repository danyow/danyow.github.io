"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[22460],{35318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,g=m["".concat(p,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},30684:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});n(27378);var r=n(35318);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const l={id:"Deep learning super sampling",slug:"/graphics/cameras-overview/deep-learning-super-sampling"},o="Deep learning super sampling",p={unversionedId:"unity/graphics/cameras-overview/Deep learning super sampling",id:"version-Unity@2022.1/unity/graphics/cameras-overview/Deep learning super sampling",title:"Deep learning super sampling",description:"NVIDIA Deep Learning Super Sampling (DLSS) is a rendering technology that uses artificial intelligence to increase graphics performance and quality. You can use it to:",source:"@site/versioned_docs/version-Unity@2022.1/unity/graphics/cameras-overview/deep-learning-super-sampling.md",sourceDirName:"unity/graphics/cameras-overview",slug:"/graphics/cameras-overview/deep-learning-super-sampling",permalink:"/en/docs/graphics/cameras-overview/deep-learning-super-sampling",editUrl:"https://github.com/danyow/danyow.github.io/edit/main/docs/unity/graphics/cameras-overview/deep-learning-super-sampling.md",tags:[],version:"Unity@2022.1",lastUpdatedBy:"danyow",lastUpdatedAt:1648742180,formattedLastUpdatedAt:"3/31/2022",frontMatter:{id:"Deep learning super sampling",slug:"/graphics/cameras-overview/deep-learning-super-sampling"},sidebar:"unity",previous:{title:"CullingGroup API",permalink:"/en/docs/graphics/cameras-overview/culling-group-api"},next:{title:"\u52a8\u6001\u5206\u8fa8\u7387",permalink:"/en/docs/graphics/cameras-overview/dynamic-resolution/dynamic-resolution"}},s={},u=[{value:"Requirements and compatibility",id:"requirements-and-compatibility",level:2},{value:"Render pipeline compatibility",id:"render-pipeline-compatibility",level:3},{value:"\u652f\u6301\u7684\u5e73\u53f0",id:"\u652f\u6301\u7684\u5e73\u53f0",level:3},{value:"Using DLSS",id:"using-dlss",level:2},{value:"Quality modes",id:"quality-modes",level:3}],c={toc:u};function m(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)("wrapper",a({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",a({},{id:"deep-learning-super-sampling"}),"Deep learning super sampling"),(0,r.kt)("p",null,"NVIDIA Deep Learning Super Sampling (DLSS) is a rendering technology that uses artificial intelligence to increase graphics performance and quality. You can use it to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Run real-time ray traced worlds at high frame rates and resolutions."),(0,r.kt)("li",{parentName:"ul"},"Provide a performance and quality boost for rasterized graphics. This is particularly useful for virtual reality applications to help them run at higher frame rates. This helps to remove disorientation, nausea, and other negative effects that occur at lower frame rates.")),(0,r.kt)("p",null,"For more information about DLSS, see the ",(0,r.kt)("a",a({parentName:"p"},{href:"https://developer.nvidia.com/dlss"}),"NVIDIA documentation"),"."),(0,r.kt)("h2",a({},{id:"requirements-and-compatibility"}),"Requirements and compatibility"),(0,r.kt)("p",null,"This section includes information about the hardware requirements and render pipeline compatibility of DLSS."),(0,r.kt)("p",null,"For information about hardware and driver requirements, see the ",(0,r.kt)("a",a({parentName:"p"},{href:"https://developer.nvidia.com/nvidia-dlss-access-program"}),"NVIDIA documentation"),"."),(0,r.kt)("h3",a({},{id:"render-pipeline-compatibility"}),"Render pipeline compatibility"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",a({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"\u529f\u80fd")),(0,r.kt)("th",a({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"\u5185\u7f6e\u6e32\u67d3\u7ba1\u7ebf")),(0,r.kt)("th",a({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"\u901a\u7528\u6e32\u67d3\u7ba1\u7ebf (URP)")),(0,r.kt)("th",a({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"\u9ad8\u6e05\u6e32\u67d3\u7ba1\u7ebf (HDRP)")),(0,r.kt)("th",a({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Scriptable Render Pipeline (SRP)")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",a({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},"DLSS")),(0,r.kt)("td",a({parentName:"tr"},{align:null}),"No (1)"),(0,r.kt)("td",a({parentName:"tr"},{align:null}),"No (1)"),(0,r.kt)("td",a({parentName:"tr"},{align:null}),"\u662f"),(0,r.kt)("td",a({parentName:"tr"},{align:null}),"No (1)")))),(0,r.kt)("p",null," ",(0,r.kt)("strong",{parentName:"p"},"\u6ce8\u610f")," \uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The low-level DLSS framework code is in core Unity, but HDRP is the only render pipeline that uses it to implement DLSS. For more information, see the ",(0,r.kt)("a",a({parentName:"li"},{href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/NVIDIA.GraphicsDevice.CreateGraphicsDevice.html"}),"API documentation"),".")),(0,r.kt)("h3",a({},{id:"\u652f\u6301\u7684\u5e73\u53f0"}),"\u652f\u6301\u7684\u5e73\u53f0"),(0,r.kt)("p",null,"Unity supports DLSS on the following platforms:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"DirectX 11 on Windows 64 bit"),(0,r.kt)("li",{parentName:"ul"},"DirectX 12 on Windows 64 bit"),(0,r.kt)("li",{parentName:"ul"},"Vulkan on Windows 64 bit.")),(0,r.kt)("p",null,"Unity does not support DLSS for  ",(0,r.kt)("strong",{parentName:"p"},"Metal")," ,  ",(0,r.kt)("strong",{parentName:"p"},"Linux")," ,  ",(0,r.kt)("strong",{parentName:"p"},"Windows"),"  using  ",(0,r.kt)("strong",{parentName:"p"},"x86"),"  architecture (Win32), or any other platform. To build your project for  ",(0,r.kt)("strong",{parentName:"p"},"Windows")," , use  ",(0,r.kt)("strong",{parentName:"p"},"x86","_","64"),"  architecture (Win64)."),(0,r.kt)("p",null,"For information about the hardware requirements of DLSS, see ",(0,r.kt)("a",a({parentName:"p"},{href:"https://developer.nvidia.com/nvidia-dlss-access-program"}),"NVIDIA\u2019S DLSS requirements"),"."),(0,r.kt)("h2",a({},{id:"using-dlss"}),"Using DLSS"),(0,r.kt)("p",null,"For information on how to use DLSS in HDRP, see ",(0,r.kt)("a",a({parentName:"p"},{href:"https://docs.unity3d.com/Packages/com.unity.render-pipelines.high-definition@latest?subfolder=/manual/deep-learning-super-sampling-in-hdrp.html"}),"Deep learning super sampling in HDRP"),"."),(0,r.kt)("p",null,(0,r.kt)("img",a({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/dlss-off.png",alt:"dlss-off.png"}))),(0,r.kt)("p",null,">"," The ",(0,r.kt)("a",a({parentName:"p"},{href:"https://blogs.unity3d.com/2019/08/19/now-available-the-spaceship-demo-project-using-vfx-graph-and-high-definition-render-pipeline/"}),"Spaceship Demo Project")," rendered with a screen percentage of 50 without DLSS. The image is blurry, especially around the spark visual effect."),(0,r.kt)("p",null,(0,r.kt)("img",a({parentName:"p"},{src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/dlss-on.png",alt:"dlss-on.png"}))),(0,r.kt)("p",null,">"," The Spaceship Demo Project rendered with a screen percentage of 50, but using DLSS. This image is less blurry than the previous image, especially around the spark visual effect."),(0,r.kt)("h3",a({},{id:"quality-modes"}),"Quality modes"),(0,r.kt)("p",null,"The available quality modes are as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Auto")," : Selects the best DLSS mode for the current output resolution."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Balance")," : Balances performance with image quality."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Quality")," : Emphasizes image quality over performance."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Performance")," : Emphasizes performance and image quality."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ultra Performance")," : Produces the highest performance and the lowest image quality.")))}m.isMDXComponent=!0}}]);