<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://danyow.github.io/blog</id>
    <title>Danyow Blog</title>
    <updated>2022-04-11T16:11:32.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://danyow.github.io/blog"/>
    <subtitle>Danyow Blog</subtitle>
    <icon>https://danyow.github.io/img/favicon.ico</icon>
    <rights>Copyright © 2022 Danyow, Inc.</rights>
    <entry>
        <title type="html"><![CDATA[Google Play Developer Publishing API]]></title>
        <id>/2021/google-publishing-api</id>
        <link href="https://danyow.github.io/blog/2021/google-publishing-api"/>
        <updated>2022-04-11T16:11:32.000Z</updated>
        <summary type="html"><![CDATA[获取 API 访问权限]]></summary>
        <content type="html"><![CDATA[<p>获取 API 访问权限
利用 Google Play Developer Publishing API 实现应用配置自动化，并将应用版本整合到您现有的工具和流程中。</p><ol><li>打开 <em>Google Play 管理中心(Google Play Console)</em></li><li>单击 <em>账户详情</em> ，然后下滑找到并记下其中列出的 <em>开发者账号 ID</em></li><li>单击 <em>设置</em> → <em>API 权限</em></li><li>单击 <em>选择要关联的项目</em></li><li>单击 <em>我同意</em> → <em>创建新项目</em> → <em>关联项目</em></li><li>在 <strong>服务账号</strong> 这一栏目里面有 单击 <em>创建新的服务账号</em>.</li><li>在弹出的对话框中的 <em>Google 云端平台(Google Cloud Platform)</em> 链接，该链接将打开一个新标签页：<ol><li>在 <strong>搜索框</strong> 左边有一个 下来框, 如果显示 <strong>选择项目</strong>, 需要下来选择到 <em>Google Play Console Developer</em></li><li>然后 <em>创建服务账号</em><ol><li>输入 <em>服务账号名称</em> → 输入 <em>服务账号说明</em></li><li>点击 <em>创建并继续</em></li><li>单击 <em>请选择一个角色</em> → 筛选框内输入 <code>Service Account User</code> 并选中筛选结果.</li><li>直接点击继续</li></ol></li><li>得到一个账号后, 在<code>操作</code>那里有垂直三点图标, 点开选中 <em>管理密钥</em> → <em>添加密钥</em> → 选择 <code>JSON</code> 后直接创建.</li><li>这时候浏览器将会提示将文件保存在计算机上，并记住文件保存到的位置.</li></ol></li><li>返回 <em>Google Play 管理中心</em> 标签页，然后点击 <em>完成</em> 以关闭对话框</li><li>然后底部就会出现一个新的服务账户 单击 <em>授予访问权</em>.</li><li>建议直接选择 <em>管理员(所有权限)</em> → <em>邀请用户</em> → <em>发送邀请</em></li><li>完成.</li></ol>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lua]]></title>
        <id>/2021/lua-lean</id>
        <link href="https://danyow.github.io/blog/2021/lua-lean"/>
        <updated>2022-04-11T16:11:32.000Z</updated>
        <summary type="html"><![CDATA[Lua 程序设计（第 4 版）]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="lua-程序设计第-4-版">Lua 程序设计（第 4 版）<a class="hash-link" href="#lua-程序设计第-4-版" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="运算符">运算符<a class="hash-link" href="#运算符" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_CBWl language-lua theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-lua codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">local</span><span class="token plain"> a </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">15</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#8250DF">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token operator" style="color:#D73A49">^</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-- 225</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="注释技巧">注释技巧<a class="hash-link" href="#注释技巧" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_CBWl language-lua theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-lua codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#8250DF">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"Hello world"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--[[ 加多一个`-`就可以解开这段代码的注释</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">print("Hello world")</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">--]]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---[[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#8250DF">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"Hello world"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--]]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="加载文件">加载文件<a class="hash-link" href="#加载文件" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_CBWl language-lua theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-lua codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">--- 打开指定的文件并将其内容作为 Lua 块执行。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 当不带参数调用时，`dofile` 执行标准输入（`stdin`）的内容。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 返回块返回的所有值。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 如果出现错误，`dofile` 会将错误传播给它的调用者（即，`dofile` 不在保护模式下运行）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@overload fun():table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@param filename string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@return table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">function</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">dofile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filename</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#CF222E">end</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="内存回收">内存回收<a class="hash-link" href="#内存回收" title="标题的直接链接">​</a></h3><p>把 <code>nil</code> 赋值给全局变量时, <code>Lua</code> 会回收该全局变量.</p><blockquote><p>主动内存回收 调用函数 <code>collectgarbage()</code></p></blockquote><div class="codeBlockContainer_CBWl language-lua theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-lua codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 此函数是垃圾收集器的通用接口。它根据第一个参数 `opt` 执行不同的功能：</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"collect"**:      执行完整的垃圾收集循环。这是默认选项。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"stop"**:         停止垃圾收集器的自动执行。收集器仅在显式调用时运行，直到调用重新启动它。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"restart"**:      重新启动垃圾收集器的自动执行。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"count"**:        以千字节为单位返回 Lua 使用的总内存。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---               该值有一个小数部分，因此乘以 1024 给出 Lua 使用的确切字节数（溢出除外）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"step"**:         执行垃圾收集步骤。步长“大小”由`arg`控制。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---               对于零值，收集器将执行一个基本（不可分割的）步骤。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---               对于非零值，收集器将执行该内存量（以千字节为单位）已由 Lua 分配。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---               如果该步骤完成了一个收集周期，则返回 `true`。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"setpause"**:     将 `arg` 设置为收集器暂停的新值（参见第 2.5 节）。返回 `pause` 的前一个值。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"incremental"**:  将收集器模式更改为增量。此选项后面可以跟三个数字：垃圾收集器暂停、步长乘数和步长。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"generational"**: 将收集器模式更改为分代。此选项后面可以跟两个数字：垃圾收集器次要乘数和主要乘数。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- **"isrunning"**:    返回一个布尔值，告诉收集器是否正在运行（即，未停止）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@overload fun():any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@param opt string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@param arg string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@return any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">function</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">collectgarbage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">opt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> arg</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">end</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="浅析lua异常捕获处理机制"><a href="https://blog.csdn.net/mycwq/article/details/49256003" target="_blank" rel="noopener noreferrer">浅析lua异常捕获处理机制</a><a class="hash-link" href="#浅析lua异常捕获处理机制" title="标题的直接链接">​</a></h3><p>lua 有两个函数可用于捕获异常：pcall 和 xpcall，这两个函数很类似，都会在保护模式下执行函数，效果类似 try-catch，可捕获并处理异常。</p><div class="codeBlockContainer_CBWl language-lua theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-lua codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">--- 在保护模式下使用给定的参数调用函数`f`。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 这意味着`f` 中的任何错误都不会传播；</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 相反，`pcall` 会捕获错误并返回一个状态代码。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 它的第一个结果是状态代码（一个布尔值），如果调用成功且没有错误，则为真。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 在这种情况下，`pcall` 还会在第一个结果之后返回调用的所有结果。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 如果出现任何错误，`pcall` 返回 false 加上错误消息。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@overload fun(f:fun():any):boolean|table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@param f fun():any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@param arg1 table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@return boolean|table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">function</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">pcall</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">f</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> arg1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--- 这个函数类似于`pcall`，除了它设置了一个新的消息处理程序`msgh`。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@param f fun():any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@param msgh fun():string message handle</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---@return any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">function</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">xpcall</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">f</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> msgh</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> arg1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">end</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>对比两个函数，xpcall 多了一个消息处理参数 msgh。 对于 pcall，异常处理完时只简单记录错误信息，然后释放调用栈空间， 而对于 xpcall，这个参数可用于在调用栈释放前跟踪到这些数据。效果如下：</p><div class="codeBlockContainer_CBWl language-Shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-Shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; f=function(...) error(...) end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; pcall(f, 123)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">false   stdin:1: 123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; xpcall(f, function(e) print(debug.traceback()) return e end, 123)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">stack traceback:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stdin:1: in function &lt;stdin:1&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        [C]: in function 'error'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stdin:1: in function 'f'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        [C]: in function 'xpcall'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stdin:1: in main chunk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        [C]: in ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">false   stdin:1: 123</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>值得注意的是， msgh 的传入参数是异常数据，函数结束时必须将这个数据返回，才能实现和 pcall 一样的返回值</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[安装ArchWSL]]></title>
        <id>/2021/archwsl</id>
        <link href="https://danyow.github.io/blog/2021/archwsl"/>
        <updated>2022-03-15T09:42:42.000Z</updated>
        <summary type="html"><![CDATA[先决条件]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="先决条件">先决条件<a class="hash-link" href="#先决条件" title="标题的直接链接">​</a></h2><ul><li>Windows 10 1709 秋季创意者更新或者更高版本</li><li>开启 <code>适用于 Linux 的 Windows 子系统</code> 功能</li><li>其中有一步比较重要: <a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package" target="_blank" rel="noopener noreferrer"><code>下载 Linux 内核更新包</code></a></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装-archwsl">安装 <code>ArchWSL</code><a class="hash-link" href="#安装-archwsl" title="标题的直接链接">​</a></h2><ol><li><code>scoop bucket add extras</code></li><li><code> scoop install archwsl</code></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="启动并初始化">启动并初始化<a class="hash-link" href="#启动并初始化" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="设置-root-密码">设置 <code>Root</code> 密码<a class="hash-link" href="#设置-root-密码" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> arch.exe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@danyow</span><span class="token punctuation" style="color:#393A34">]</span><span class="token comment" style="color:#999988;font-style:italic"># passwd</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="设置默认用户">设置默认用户<a class="hash-link" href="#设置默认用户" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@danyow</span><span class="token punctuation" style="color:#393A34">]</span><span class="token comment" style="color:#999988;font-style:italic"># echo "%wheel ALL=(ALL) ALL" &gt; /etc/sudoers.d/wheel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@danyow</span><span class="token punctuation" style="color:#393A34">]</span><span class="token comment" style="color:#999988;font-style:italic"># useradd -m -G wheel -s /bin/bash danyow</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@danyow</span><span class="token punctuation" style="color:#393A34">]</span><span class="token comment" style="color:#999988;font-style:italic"># passwd danyow</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@danyow</span><span class="token punctuation" style="color:#393A34">]</span><span class="token comment" style="color:#999988;font-style:italic"># exit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> arch.exe config --default-user danyow</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="重启-lxssmanager-可选">重启 <code>LxssManager</code> (可选)<a class="hash-link" href="#重启-lxssmanager-可选" title="标题的直接链接">​</a></h4><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">net stop lxssmanager </span><span class="token operator" style="color:#D73A49">|</span><span class="token plain"> net start lxssmanager</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="初始化密钥环-keyring">初始化密钥环 <code>keyring</code><a class="hash-link" href="#初始化密钥环-keyring" title="标题的直接链接">​</a></h4><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> arch.exe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">danyow@danyow</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ </span><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> pacman-key --init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">danyow@danyow</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ </span><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> pacman-key --populate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">danyow@danyow</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ </span><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> pacman -Syy archlinux-keyring</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="添加源-aur">添加源 <code>aur</code><a class="hash-link" href="#添加源-aur" title="标题的直接链接">​</a></h4><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">vim</span><span class="token plain"> /etc/pacman.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">### 加入内容</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">archlinuxcn</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> https://repo.archlinuxcn.org/</span><span class="token variable" style="color:#E36209">$arch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">### 结束</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> pacman -Syy </span><span class="token operator" style="color:#D73A49">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> pacman -S archlinuxcn-keyring </span><span class="token operator" style="color:#D73A49">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> pacman -S yay</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装-glibc-linux4">安装 <code>glibc-linux4</code><a class="hash-link" href="#安装-glibc-linux4" title="标题的直接链接">​</a></h4><p><code>sudo pacman -S glibc-linux4</code> or <code>yay -S glibc-linux4</code></p><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装-fakeroot-tcp">安装 <code>fakeroot-tcp</code><a class="hash-link" href="#安装-fakeroot-tcp" title="标题的直接链接">​</a></h4><p><code>yay -S fakeroot-tcp</code></p><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装-make-gcc-cargo">安装 <code>make</code> <code>gcc</code> <code>cargo</code><a class="hash-link" href="#安装-make-gcc-cargo" title="标题的直接链接">​</a></h4><p><code>yay -S make gcc cargo</code></p><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装-genie-systemd-git">安装 <code>genie-systemd-git</code><a class="hash-link" href="#安装-genie-systemd-git" title="标题的直接链接">​</a></h4><p><code>yay -S genie-systemd-git</code></p>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[笔记]]></title>
        <id>/2021/note</id>
        <link href="https://danyow.github.io/blog/2021/note"/>
        <updated>2022-03-15T09:42:42.000Z</updated>
        <summary type="html"><![CDATA[Windows]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="windows">Windows<a class="hash-link" href="#windows" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="查看端口被占用">查看端口被占用<a class="hash-link" href="#查看端口被占用" title="标题的直接链接">​</a></h3><p><code>netstat –ano</code></p><p><code>netstat</code></p>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scoop的安装]]></title>
        <id>/2019/scoop</id>
        <link href="https://danyow.github.io/blog/2019/scoop"/>
        <updated>2020-06-14T14:55:00.000Z</updated>
        <summary type="html"><![CDATA[Title: 目前暂不推荐, 因为自带的软件较少, 而且更多的需要使用到别人的 Bucket .]]></summary>
        <content type="html"><![CDATA[<p>Title: <del>目前暂不推荐, 因为自带的软件较少, 而且更多的需要使用到别人的 <em>Bucket</em> .</del></p><p>反省一下，比起之前的 <em>Chocolatey</em> 来说，还是推荐的，因为它更加适合程序员和具有高度强迫症的患者。</p><blockquote><p>优点：</p></blockquote><ol><li>环境和后续安装的软件都可以不放在<strong>C</strong>盘</li><li>扩展包也比较丰富</li></ol><blockquote><p>缺点：</p></blockquote><ol><li>如果网速慢的情况下（因为使用到了 <em>github</em> ）安装某个包的时候，可能会出现半天安装不上的情况，这时候取消的话会使得 <em>scoop</em> 误以为安装完成，这时需要卸载。</li><li>后续依据使用情况补充</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="scoop的安装">Scoop的安装<a class="hash-link" href="#scoop的安装" title="标题的直接链接">​</a></h2><ol><li><p><em>PowerShell</em> 下运行下述内容，确保 <em>PowerShell</em> 允许可以执行本地脚本。</p><p><code>Set-ExecutionPolicy RemoteSigned -scope CurrentUser</code></p></li><li><p>然后安装 <em>Scoop</em> ，看网速来的。</p><p><code>Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')</code></p><p>or 更短的</p><p><code>iwr -useb get.scoop.sh | iex</code></p></li><li><p>进入桶子环境准备阶段。即添加 <em>Bucket</em> 库。但由于 <em>Bucket</em> 是依托于 <em>Github</em> ，所以要先安装 <em>git</em> 环境</p><p><code>scoop install git</code></p></li></ol><p>如果你没有 7zip 的话，会顺手给你安装git的依赖。</p><div class="codeBlockContainer_CBWl language-txt theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-txt codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">  7zip 21.06 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  adb 31.0.3 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  adopt8-hotspot 8u292-b10 [java]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  android-sdk 4333796 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ant 1.10.12 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  archwsl 21.8.28.0 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  beyondcompare-zh-cn 4.4.0.25886 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  brotli 1.0.9_6 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cacert 2021-10-26 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ccleaner 5.87.9306 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  clash-for-windows 0.19.1 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cmake 3.22.1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  codeblocks-mingw 20.03 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  curl 7.80.0 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dark 3.11.2 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dingtalk 6.3.5.10278702 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DirectX 9.29.1974.1-June2010 [Scoop-Ash258]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  diskgenius 5.4.2.1239 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  docker-machine 0.16.2 [silver886]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  docker-nightly nightly-20211121 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dotnet-sdk 6.0.100 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  EpicGamesLauncher 13.0.0 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  gcc 11.2.0-9.0.0-r3 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git 2.34.1.windows.1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  github 2.9.5 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  gradle-bin 7.3.1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  innounp 0.50 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ipfs-desktop 0.17.0 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  jetbrains-toolbox 1.22.10774 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  k2pdfopt 2.53 [seu]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lcow v4.14.35-v0.3.9 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lessmsi 1.10.0 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  meshlab 2021.10 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  microsoftedge  *failed*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mls-software-openssh 8.8p1-1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mongodb 5.2.0-rc0 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  motrix 1.6.11 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  msys2 2021-11-30 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nginx 1.21.4 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nodejs-lts 16.13.1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nuget 6.0.0 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nuwen-mingw-gcc 11.2.0-18.0 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nvidia-display-driver-dch-np 7 *failed*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  obs-studio 27.1.3 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  office-tool-plus 8.1.5.15 [Master-Hash]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  openjdk 17.0.1-12 [java]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  openssl 3.0.0 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  oraclejdk8 8u291 [iszy]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  oraclejre8 8u311 [java]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  poedit 3.0.6387 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  potplayer 211118 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  powertoys-np 0.51.1 [nonportable]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  premake 5.0.0-beta1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  protobuf 3.19.1 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pxcook 3.9.960.202101211055 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  python 3.10.1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  python27 2.7.18 [versions]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  RevokeMsgPatcher 1.1 [Darkatse]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  rime-weasel-np 0.14.3.0 [scoop-jingyu9575]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ruby 3.0.3-1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  rufus 3.17 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Sejda-pdf 7.3.7 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  SogouPinyin-Portable 0.3 [scoop-zapps]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sourcetree 3.4.7 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  steam nightly-20200928 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sudo 0.2020.01.26 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  telnet msys-inetutils-1.7-1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  todesk 4.1.0 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  TranslucentTb 2020.2 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  VcXsrv 1.20.9.0 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  virtualbox-np 6.1.30 [nonportable]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  vscode 1.63.0 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  wechat nightly-20200613 [dorado]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  wget 1.21.2 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  winscp 5.19.5 [extras]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Writage 2.7.2 [cvp]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  yarn 1.22.15 [main]</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div>]]></content>
        <category label="Windows" term="Windows"/>
        <category label="笔记" term="笔记"/>
        <category label="scoop" term="scoop"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[部署新安装的centos服务器]]></title>
        <id>/2020/server</id>
        <link href="https://danyow.github.io/blog/2020/server"/>
        <updated>2020-01-28T09:42:42.000Z</updated>
        <summary type="html"><![CDATA[服务器链接超时解决]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="服务器链接超时解决">服务器链接超时解决<a class="hash-link" href="#服务器链接超时解决" title="标题的直接链接">​</a></h2><p><code>vim /etc/ssh/sshd_config</code> 修改里面的两个参数</p><div class="codeBlockContainer_CBWl language-config theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-config codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">ClientAliveInterval 60</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ClientAliveCountMax 60</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>然后重启<code>ssh</code></p><p><code>systemctl restart ssh</code></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="出现报错">出现报错<a class="hash-link" href="#出现报错" title="标题的直接链接">​</a></h2><p>内容<code>Failed to set locale, defaulting to C.UTF-8</code></p><p>执行<code>echo "export LC_ALL=en_US.UTF-8"  &gt;&gt;  /etc/profile</code></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装docker">安装<code>docker</code><a class="hash-link" href="#安装docker" title="标题的直接链接">​</a></h2><ol><li><p>卸载旧的版本</p><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> yum remove </span><span class="token function" style="color:#8250DF">docker</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                docker-client </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                docker-client-latest </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                docker-common </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                docker-latest </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                docker-latest-logrotate </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                docker-logrotate </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                docker-engine</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>安装依赖</p><p><code>sudo yum install -y yum-utils  device-mapper-persistent-data  lvm2</code>
<code>sudo yum-config-manager  --add-repo   https://download.docker.com/linux/centos/docker-ce.repo</code>
<code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p></li><li><p>更新containerd.io</p><p><code>dnf install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm</code></p></li><li><p>安装</p><p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p></li><li><p>启动docker</p><p><code>sudo systemctl start docker</code></p></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="创建-dockerfile">创建 <code>Dockerfile</code><a class="hash-link" href="#创建-dockerfile" title="标题的直接链接">​</a></h2><ol><li><p>创建 <code>docker/Dockerfile</code></p><p><code>mkdir docker &amp;&amp; cd docker &amp;&amp; vim Dockerfile</code></p></li><li><p>加入下面内容</p><div class="codeBlockContainer_CBWl language-docker theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-docker codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">FROM jenkins/jenkins:lts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">USER root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WORKDIR /dotnet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN wget -O dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/c4b503d6-2f41-4908-b634-270a0a1dcfca/c5a20e42868a48a2cd1ae27cf038044c/dotnet-sdk-3.1.101-linux-x64.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN tar zxf dotnet.tar.gz -C ./</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN rm -rf dotnet.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ENV PATH="${PATH}:/dotnet:/var/jenkins_home/.dotnet/tools"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ENV DOTNET_ROOT="/dotnet"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt update -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt install icu-devtools vim zip unzip -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN usermod -a -G root jenkins</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">USER jenkins</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ol><li>这个Docker镜像基于jenkins</li><li>设置当前用户为root，因为后面安装需要使用root</li><li>设置当前工作目录为dotnet</li><li>下载dotnet SDK包，保存为dotnet.tar.gz。这里要注意下载正确版本的SDK，可前往微软官方网站获取下载链接：<a href="https://dotnet.microsoft.com/download" target="_blank" rel="noopener noreferrer">https://dotnet.microsoft.com/download</a></li><li>解压dotnet SDK到当前目录，即/dotnet目录</li><li>删除dotnet SDK包</li><li>把dotnet目录和dotnet tools目录添加到环境变量PATH，这样就可以使用dotnet命令了</li><li>设置DOTNET_ROOT变量</li><li>更新源</li><li>安装一些必需的，常用的工具包，其中icu-devtools是运行dotnet需要的</li><li>修改jenkins用户到root附加组</li><li>设置当前用户为jenkins</li></ol></li><li><p>生成镜像</p><p><code>docker build -t jenkins:dotnet .</code></p></li><li><p>查看所有镜像</p><p><code>docker image</code></p></li><li><p>运行<code>docker</code>实例</p><p><code>docker run -p 8080:8080 -p 50000:50000 --name jenkins jenkins:dotnet</code></p></li><li><p>获取密码和访问链接</p><ol><li>自定义安装</li><li>补充安装<code>GitHub</code>和<code>Publish Over SSH</code></li></ol></li><li><p>添加编译执行脚本</p><p><code>dotnet publish</code></p></li><li><p>构建</p></li><li><p>添加 <code>github webhook</code></p></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="直接部署项目">直接部署项目<a class="hash-link" href="#直接部署项目" title="标题的直接链接">​</a></h2><ol><li><p>安装<code>git</code></p><p><code>yum install git</code></p></li><li><p>克隆</p></li><li><p><code>docker build -t dotnet .</code></p></li><li><p><code>docker run -d -p 8080:80 dotnet</code></p></li></ol>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust]]></title>
        <id>/2019/rust</id>
        <link href="https://danyow.github.io/blog/2019/rust"/>
        <updated>2019-12-04T22:39:06.000Z</updated>
        <summary type="html"><![CDATA[Title: Mac 下学习使用 Rust]]></summary>
        <content type="html"><![CDATA[<p>Title: Mac 下学习使用 <em>Rust</em></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装">安装<a class="hash-link" href="#安装" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="brew-安装">brew 安装<a class="hash-link" href="#brew-安装" title="标题的直接链接">​</a></h3><p>测试之后, 环境有很多内容有没安装上, 估计也是没有配置环境的原因</p><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="官网方法">官网方法<a class="hash-link" href="#官网方法" title="标题的直接链接">​</a></h3><ol><li><p><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh</code></p></li><li><p>导入环境参数 <code>export PATH="$PATH:$HOME/.cargo/bin"</code></p></li><li><p><code>rustc --version</code></p></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="入门">入门<a class="hash-link" href="#入门" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="rustc-编译">rustc 编译<a class="hash-link" href="#rustc-编译" title="标题的直接链接">​</a></h3><p>随便写一个 <code>main.rs</code> 文件, 然后键入下述内容.</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Hello, world!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>然后执行<code>rustc main.rs</code>得到编译后的可执行文件<code>./main</code>即可看到打印</p><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="cargo">Cargo<a class="hash-link" href="#cargo" title="标题的直接链接">​</a></h3><p>如果安装的时候用的是官网的方法的话, 是会让你选择第几个安装方式, 我们通常选择第一个采用默认的方式, 这样就会把Cargo所需要的也就一起下载安装下来了. 在到我们配置环境输入的<code>PATH</code>也是一样</p><ol><li><p>新建项目
<code>cargo new hello_cargo</code></p></li><li><p>编译项目
<code>cargo build</code> or <code>cargo build --release</code></p></li><li><p>运行项目
<code>cargo run</code></p></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="编写猜谜游戏">编写猜谜游戏<a class="hash-link" href="#编写猜谜游戏" title="标题的直接链接">​</a></h3><ol><li><p>直接编写</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::io;    // 使用标准库的io</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Guess the number!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Please input your guess.");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut guess = String::new(); // 定义一个可变的变量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    io::stdin().read_line(&amp;mut guess)   // 换行的原因只是因为过长了</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .expect("Failed to read line"); // 处理可能的报错</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("You guessed: {}", guess);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>加入<code>rand</code>库</p><p>在<code>Cargo.toml</code>文件中加入</p><div class="codeBlockContainer_CBWl language-toml theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-toml codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">[dependencies]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rand = "0.3.14"</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>然后编译<code>cargo build</code>或者是<code>cargo run</code>可能会遇到
<code>Blocking waiting for file lock on package cache</code>
如果执行得是<code>cargo update</code>就不会遇到<code>Cargo.lock</code>文件了</p><p>这里指定了<code>0.3.14</code>版本并不是真的就只使用该版本, 而是会使用兼容该版本的更高版本</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::io;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use rand::Rng;  // 导入 随机库</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Guess the number!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let secret_number = rand::thread_rng().gen_range(1, 101);   // 生成一个 0 ~ 100 的随机数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("The secret number is: {}", secret_number);    // 测试打印</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Please input your guess.");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut guess = String::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    io::stdin().read_line(&amp;mut guess)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .expect("Failed to read line");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // trim 的是就是删除某些东西 由于 键入的时候最后面会敲击回车 导致\n会加入进来</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let guess: u32 = guess.trim().parse()   // 用 同一个变量名 去覆盖 guess 并转成 u32类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .expect("Please type a number!");   // 转换类型也是有可能报错的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("You guessed: {}", guess);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    match guess.cmp(&amp;secret_number) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Ordering::Less =&gt; println!("Too small!"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Ordering::Greater =&gt; println!("Too big!"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Ordering::Equal =&gt; println!("You win!"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>加入循环</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// --snip--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("The secret number is: {}", secret_number);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    loop {  // 加入循环</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        println!("Please input your guess.");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // --snip--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        match guess.cmp(&amp;secret_number) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Ordering::Less =&gt; println!("Too small!"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Ordering::Greater =&gt; println!("Too big!"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Ordering::Equal =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                println!("You win!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                break;  // 在这里退出循环</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>处理非数字的输入</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// --snip--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">io::stdin().read_line(&amp;mut guess)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .expect("Failed to read line");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 加入match来对报错的 continue来处理非数字的输入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let guess: u32 = match guess.trim().parse() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Ok(num) =&gt; num,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Err(_) =&gt; continue,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("You guessed: {}", guess);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// --snip--</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="通用编程概念">通用编程概念<a class="hash-link" href="#通用编程概念" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="变量和可变性">变量和可变性<a class="hash-link" href="#变量和可变性" title="标题的直接链接">​</a></h4><ol><li>这里的变量不是指能变的量, 而是一个定义, 但只要赋予了 <code>mut</code> 才是真的可以变</li><li>常量的命名规则 单词全大写 下划线分隔 就连int <code>100,000</code> 都可以表示为 <code>100_000</code></li><li>变量可以被重复声明并覆盖原值 但不能改变原有数据类型 也就是不能 string =&gt; int</li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="资料类型">资料类型<a class="hash-link" href="#资料类型" title="标题的直接链接">​</a></h4><ol><li><p>编译时需要帮忙确定类型</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let guess: u32 = "42".parse().expect("Not a number!");</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>整型的表示形式有</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    小数        98_222</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    十六        0xff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    八进        0o77</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    二元        0b1111_0000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    字节（u8仅） b'A'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*/</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>bool类型就只有真假 不会默认帮忙转换</p></li><li><p>元组</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let x: (i32, f64, u8) = (500, 6.4, 1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let five_hundred = x.0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let six_point_four = x.1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let one = x.2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>数组</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let c: [i32; 5] = [1, 2, 3, 4, 5];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let b = [3; 5];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let a = [1, 2, 3, 4, 5];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let first = a[0];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let second = a[1];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="函数">函数<a class="hash-link" href="#函数" title="标题的直接链接">​</a></h4><ol><li><p>不带;表示返回值</p></li><li><p>指定返回值</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn plus_one(x: i32) -&gt; i32 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    x + 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="注释">注释<a class="hash-link" href="#注释" title="标题的直接链接">​</a></h4><p>讲解Crates.io的时候才说</p><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="控制流">控制流<a class="hash-link" href="#控制流" title="标题的直接链接">​</a></h4><ol><li><p>使用<code>if</code>的<code>let</code>语句</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain"> fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     let condition = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     let number = if condition {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     println!("The value of number is: {}", number);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> }</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>从循环里面返回值出来</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut counter = 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let result = loop {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        counter += 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if counter == 10 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            break counter * 2;// 我在想 这里没有; 为什么也能有值返回出去呢?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("The result is {}", result);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>遍历</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let a = [10, 20, 30, 40, 50];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 方法1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for element in a.iter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        println!("the value is: {}", element);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 方法2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for number in (1..4).rev() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        println!("{}!", number);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 方法3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    while index &lt; 5 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        println!("the value is: {}", a[index]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        index += 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="所有权">所有权<a class="hash-link" href="#所有权" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="什么是所有权">什么是所有权<a class="hash-link" href="#什么是所有权" title="标题的直接链接">​</a></h4><ol><li><p>每个内存只能被所有一次, 一旦被接管了就没了.</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 下述代码就会报错</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s1 = String::from("hello");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s2 = s1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("{}, world!", s1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    error[E0382]: use of moved value: `s1`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --&gt; src/main.rs:5:28</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    3 |     let s2 = s1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    |         -- value moved here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    4 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    5 |     println!("{}, world!", s1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    |                            ^^ value used here after move</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    = note: move occurs because `s1` has type `std::string::String`, which does</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    not implement the `Copy` trait</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*/</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>如果想要拿到一样的内容的话 使用 <code>clone</code></p></li><li><p>对基础数据类型操作的是 会自动调用 <code>copy</code>, 由于都是在栈区, 不会产生新的内存空间</p></li><li><p>如果直接把某个变量交付给某个函数, 而该函数没有移交所有权出来的话, 他将不能再被使用了</p></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="引用和借阅">引用和借阅<a class="hash-link" href="#引用和借阅" title="标题的直接链接">​</a></h3><ol><li><p><code>&amp;</code> 表示引用该参数, 但不能进行变更, 如果要变更的话 需要 <code>&amp;mut</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut s = String::from("hello");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    change(&amp;mut s);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn change(some_string: &amp;mut String) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    some_string.push_str(", world");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>不能有两次可变引用, 因为不知道依据谁的改变</p></li><li><p>同上, 如果还存在多个后续依旧会使用的不可变引用时候, 不能创建可变引用, 因为不可变的引用是不知道可变引用的存在的, 但如果在使用后并且后续不再使用了之后, 就允许创建可变引用了</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let mut s = String::from("hello");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let r1 = &amp;s; // no problem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let r2 = &amp;s; // no problem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("{} and {}", r1, r2);  // 这里使用之后 后续就不再使用了 说明是可以的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// r1 and r2 are no longer used after this point</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let r3 = &amp;mut s; // no problem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("{}", r3);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>悬空, 什么意思呢, 可以理解为僵尸指针</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain"> fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let reference_to_nothing = dangle();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn dangle() -&gt; &amp;String {    // 这里将返回一个带有引用的数据类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let s = String::from("hello");  // 生成一个新的数据类型, 开辟可以一个新的内存空间</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &amp;s  // 移交引用出去 代表是 我只是借你拿去用的意思</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}   // 但这里就已经被释放了 产生 僵尸指针</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn no_dangle() -&gt; String {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let s = String::from("hello");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s   // 这里是把所有权给出去了 代表是 我开辟的空间 我不要了 你拿去用吧</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}   // 这样给出去的内存就不会被释放了</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="切片类型">切片类型<a class="hash-link" href="#切片类型" title="标题的直接链接">​</a></h4><ol><li><p>先看一个获取第一个单词的函数</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 借阅一个字符串   返回单词的下标</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn first_word(s: &amp;String) -&gt; usize {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 转换为数组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let bytes = s.as_bytes();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 遍历 bytes.iter() 并且创建迭代器 enumerate() 可以理解为 enumerate() 会产生出一个元组来</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for (i, &amp;item) in bytes.iter().enumerate() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //  借阅到了 item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if item == b' ' {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return i;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s.len() // 乍一看没有问题 但, 其实这里涉及到了很多问题, 比方单词长度未知和 s 被销毁了 这组数据就失效了</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>引入切片</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let s = String::from("hello");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let len = s.len();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let slice = &amp;s[0..2];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let slice = &amp;s[..2];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let slice = &amp;s[3..len];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let slice = &amp;s[3..];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let slice = &amp;s[0..len];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let slice = &amp;s[..];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p><code>&amp;str</code> 表示的是切片类型 <code>&amp;String</code> 表示的字符串类型</p></li><li><p>有了切片这个概念之后就可以改写取第一个单词的函数了</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn first_word(s: &amp;String) -&gt; &amp;str {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let bytes = s.as_bytes();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for (i, &amp;item) in bytes.iter().enumerate() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if item == b' ' {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return &amp;s[0..i];    // 直接返回切片</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 刚好这里的 s 是借来的 所以直接拿着这玩意 转借给别人就行了 没我啥事了的意思</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &amp;s[..]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>使用上述代码</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut s = String::from("hello world");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let word = first_word(&amp;s); // 这个切片还是用的 s 的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s.clear(); // 这里就会直接报错了 因为会获取s的可变引用并且把它清空, 而 world是 first_word 借了s又转手给了word的一个不可变引用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("the first word is: {}", word);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>把传入的 <code>&amp;String</code> 类型变成 <code>&amp;str</code> 类型 就可以接受 切片和字符串了 因为字符串就是全切片</p></li><li><p>其他的切片</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">    let a = [1, 2, 3, 4, 5];    // 他的类型是   [i32; 5]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let slice = &amp;a[1..3];       // 切片的类型是 &amp;[i32]</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="使用结构体来构造相关数据">使用结构体来构造相关数据<a class="hash-link" href="#使用结构体来构造相关数据" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="定义和实例化结构">定义和实例化结构<a class="hash-link" href="#定义和实例化结构" title="标题的直接链接">​</a></h4><ol><li><p>定义一个结构体</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">struct User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    username: String,   // 现在先不声明为 &amp;str 切片类型 会涉及到生命周期</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    email: String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sign_in_count: u64,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    active: bool,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn build_user(email: String, username: String) -&gt; User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        email: email,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        username: username,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        active: true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sign_in_count: 1,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 简化写法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn build_user(email: String, username: String) -&gt; User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        email,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        username,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        active: true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sign_in_count: 1,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut user1 = User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        email: String::from("someone@example.com"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        username: String::from("someusername123"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        active: true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sign_in_count: 1,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 点语法直接更改</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    user1.email = String::from("anotheremail@example.com");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 新建user2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let user2 = User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        email: String::from("another@example.com"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        username: String::from("anotherusername567"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        active: user1.active,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sign_in_count: user1.sign_in_count,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 但可以写成这样</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let user2 = User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        email: String::from("another@example.com"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        username: String::from("anotherusername567"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ..user1 // 其他字段沿用该实例</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>元组结构</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">struct Color(i32, i32, i32);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">struct Point(i32, i32, i32);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let black = Color(0, 0, 0);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let origin = Point(0, 0, 0);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>打印结构 首先添加 <code>#[derive(Debug)]</code> 和 然后改 <code>{}</code> 为 <code>{:?}</code> 或 <code>{:#?}</code> 多行打印
单行打印 : 表示打印出来的键值中间的 : ? 表示的是 值 # 表示立起来 变成多行 形式主义.. 个人理解</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">#[derive(Debug)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">struct Rectangle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    width: u32,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    height: u32,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn test_rect() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let rect1 = Rectangle { width: 30, height: 50 };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("rect1 is {:?}", rect1);   // 表示的意思是</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("rect1 is {:#?}", rect1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="方块语法">方块语法<a class="hash-link" href="#方块语法" title="标题的直接链接">​</a></h4><ol><li><p>实现一个方法</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">#[derive(Debug)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">struct Rectangle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    width: u32,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    height: u32,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 实现 可以有多个实现</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">impl Rectangle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 这里的self都只是借来的 只做访问变量使用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 但如果要用来修改其内容的话 也是需要加上mut</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn area(&amp;self) -&gt; u32 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self.width * self.height</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">impl Rectangle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 可以理解为定义了一个 类函数 只能通过类来调用 调用方式 采用 :: 双冒号形式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn square(size: u32) -&gt; Rectangle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Rectangle { width: size, height: size }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let rect1 = Rectangle { width: 30, height: 50 };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "The area of the rectangle is {} square pixels.",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rect1.area()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let sq = Rectangle::square(3)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>自动修改调用的第一个参数类型, 仅仅针对 <code>self</code> 参数   会自动添加他的变体 <code>&amp;</code>，<code>&amp;mut</code> 或 <code>*</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">#![allow(unused_variables)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    #[derive(Debug,Copy,Clone)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    struct Point {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        x: f64,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        y: f64,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    impl Point {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fn distance(&amp;self, other: &amp;Point) -&gt; f64 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let x_squared = f64::powi(other.x - self.x, 2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let y_squared = f64::powi(other.y - self.y, 2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            f64::sqrt(x_squared + y_squared)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let p1 = Point { x: 0.0, y: 0.0 };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let p2 = Point { x: 5.0, y: 6.5 };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 这两个方法的调用时一无所谓的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p1.distance(&amp;p2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    (&amp;p1).distance(&amp;p2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="枚举">枚举<a class="hash-link" href="#枚举" title="标题的直接链接">​</a></h4><ol><li><p>不得不承认 这么没有很吸引我</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 正常使用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enum IpAddrKind {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    V4,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    V6,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 混用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enum IpAddr {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    V4(u8, u8, u8, u8),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    V6(String),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">struct Ipv4Addr {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// --snip--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">struct Ipv6Addr {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // --snip--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 结构体使用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enum IpAddr {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    V4(Ipv4Addr),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    V6(Ipv6Addr),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 强大所在</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enum Message {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Quit,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Move { x: i32, y: i32 },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Write(String),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ChangeColor(i32, i32, i32),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">impl Message {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 还能...实现 函数!!!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn call(&amp;self) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // method body would be defined here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>Option
null的发明者Tony Hoare在2009年的演讲“ Null References：十亿美元的错误”中说：</p><div class="codeBlockContainer_CBWl language-text theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">    我称之为我的十亿美元错误。当时，我正在设计第一个全面的类型系统，以使用面向对象的语言进行引用。我的目标是确保所有引用的使用都绝对安全，并由编译器自动执行检查。但是我忍不住要插入一个空引用的诱惑，仅仅是因为它是如此容易实现。这导致了无数错误，漏洞和系统崩溃，在最近四十年中可能造成十亿美元的痛苦和破坏。</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">enum Option&lt;T&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Some(T),    // 泛型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    None,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let some_number = Some(5);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let some_string = Some("a string");     // Some 直接赋值即可推测类型了</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let absent_number: Option&lt;i32&gt; = None;  // None 没有类型 那么就需要指代类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>加入Option 旨在限制null的普遍性并提高Rust代码的安全性。</p></li><li><p>匹配控制流 <code>match</code></p><p>一个强大的武器</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">enum UsState {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Alabama,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Alaska,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // --snip--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enum Coin {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Penny,      // 1 美分</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Nickel,     // 5 美分</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Dime,       // 10 美分</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Quarter(UsState),    // 25 美分</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn value_in_cents(coin: Coin) -&gt; u8 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    match coin {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 类函数的调用方式 指定 枚举的每个值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Coin::Penny =&gt; {    // =&gt; 匹配后直接赋值的意思</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            println!("Lucky penny!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            1   // 返回值为1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Coin::Nickel =&gt; 5,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Coin::Dime =&gt; 10,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Coin::Quarter(state) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            println!("State quarter from {:?}!", state);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            25</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p><code>match</code> 搭配 <code>Option&lt;T&gt;</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn plus_one(x: Option&lt;i32&gt;) -&gt; Option&lt;i32&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    match x {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        None =&gt; None,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Some(i) =&gt; Some(i + 1),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let five = Some(5);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let six = plus_one(five);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let none = plus_one(None);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p><code>_</code> 占位符 类似于 <code>default</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let some_u8_value = 0u8; // 等价于  let some_u8_value : u8 = 1; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">match some_u8_value {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    1 =&gt; println!("one"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    3 =&gt; println!("three"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    5 =&gt; println!("five"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    7 =&gt; println!("seven"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    _ =&gt; (),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>就算使用了占位符 但如果我们只要匹配一种模式的话 用<code>match</code>有点焉用牛刀的感觉了 所以引入了 <code>if let</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 牛刀模式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let some_u8_value = Some(0u8);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">match some_u8_value {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Some(3) =&gt; println!("three"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    _ =&gt; (),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 简约模式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if let Some(3) = some_u8_value {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("three");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>换句话说，您可以将其<code>if let</code>视为<code>match</code>当值匹配一个模式然后忽略所有其他值时运行代码的语法语法。</p></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="使用包头文件">使用包(头文件)<a class="hash-link" href="#使用包头文件" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="包">包<a class="hash-link" href="#包" title="标题的直接链接">​</a></h4><ol><li>在使用<code>cargo</code>的时候, 生成出来的 <code>src</code> 其实就是一个包</li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="模块-mod">模块 <code>mod</code><a class="hash-link" href="#模块-mod" title="标题的直接链接">​</a></h4><ol><li><p>样板</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">mod front_of_house {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 如果这里不添加 pub 的话 是没有办法在外部使用的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub mod hosting {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pub fn add_to_waitlist() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fn seat_at_table() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mod serving {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fn take_order() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fn serve_order() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fn take_payment() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><div class="codeBlockContainer_CBWl theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">pub fn eat_at_restaurant() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 绝对路径调用的时候 采用的关键字是 crate 箱子 其实可以理解为当前目录 root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    crate::front_of_house::hosting::add_to_waitlist();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 相对路径调用的时候可以省略</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    front_of_house::hosting::add_to_waitlist();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ol start="2"><li><p>模块树</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">crate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── front_of_house</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ├── hosting</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    │   ├── add_to_waitlist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    │   └── seat_at_table</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    └── serving</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── take_order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── serve_order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        └── take_payment</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>起始相对路径 <code>super</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn serve_order() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mod back_of_house {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn fix_incorrect_order() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cook_order();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 这里的super意思就是 back_of_house 而且 serve_order 和 super 同级</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        super::serve_order();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn cook_order() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="使用-use-来引入路径-缩短路径">使用 <code>use</code> 来引入路径 缩短路径<a class="hash-link" href="#使用-use-来引入路径-缩短路径" title="标题的直接链接">​</a></h4><ol><li><p>正常使用</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">mod front_of_house {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub mod hosting {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pub fn add_to_waitlist() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use crate::front_of_house::hosting;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub fn eat_at_restaurant() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 绝对路径下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    crate::front_of_house::hosting::add_to_waitlist();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 相对路径下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    front_of_house::hosting::add_to_waitlist();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 被缩短的使用方式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hosting::add_to_waitlist();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p><code>as</code> 来重写命名</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    use std::fmt::Result;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    use std::io::Result as IoResult;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn function1() -&gt; Result {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // --snip--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Ok(())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn function2() -&gt; IoResult&lt;()&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // --snip--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Ok(())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>导出 <code>pub use</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">mod front_of_house {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub mod hosting {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pub fn add_to_waitlist() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 外部访问可以直接访问 hosting::add_to_waitlist()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub use crate::front_of_house::hosting;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub fn eat_at_restaurant() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hosting::add_to_waitlist();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hosting::add_to_waitlist();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hosting::add_to_waitlist();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>对于同一包下的多个路径使用嵌套处理 <code>{ , }</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::io;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::io::Write;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::cmp::Ordering;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::{cmp::Ordering, io};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 对于路径本身 使用 self</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::io::{self, Write};</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>导入所有的公共项目</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::collections::*;</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>模块 <code>mod</code> 分文件存放</p><p>这个不需要太多的内容去写 大概就是和安卓的机制类似 文件夹存放即可</p></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="常用的一些键值保存的东西">常用的一些键值保存的东西<a class="hash-link" href="#常用的一些键值保存的东西" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="矢量">矢量<a class="hash-link" href="#矢量" title="标题的直接链接">​</a></h4><ol><li><p>矢量 <code>Vec</code> 可以存放任何类型, 但仅限于同一类型的, 所以可以借助 <code>enum</code> 来达到混存的功能</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let v: Vec&lt;i32&gt; = Vec::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">v.push(5);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">v.push(6);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let v = vec![1, 2, 3];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enum SpreadsheetCell {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Int(i32),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Float(f64),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Text(String),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let row = vec![</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SpreadsheetCell::Int(3),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SpreadsheetCell::Text(String::from("blue")),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SpreadsheetCell::Float(10.12),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">];</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>如果已经生成过了个 不可变 的引用之后, 再继续对其push</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let mut v = vec![1, 2, 3, 4, 5];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let first = &amp;v[0];  // 产生不可变的引用之后</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">v.push(6);          // 这里会生成 可变</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("The first element is: {}", first);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>可以直接对其遍历</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let v = vec![100, 32, 57];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">for i in &amp;v {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("{}", i);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 如果要改值得话 需要加 mut</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">for i in &amp;mut v {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 甚至是直接遍历的时候更改他的值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    *i += 50; // * 有点强买强卖的问道</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="string">String<a class="hash-link" href="#string" title="标题的直接链接">​</a></h4><ol><li><p>不能对 <code>String</code> 索引</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let hello = "Здравствуйте";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let answer = &amp;hello[0]; // 因为Unicode吗的字节长度是不定的</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>字符串的一些相关操作</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 追加</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let mut s1 = String::from("foo");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s2 = "bar";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s1.push_str(s2); // 这里并不会转让所有权</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("s2 is {}", s2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let mut s = String::from("lo");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s.push('l');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 合并</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 加号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s1 = String::from("Hello, ");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s2 = String::from("world!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s3 = s1 + &amp;s2; // s1 的所有权被移交出去了 + 号其实调用的是 add 方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 格式化</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s1 = String::from("tic");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s2 = String::from("tac");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s3 = String::from("toe");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s = format!("{}-{}-{}", s1, s2, s3);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>但可以对字符串做范围切片 但是会可能报错</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let hello = "Здравствуйте"; // 这里的一个字符占两个字节</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s = &amp;hello[0..4];       // 所以 0到4 取出来的是 'Зд'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 一旦取了 [0..1] 或者是 [0..3] 就会导致字符无法被正常切出来 会报错</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>遍历字符串的真正字符 使用 <code>chars</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">for c in "नमस्ते".chars() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("{}", c);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>或者遍历字符串的字节码 使用 <code>bytes</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">for b in "नमस्ते".bytes() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("{}", b);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="hashmap">HashMap<a class="hash-link" href="#hashmap" title="标题的直接链接">​</a></h4><ol><li><p>所有的键值必须一致, 也就是键的类型要一致, 值的类型也要一致</p></li><li><p>使用</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::collections::HashMap;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let mut scores = HashMap::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 一个一个插入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scores.insert(String::from("Blue"), 10);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scores.insert(String::from("Yellow"), 50);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 先创建所有的键 和 值 存放到 vec当中</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let teams  = vec![String::from("Blue"), String::from("Yellow")];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let initial_scores = vec![10, 50];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 这里的 下划线是可以编译器 自己去猜测的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let scores: HashMap&lt;_, _&gt; = teams.iter().zip(initial_scores.iter()).collect();</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>会接收所有权</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let field_name = String::from("Favorite color");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let field_value = String::from("Blue");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let mut map = HashMap::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">map.insert(field_name, field_value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 下面这行代码会报错的 所有权失效了</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("{}, {}", field_name, field_value);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>获取值 <code>get</code> 返回的是个 <code>Option</code> 值 因为是有可能为 <code>None</code>的</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">scores.insert(String::from("Blue"), 10);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scores.insert(String::from("Yellow"), 50);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let team_name = String::from("Blue");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let score = scores.get(&amp;team_name);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// score =&gt; Some(10)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>仅当键没有值时才插入值 <code>entry</code> <code>or_insert</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let mut scores = HashMap::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scores.insert(String::from("Blue"), 10);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scores.entry(String::from("Yellow")).or_insert(50);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scores.entry(String::from("Blue")).or_insert(50);   // 这里不会生效</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("{:?}", scores);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>更新值 但这里感觉有点问题</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let text = "hello world wonderful world";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let mut map = HashMap::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">for word in text.split_whitespace() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let count = map.entry(word).or_insert(0);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    *count += 1; // 在这里更新了 但是就怎么那么怪呢</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">println!("{:?}", map);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><div class="codeBlockContainer_CBWl theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 如果按照上述这个思路的话</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let score = scores.entry(String::from("Blue")).or_insert(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*score += 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="报错-panic">报错 <code>panic!</code><a class="hash-link" href="#报错-panic" title="标题的直接链接">​</a></h3><ol><li><p>关于 <code>panic!</code></p></li><li><p><code>Result</code></p><p>这是一个枚举, 表示这个值可以是有两种结果, 如果是<code>OK</code>会附带对应的<code>&lt;T&gt;</code>类型, 如果是<code>Err</code>的话, 将会是报错</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">enum Result&lt;T, E&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Ok(T),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Err(E),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = File::open("hello.txt");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = match f {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Ok(file) =&gt; file,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Err(error) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 这里的 panic! 表示会直接停止在这里</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            panic!("Problem opening the file: {:?}", error)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 甚至可以匹配不同的错误 也就是针对 err 的错误类型做文章</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::io::ErrorKind;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = File::open("hello.txt");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = match f {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Ok(file) =&gt; file,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Err(error) =&gt; match error.kind() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ErrorKind::NotFound =&gt; match File::create("hello.txt") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Ok(fc) =&gt; fc,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Err(e) =&gt; panic!("Problem creating the file: {:?}", e),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            other_error =&gt; panic!("Problem opening the file: {:?}", other_error),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>闭包</p><p>如果在使用多个<code>match</code>会使得代码看起来很原始</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::io::ErrorKind;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = File::open("hello.txt").unwrap_or_else(|error| {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if error.kind() == ErrorKind::NotFound {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            File::create("hello.txt").unwrap_or_else(|error| {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                panic!("Problem creating the file: {:?}", error);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            panic!("Problem opening the file: {:?}", error);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>新的关键字用来单独解决报错 <code>unwrap</code> 和 <code>expect</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = File::open("hello.txt").unwrap();   // 如果报错 会直接中断在这里</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = File::open("hello.txt").expect("Failed to open hello.txt"); // 如果报错 会直接显示错误信息 并且中断</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>传递报错</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    use std::io;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    use std::io::Read;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 首先看返回值 是个 Result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let f = File::open("hello.txt");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 判断 f 是否是错误 如果是的话直接返回报错 否则直接赋值为文件的 句柄</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let mut f = match f {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Ok(file) =&gt; file,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Err(e) =&gt; return Err(e),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let mut s = String::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 匹配文件读出来的内容给到 新建的 s 当中去</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        match f.read_to_string(&amp;mut s) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Ok(_) =&gt; Ok(s),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Err(e) =&gt; Err(e),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }   // 这里没有 ; 表示这里就是返回值了</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>由于以上传递 非常常见 导致可以 用 <code>?</code> 使其精简 </p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::io;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::io::Read;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut f = File::open("hello.txt")?;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut s = String::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    f.read_to_string(&amp;mut s)?;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Ok(s)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>该<code>?</code>放在后<code>Result</code>值定义为工作在几乎相同的方式<code>match</code>表达我们定义来处理<code>Result</code>
也就是可以直接做到简化返回操作的能力
甚至更加的精简</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::io;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::io::Read;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut s = String::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    File::open("hello.txt")?.read_to_string(&amp;mut s)?;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Ok(s)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>好吧 其实还可以超级精简</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::io;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 我觉得这里已经癫了 直接帮你写好了 打开文件夹并且获取内容 并且返回出去...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fs::read_to_string("hello.txt")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>那么这个<code>?</code>能用在别的地方吗? 不能的 只能用在返回值为 <code>Result</code> 的函数上</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 错误代码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = File::open("hello.txt")?;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>这里说一嘴 <code>main</code> 函数的返回值是 <code>()</code> 我完全不知道这是个什么类型...</p><p>但你可以这么写</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::error::Error;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::fs::File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let f = File::open("hello.txt")?;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 返回了 () 的同时 耶 完成了 ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Ok(())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>但这里出现了个新的玩意 <code>Box&lt;dyn Error&gt;</code> <code>Box</code> 看了文档不是很懂 <code>pub struct Box&lt;T: ?Sized&gt;(Unique&lt;T&gt;);</code>
但 <code>dyn</code> 表示可以是任何类型
所以 <code>Box&lt;dyn Error&gt;</code> 可以理解为 任何类型的错误</p></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="泛型-特征-和-生命周期">泛型 特征 和 生命周期<a class="hash-link" href="#泛型-特征-和-生命周期" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="特征">特征<a class="hash-link" href="#特征" title="标题的直接链接">​</a></h4><ol><li><p>定义共同接口</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">pub trait Summary {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn summarize(&amp;self) -&gt; String;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub struct NewsArticle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub headline: String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub location: String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub author: String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub content: String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 实现接口 对于 NewsArticle 这个结构体来说</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">impl Summary for NewsArticle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn summarize(&amp;self) -&gt; String {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        format!("{}, by {} ({})", self.headline, self.author, self.location)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub struct Tweet {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub username: String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub content: String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub reply: bool,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pub retweet: bool,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 实现接口 对于 Tweet 这个结构体来说</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">impl Summary for Tweet {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn summarize(&amp;self) -&gt; String {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        format!("{}: {}", self.username, self.content)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>不能实现外部特征, 只能本地使用</p></li><li><p>可以默认实现特征, 这样本地就都可以使用了</p></li><li><p>特征可以作为参数, 也就是必须实现这个特征的任意类型</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 单独使用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub fn notify(item: impl Summary) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Breaking news! {}", item.summarize());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 提取出来使用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub fn notify&lt;T: Summary&gt;(item: T) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Breaking news! {}", item.summarize());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 正常单独使用多个</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub fn notify(item1: impl Summary, item2: impl Summary) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 但可以写成这样</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub fn notify&lt;T: Summary&gt;(item1: T, item2: T) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 可以相加</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub fn notify(item: impl Summary + Display) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 当然也可以提取出来</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pub fn notify&lt;T: Summary + Display&gt;(item: T) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 但如果有多个的时候 就会很乱</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn some_function&lt;T: Display + Clone, U: Clone + Debug&gt;(t: T, u: U) -&gt; i32 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 可以使用 where 来后续补充说明</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn some_function&lt;T, U&gt;(t: T, u: U) -&gt; i32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    where T: Display + Clone,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        U: Clone + Debug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>既然能做参数, 那么也能做返回值</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn returns_summarizable() -&gt; impl Summary {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Tweet {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        username: String::from("horse_ebooks"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        content: String::from("of course, as you probably already know, people"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        reply: false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        retweet: false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 但有局限性 也就是说 这样是不允许的 只允许返回一个类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn returns_summarizable(switch: bool) -&gt; impl Summary {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if switch {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        NewsArticle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Tweet {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>完成之前的比大小</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// PartialOrd 可以比较 Copy 可以进行拷贝 代表就是在堆上的值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn largest&lt;T: PartialOrd + Copy&gt;(list: &amp;[T]) -&gt; T {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut largest = list[0];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for &amp;item in list.iter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if item &gt; largest {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            largest = item;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    largest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="lifetime-寿命"><code>lifetime</code> 寿命<a class="hash-link" href="#lifetime-寿命" title="标题的直接链接">​</a></h4><ol><li><p>三条规则</p><ol><li><p>作为引用的参数都有其自己的寿命 <code>fn foo&lt;'a, 'b&gt;(x: &amp;'a i32, y: &amp;'b i32);</code></p></li><li><p>如果存在一个有输入寿命的参数的时候, 那么返回的也得是这个带有寿命的参数</p></li><li><p>如果有多个不同寿命参数, 但其中有的是 <code>&amp;self</code> 或者是 <code>&amp;mut self</code>, 那么就把 <code>self</code> 分配给所有输出寿命参数???</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 分析 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn first_word(s: &amp;str) -&gt; &amp;str {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 由于没有指定 那么就算是 先执行第一条规则 给所有的引用参数指定寿命</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn first_word(s: &amp;'a str) -&gt; &amp;str {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 又只有一个寿命类型, 那么把输入的寿命给到输出</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn first_word(s: &amp;'a str) -&gt; &amp;'a str {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 那么现在，此函数所有引用都具有寿命，并且编译器可以继续进行分析，所以我们就不用编写这个寿命了</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol></li></ol><div class="codeBlockContainer_CBWl theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 分析 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn longest(x: &amp;str, y: &amp;str) -&gt; &amp;str {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 由于没有指定 入参的寿命 所以先执行第一条规则</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn longest(x: &amp;'a str, y: &amp;'b str) -&gt; &amp;str {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 第二条规则适用? 由于有多个不适用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 第三条规则呢? 没有 self 也不适用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 所以这个编译的时候 就会报错</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="自动化测试">自动化测试<a class="hash-link" href="#自动化测试" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="构建命令行程序">构建命令行程序<a class="hash-link" href="#构建命令行程序" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="闭包和迭代器">闭包和迭代器<a class="hash-link" href="#闭包和迭代器" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="闭包">闭包<a class="hash-link" href="#闭包" title="标题的直接链接">​</a></h4><ol><li><p>可以不指定数据类型, 但使用的时候 不能乱用, 他不是泛型</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn  add_one_v1   (x: u32) -&gt; u32 { x + 1 }  // 函数 完整版</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let add_one_v2 = |x: u32| -&gt; u32 { x + 1 }; // 闭包 完整版</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let add_one_v3 = |x|             { x + 1 }; // 闭包 删除指定数据类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let add_one_v4 = |x|               x + 1  ; // 闭包 删除花括号</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><div class="codeBlockContainer_CBWl theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">// 但在使用后上</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let example_closure = |x| x;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let s = example_closure(String::from("hello")); // 使用了字符串作为参数传入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let n = example_closure(5);                     // 又使用了 数字  这里会崩</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ol start="2"><li><p>闭包也是有特征的, 这样的话就可以作为泛型的参数传入了 <code>Fn</code> <code>FnMut</code> <code>FnOnce</code></p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">struct Cacher&lt;T&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    where T: Fn(u32) -&gt; u32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    calculation: T,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    value: Option&lt;u32&gt;,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>闭包可以使用外部的变量</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let x = 4;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let equal_to_x = |z| z == x;    // 使用了 x</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // fn equal_to_x(z: i32) -&gt; bool { z == x } //这个就会崩</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let y = 4;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert!(equal_to_x(y));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>所以说闭包是会强制获取所有权的
<code>FnOnce</code>    获取完后 但只能调用一次
<code>FnMut</code>     可变的形式获取了值
<code>Fn</code>        不可变的形式获取了值</p></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="迭代器">迭代器<a class="hash-link" href="#迭代器" title="标题的直接链接">​</a></h4><ol><li><p>特征为 <code>Iterator</code> 和 具有 <code>next</code> 方法</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">pub trait Iterator {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type Item;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p><code>next</code> 是会消耗掉的</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">#[test]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn iterator_demonstration() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let v1 = vec![1, 2, 3];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut v1_iter = v1.iter();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert_eq!(v1_iter.next(), Some(&amp;1));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert_eq!(v1_iter.next(), Some(&amp;2));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert_eq!(v1_iter.next(), Some(&amp;3));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert_eq!(v1_iter.next(), None);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn iterator_sum() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let v1 = vec![1, 2, 3];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let v1_iter = v1.iter();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let total: i32 = v1_iter.sum();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert_eq!(total, 6);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>迭代器是不会自己调用的</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">let v1: Vec&lt;i32&gt; = vec![1, 2, 3];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">v1.iter().map(|x| x + 1);   // 这么使用时会收到警告 说明这行代码没有起到任何作用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let v2: Vec&lt;_&gt; = v1.iter().map(|x| x + 1).collect();    // 直接进行迭代</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">assert_eq!(v2, vec![2, 3, 4]);</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>使用场景</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">#![allow(unused_variables)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#[derive(PartialEq, Debug)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">struct Shoe {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    size: u32,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    style: String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn shoes_in_my_size(shoes: Vec&lt;Shoe&gt;, shoe_size: u32) -&gt; Vec&lt;Shoe&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    shoes.into_iter()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .filter(|s| s.size == shoe_size)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .collect()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#[test]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn filters_by_size() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let shoes = vec![</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Shoe { size: 10, style: String::from("sneaker") },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Shoe { size: 13, style: String::from("sandal") },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Shoe { size: 10, style: String::from("boot") },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let in_my_size = shoes_in_my_size(shoes, 10);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert_eq!(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        in_my_size,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        vec![</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Shoe { size: 10, style: String::from("sneaker") },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Shoe { size: 10, style: String::from("boot") },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="cratesio">Crates.io<a class="hash-link" href="#cratesio" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="智能指针">智能指针<a class="hash-link" href="#智能指针" title="标题的直接链接">​</a></h3><ol><li><code>Rc&lt;T&gt;</code> 允许对一个变量有多个所有者；<code>Box&lt;T&gt;</code> 和 <code>RefCell&lt;T&gt;</code> 只能有一个所有者。</li><li><code>Box&lt;T&gt;</code> 允许在编译时检查是不可变还是可变的；<code>Rc&lt;T&gt;</code> 只允许在编译时检查不可变的引用；<code>RefCell&lt;T&gt;</code> 允许在运行时检查不可变或可变的引用。</li><li>由于<code>RefCell&lt;T&gt;</code>允许在运行时检查可变引用，因此 <code>RefCell&lt;T&gt;</code> 即使<code>RefCell&lt;T&gt;</code> 是不可变的，也可以在内部改变值。</li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="并发">并发<a class="hash-link" href="#并发" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="线程">线程<a class="hash-link" href="#线程" title="标题的直接链接">​</a></h4><ol><li><p>创建线程 <code>thread::spawn</code></p></li><li><p>等待该线程跑完 <code>join</code> 阻塞的</p></li><li><p>线程内使用外部的值 其实也可以看做是 闭包内使用外部变量 但闭包是在单一线程下使用的 <code>move</code> 是针对线程闭包的 所以 会强制获取所有权</p></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="通道">通道<a class="hash-link" href="#通道" title="标题的直接链接">​</a></h4><ol><li><p>例子</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::thread;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::sync::mpsc;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let (tx, rx) = mpsc::channel();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    thread::spawn(move || {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let val = String::from("hi");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tx.send(val).unwrap();  // 移交所有权</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let received = rx.recv().unwrap();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Got: {}", received);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="上锁">上锁<a class="hash-link" href="#上锁" title="标题的直接链接">​</a></h4><ol><li><p>互斥 和 原子引用计数</p><div class="codeBlockContainer_CBWl language-rust theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-rust codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">use std::sync::{Mutex, Arc};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use std::thread;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fn main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let counter = Arc::new(Mutex::new(0));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let mut handles = vec![];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for _ in 0..10 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let counter = Arc::clone(&amp;counter);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let handle = thread::spawn(move || {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let mut num = counter.lock().unwrap();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            *num += 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        handles.push(handle);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for handle in handles {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        handle.join().unwrap();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    println!("Result: {}", *counter.lock().unwrap());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="Rust" term="Rust"/>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[mac上启动文件服务器]]></title>
        <id>/2019/mac</id>
        <link href="https://danyow.github.io/blog/2019/mac"/>
        <updated>2019-09-10T22:39:06.000Z</updated>
        <summary type="html"><![CDATA[Title: 使用 mac 自带的apache 启动文件服务器]]></summary>
        <content type="html"><![CDATA[<p>Title: 使用 <em>mac</em> 自带的<em>apache</em> 启动文件服务器</p><ol><li><p>开启 <em>apache</em></p><p><code>sudo apachectl start</code></p></li><li><p><code>cd</code> 到对应的目录下</p></li><li><p>开启 <em>HttpServer</em></p><p><code>python -m SimpleHTTPServer</code></p></li><li><p>访问链接</p><p><code>http://localhost:8000</code></p></li></ol>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ruby在mac上的升级]]></title>
        <id>/2019/ruby</id>
        <link href="https://danyow.github.io/blog/2019/ruby"/>
        <updated>2019-09-07T00:40:54.000Z</updated>
        <summary type="html"><![CDATA[Title: mac自带的ruby版本过低]]></summary>
        <content type="html"><![CDATA[<p>Title: <em>mac</em>自带的<em>ruby</em>版本过低</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装rvm环境来安装ruby环境">安装<em>rvm</em>环境来安装<em>ruby</em>环境<a class="hash-link" href="#安装rvm环境来安装ruby环境" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_CBWl theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">`curl -L https://get.rvm.io | bash -s stable`</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="查看当前版本">查看当前版本<a class="hash-link" href="#查看当前版本" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_CBWl theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">`rvm list known`</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装指定ruby版本">安装指定<em>ruby</em>版本<a class="hash-link" href="#安装指定ruby版本" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_CBWl theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">`rvm install 2.6.3`</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>done!</p>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="笔记" term="笔记"/>
        <category label="ruby" term="ruby"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[vscode插件开发]]></title>
        <id>/2019/vscode/plugin</id>
        <link href="https://danyow.github.io/blog/2019/vscode/plugin"/>
        <updated>2019-08-22T22:35:39.000Z</updated>
        <summary type="html"><![CDATA[Title:目的是为了将剪切板里面的图片一键base64到markdown当中, 省去建立图床的步骤. 当然后续是有可能搭建图床去保存图片.]]></summary>
        <content type="html"><![CDATA[<p>Title:目的是为了将剪切板里面的图片一键base64到markdown当中, 省去建立图床的步骤. 当然后续是有可能搭建图床去保存图片.</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="前期准备">前期准备<a class="hash-link" href="#前期准备" title="标题的直接链接">​</a></h2><ul><li>需要安装 <em>node.js</em> <code>brew install node</code></li><li>利用 <em>npm</em> 安装 另外两个工具 <em>Yeoman</em> 和 <em>VS Code Extension generator</em> . 类似于脚手架 <code>npm install -g yo generator-code</code></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="生成工程">生成工程<a class="hash-link" href="#生成工程" title="标题的直接链接">​</a></h2><p><code>yo code</code> 即可</p>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="笔记" term="笔记"/>
        <category label="vscode" term="vscode"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[zsh的使用]]></title>
        <id>/2019/zsh</id>
        <link href="https://danyow.github.io/blog/2019/zsh"/>
        <updated>2019-08-21T23:33:55.000Z</updated>
        <summary type="html"><![CDATA[Title:貌似这样可以让你的终端变得很好看呢]]></summary>
        <content type="html"><![CDATA[<p>Title:貌似这样可以让你的终端变得很好看呢</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="使用-zsh">使用 <em>zsh</em><a class="hash-link" href="#使用-zsh" title="标题的直接链接">​</a></h2><p>切换默认的终端 <em>zsh</em>, 这会提示你输入密码.</p><p><code>chsh -s /bin/zsh</code></p><p>如果想改回来的话</p><p><code>chsh -s /bin/bash</code></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="使用-antigen-来安装-oh-my-zsh">使用 <em>antigen</em> 来安装 <em>oh my zsh</em><a class="hash-link" href="#使用-antigen-来安装-oh-my-zsh" title="标题的直接链接">​</a></h2><p><code>brew install antigen</code></p><p>这里安装完后会有个提示说: 源目录在某个位置, 让你自己写到 <strong>.zshrc</strong> 里面去.</p><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="关于-antigen-的简单介绍">关于 <em>antigen</em> 的简单介绍<a class="hash-link" href="#关于-antigen-的简单介绍" title="标题的直接链接">​</a></h3><blockquote><p>一款类似在 <em>bash</em> 下管理的 <em>brew</em> 工具, 因为直接使用 <em>oh my zsh</em> 会使得你的配置变得稍稍复杂.</p></blockquote><ol><li>安装官方插件 <code>antigen bundle brew</code></li><li>安装<em>github</em>上的插件 <code>antigen bundle zsh-users/zsh-syntax-highlighting</code></li><li>生成缓存, 加快下次载入过程 <code>antigen cache-gen</code></li><li>更新某个或者全部插件 <code>antigen update [&lt;bundle-name&gt;]</code>: 如果留空那么就是更新全部.</li><li>回滚更新 <code>antigen revert</code>: 回滚到更新前的状态</li><li>列出本地安装的插件列表 <code>antigen list [--simple|--short|--long]</code></li><li>清理没有使用到的插件 <code>antigen cleanup</code></li><li>删除插件 <code>antigen purge</code></li><li>使用zsh框架 <code>antigen use oh-my-zsh</code></li><li>使用主题 <code>antigen theme</code></li><li>应用更改 <code>antigen apply</code></li><li>自身更新 <code>antigen selfupdate</code></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="新建-zshrc-文件-填入下面内容">新建 <strong>.zshrc</strong> 文件 填入下面内容<a class="hash-link" href="#新建-zshrc-文件-填入下面内容" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token builtin class-name" style="color:#116329">source</span><span class="token plain"> /usr/local/share/antigen/antigen.zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 加载oh-my-zsh库</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen use oh-my-zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 加载原版oh-my-zsh中的功能(robbyrussell's oh-my-zsh).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen bundle brew</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen bundle command-not-found</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen bundle </span><span class="token function" style="color:#8250DF">git</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen bundle pip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 语法高亮功能</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen bundle zsh-users/zsh-syntax-highlighting</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 代码提示功能</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen bundle zsh-users/zsh-autosuggestions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 自动补全功能</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen bundle zsh-users/zsh-completions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 这个不知道是啥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen bundle zsh-users/zsh-apple-touchbar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 加载主题</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># antigen theme robbyrussell</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen theme https://github.com/bhilburn/powerlevel9k powerlevel9k</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 保存更改</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">antigen apply</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## 配合powerlevel9k主题使用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_PROMPT_ON_NEWLINE</span><span class="token operator" style="color:#D73A49">=</span><span class="token plain">true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_RPROMPT_ON_NEWLINE</span><span class="token operator" style="color:#D73A49">=</span><span class="token plain">true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_MODE</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">'awesome-patched'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_SHORTEN_DIR_LENGTH</span><span class="token operator" style="color:#D73A49">=</span><span class="token number" style="color:#005CC5">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_LEFT_PROMPT_ELEMENTS</span><span class="token operator" style="color:#D73A49">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">os_icon </span><span class="token function" style="color:#8250DF">dir</span><span class="token plain"> vcs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS</span><span class="token operator" style="color:#D73A49">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">status nvm node_version</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_OS_ICON_BACKGROUND</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">"white"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_OS_ICON_FOREGROUND</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">"blue"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_DIR_HOME_FOREGROUND</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">"white"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">"white"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#E36209">POWERLEVEL9K_DIR_DEFAULT_FOREGROUND</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">"white"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="这时候终端界面会呈现为部分乱码-因为缺少对应的图标字体">这时候终端界面会呈现为部分乱码, 因为缺少对应的图标字体<a class="hash-link" href="#这时候终端界面会呈现为部分乱码-因为缺少对应的图标字体" title="标题的直接链接">​</a></h2><p>在终端执行以下步骤:</p><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 下载</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#8250DF">git</span><span class="token plain"> clone https://github.com/powerline/fonts.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 安装</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name" style="color:#116329">cd</span><span class="token plain"> fonts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./install.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 删除安装包</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name" style="color:#116329">cd</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#8250DF">rm</span><span class="token plain"> -rf fonts</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="在对应的终端工具内选择安装的字体">在对应的终端工具内选择安装的字体<a class="hash-link" href="#在对应的终端工具内选择安装的字体" title="标题的直接链接">​</a></h2><p>以 <em>VSCode</em> 为例, 在设置界面内查找字体, 然后找到终端输入 <em>Meslo LG S for Powerline</em> 就可以了!</p>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="笔记" term="笔记"/>
        <category label="item2" term="item2"/>
        <category label="zsh" term="zsh"/>
        <category label="antigen" term="antigen"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac的包管理工具brew]]></title>
        <id>/2019/brew</id>
        <link href="https://danyow.github.io/blog/2019/brew"/>
        <updated>2019-08-06T14:55:00.000Z</updated>
        <summary type="html"><![CDATA[Title: brew工具的使用]]></summary>
        <content type="html"><![CDATA[<p>Title: brew工具的使用</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="相关指令介绍">相关指令介绍<a class="hash-link" href="#相关指令介绍" title="标题的直接链接">​</a></h2><ol><li><p>升级本体</p><p><code>brew update</code></p></li><li><p>升级所有程序</p><p><code>brew upgrade</code></p></li><li><p>查看本地安装了哪些'环境'和'应用'</p><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">brew list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask list</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="相关使用技巧">相关使用技巧<a class="hash-link" href="#相关使用技巧" title="标题的直接链接">​</a></h2><ul><li>经常在安装的会去检查本体的更新, 可能会导致长时间的等待. 所以可以采用关闭自动更新. <code>export HOMEBREW_NO_AUTO_UPDATE=true</code> 但每次重启后都需要重新设置, 可以将这行加入到对应的shell配置文件中去.</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="个人已经安装的">个人已经安装的<a class="hash-link" href="#个人已经安装的" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> visual-studio-code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> the-unarchiver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> google-chrome</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> sourcetree</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> wechat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> iterm2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> powershell</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> sogouinput </span><span class="token comment" style="color:#999988;font-style:italic">## 需要自己重新打开一下</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> qq</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> synergy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> unity-hub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> beyond-compare</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> steam</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> neteasemusic</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> baidunetdisk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> vlc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> aria2gui</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> teamviewer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> background-music </span><span class="token comment" style="color:#999988;font-style:italic">## 这个工具可以推荐一下 很赞! 类似windows上的声音合成器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> vnc-viewer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> impactor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> thunder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> epic-games</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> svnx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> visual-studio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> weiyun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> spotifree</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> spotify</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> free-download-manager </span><span class="token comment" style="color:#999988;font-style:italic">## 顶替迅雷的</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> tencent-lemon </span><span class="token comment" style="color:#999988;font-style:italic">## 顶替CMM的</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> android-studio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> genymotion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> airserver </span><span class="token comment" style="color:#999988;font-style:italic">## 哎~ 这个还是之后自行破解或者付费吧 只能14天</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> java</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> postman</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> microsoft-remote-desktop-beta</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> qqmusic</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> adobe-air</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> poedit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> yinxiangbiji</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew cask </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> mailmaster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> antigen </span><span class="token comment" style="color:#999988;font-style:italic">## zsh下的管理工具</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> python3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">node</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> dotnet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"> ruby </span><span class="token comment" style="color:#999988;font-style:italic">## 这样安装的并不能正常使用 需要配置环境 建议采用 rvm来安装</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="额外无法在brew上找到的">额外无法在brew上找到的<a class="hash-link" href="#额外无法在brew上找到的" title="标题的直接链接">​</a></h2><ol><li>人人影视</li><li>Parallels Desktop</li><li>C4D</li><li>MAYA</li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="vscode-所使用到的插件"><em>VSCode</em> 所使用到的插件<a class="hash-link" href="#vscode-所使用到的插件" title="标题的直接链接">​</a></h3><ol><li>Better Align -&gt; 代码对齐 -&gt; 需要在键盘快捷方式里面加入键值绑定</li><li>C#</li><li>C# XML Documentation Comments</li><li>Chinese</li><li>Comment Translate</li><li>Debugger for Unity</li><li>GitLens</li><li>Jekyll Snippets</li><li>Jekyll Syntax Support</li><li>luaide -&gt; 密码不能有符号</li><li>Markdown All in One -&gt; 快捷键</li><li>markdownlint -&gt; 语法纠查</li><li>Material Icon Theme</li><li>Material Theme</li><li>Partial Diff -&gt; 代码比对</li><li>Paste Image</li><li>Python</li><li>Python</li><li>TSLint</li></ol>]]></content>
        <category label="Mac" term="Mac"/>
        <category label="笔记" term="笔记"/>
        <category label="brew" term="brew"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[SSH Windows]]></title>
        <id>/2019/ssh</id>
        <link href="https://danyow.github.io/blog/2019/ssh"/>
        <updated>2019-08-02T17:07:42.000Z</updated>
        <summary type="html"><![CDATA[Title: Windows 下生成 ssh 用来连接 git]]></summary>
        <content type="html"><![CDATA[<p>Title: Windows 下生成 <em>ssh</em> 用来连接 <em>git</em></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="生成">生成<a class="hash-link" href="#生成" title="标题的直接链接">​</a></h2><p><code>ssh-keygen -t rsa -C "i.zuucol@gmail.com"</code></p><ol><li>然后他会询问你要存放的位置 -&gt; 直接回车就是默认位置 -&gt; <code>C:\Users\Danyow/.ssh/id_rsa</code></li><li>然后让你输入密码 -&gt; 直接回车就是为空即可</li><li>然后获取刚刚生成出来的公钥 <code>cat C:\Users\Danyow\.ssh\id_rsa.pub</code></li></ol>]]></content>
        <category label="Windows" term="Windows"/>
        <category label="笔记" term="笔记"/>
        <category label="ssh" term="ssh"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows To Go]]></title>
        <id>/2019/wtg</id>
        <link href="https://danyow.github.io/blog/2019/wtg"/>
        <updated>2019-08-02T10:48:02.000Z</updated>
        <summary type="html"><![CDATA[Title: Windows To Go 的一些使用说明]]></summary>
        <content type="html"><![CDATA[<p>Title: Windows To Go 的一些使用说明</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="mac安装后键鼠供电问题">Mac安装后键鼠供电问题<a class="hash-link" href="#mac安装后键鼠供电问题" title="标题的直接链接">​</a></h2><p>在 <em>mac</em> 供电方式推荐采用直接供电, 不推荐外接拓展坞，有可能导致键鼠使用出现问题.</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="访问本机磁盘">访问本机磁盘<a class="hash-link" href="#访问本机磁盘" title="标题的直接链接">​</a></h2><p>默认本机磁盘是脱机状态的</p><p>启用本机磁盘:</p><ol><li>启动 <em>cmd</em></li><li><code>DISKPART.exe</code></li><li><code>san</code></li><li><code>san policy=onlineall</code></li><li><code>list disk</code></li><li><code>select disk 1</code></li><li><code>attributes disk clear readonly</code></li><li><code>online disk</code></li></ol>]]></content>
        <category label="Windows" term="Windows"/>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows的包管理工具chocolatey]]></title>
        <id>/2019/chocolatey</id>
        <link href="https://danyow.github.io/blog/2019/chocolatey"/>
        <updated>2019-08-01T14:55:00.000Z</updated>
        <summary type="html"><![CDATA[Title: chocolatey工具的使用]]></summary>
        <content type="html"><![CDATA[<p>Title: chocolatey工具的使用</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安裝-chocolatey">安裝 <strong>chocolatey</strong><a class="hash-link" href="#安裝-chocolatey" title="标题的直接链接">​</a></h2><p>官网首页：<a href="https://chocolatey.org" target="_blank" rel="noopener noreferrer">Home</a></p><p>使用 <strong>PowerShell</strong> 即可</p><div class="codeBlockContainer_CBWl language-powershell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-powershell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="更改安裝软件存放位置">更改安裝软件存放位置<a class="hash-link" href="#更改安裝软件存放位置" title="标题的直接链接">​</a></h3><p>新建环境变量<br>
<!-- -->名为 <em>ChocolateyInstall</em><br>
<!-- -->值为 <em>你想要存放的路径</em></p><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="相关链接">相关链接<a class="hash-link" href="#相关链接" title="标题的直接链接">​</a></h3><p>利用网页检索所需要的包 <a href="https://chocolatey.org/packages" target="_blank" rel="noopener noreferrer">Packages</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="常用指令">常用指令<a class="hash-link" href="#常用指令" title="标题的直接链接">​</a></h2><ol><li><p>安装</p><p><code>choco install &lt;package&gt;</code></p><p>这是正常的安装，但只是装一两个软件还好，每次都需要你输入 <em>y、a、n</em> 等进行交互，可以加入后缀 <code>-y</code> 来自动全部确认</p></li><li><p>其他常用命令</p><ol><li>卸载 <code>choco uninstall &lt;package&gt;</code></li><li>搜索 <code>choco search &lt;package&gt;</code></li><li>更新 <code>choco upgrade &lt;package&gt;</code></li><li>查看本地 <code>choco list --local-only</code> 或者 <code>choco list -lo</code></li></ol></li><li><p>不常用指令</p><ol><li>搜索所有版本 <code>choco search &lt;package&gt; -all</code></li><li>安裝指定版本 <code>choco install &lt;package&gt; -version &lt;版本号&gt;</code></li><li>更新所有 <code>choco upgrade -all</code></li></ol></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="个人已经安装的">个人已经安装的<a class="hash-link" href="#个人已经安装的" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_CBWl language-powershell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-powershell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">choco install 7zip -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install androidstudio -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install ccleaner -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install curl -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install Everything -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install gimp -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install git -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install git-lfs -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install github -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install github-desktop -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install golang -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install GoogleChrome -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install gradle -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install javaruntime -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install jdk8 -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install jekyll -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install jre8 -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install nodejs -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install openssh -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install php -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install PowerShell -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install python -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install ruby -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install steam -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install unity -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install unity-hub -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install vscode -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install wechat -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install tim -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install flutter -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install mongodb -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install notepadplusplus -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install dotnetcore-sdk -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install sourcetree -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">choco install beyondcompare -y</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="个人使用但无法在chocolatey上找到的">个人使用但无法在chocolatey上找到的<a class="hash-link" href="#个人使用但无法在chocolatey上找到的" title="标题的直接链接">​</a></h3><ol><li>搜狗输入法</li><li>ShadowsocksR</li><li><del>木木模拟器</del>（已经删除，采用AS自带的模拟器）</li><li>WeGame</li><li>PanDownload（替换百度网盘）</li><li>Synergy</li></ol>]]></content>
        <category label="Windows" term="Windows"/>
        <category label="笔记" term="笔记"/>
        <category label="chocolatey" term="chocolatey"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello flutter]]></title>
        <id>/2019/flutter</id>
        <link href="https://danyow.github.io/blog/2019/flutter"/>
        <updated>2019-08-01T10:55:00.000Z</updated>
        <summary type="html"><![CDATA[Title: 关于flutter的初体验]]></summary>
        <content type="html"><![CDATA[<p>Title: 关于flutter的初体验</p><p>安装就不哔哔了</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="环境变量配置">环境变量配置<a class="hash-link" href="#环境变量配置" title="标题的直接链接">​</a></h2><blockquote><p>macOS Todo</p></blockquote><p>mac的，唉~由于在安装配置完后使用的是10.15的beta版本。 目前 fultter 还不支持就先告一段落了。</p><p>2019-12-22 更新:
流程没啥大毛病
<code>flutter doctor</code> 走就完事了</p><p>但是启动ios模拟器的时候 没有反应
需要配置相应环境
<code>brew install --HEAD libimobiledevice</code></p><blockquote><p>Windows</p></blockquote><p><em>bin</em> 目录配置 <em>Path</em> 即可</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="自检环节">自检环节<a class="hash-link" href="#自检环节" title="标题的直接链接">​</a></h2><p><code>flutter doctor</code></p><p>会检查以下几个环境</p><ol><li>Flutter 本身环境 （macOS 10.15 beta 就是在这里挂了）</li><li>Android SDK 环境<ol><li><code>flutter doctor --android-licenses</code></li></ol></li><li>Android Studio 环境 需要装插件<ol><li>在开始界面点击 <code>Configure</code> 里的 <code>Plugins</code></li></ol></li><li>VSCode 环境 需要装插件</li><li>连接设备</li><li>Mac 下还会检测 XCode 以及其命令行环境</li></ol>]]></content>
        <category label="笔记" term="笔记"/>
        <category label="flutter" term="flutter"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CocosCreator 打包记录]]></title>
        <id>/2019/cocos</id>
        <link href="https://danyow.github.io/blog/2019/cocos"/>
        <updated>2019-07-04T23:30:17.000Z</updated>
        <summary type="html"><![CDATA[Title: 记录在打包过程中遇到的坑]]></summary>
        <content type="html"><![CDATA[<p>Title: 记录在打包过程中遇到的坑
Version: 2.0.10</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="环境配置">环境配置<a class="hash-link" href="#环境配置" title="标题的直接链接">​</a></h2><ol><li><p><em>NDK</em> 环境
推荐的是 <em><a href="http://dl.google.com/android/ndk/android-ndk-r10e-darwin-x86_64.bin" target="_blank" rel="noopener noreferrer">r10e</a></em>(点击即可下载了)</p></li><li><p>但是打出的包不可使用！！！</p></li></ol><p>...告辞</p>]]></content>
        <category label="CocosCreator" term="CocosCreator"/>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[上帝掷骰子吗？]]></title>
        <id>/2019/quantum</id>
        <link href="https://danyow.github.io/blog/2019/quantum"/>
        <updated>2019-07-04T23:30:17.000Z</updated>
        <summary type="html"><![CDATA[Title: 思维实验室 推荐]]></summary>
        <content type="html"><![CDATA[<p>Title: <em>思维实验室</em> 推荐</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="黄金时代">黄金时代<a class="hash-link" href="#黄金时代" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="赫兹">赫兹<a class="hash-link" href="#赫兹" title="标题的直接链接">​</a></h3><ul><li>1887 年证实了电磁波。</li><li>不到 37 岁卒。</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="以太-伪科学定论">以太 （伪科学定论）<a class="hash-link" href="#以太-伪科学定论" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="胡克---惨">胡克 - 惨<a class="hash-link" href="#胡克---惨" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="光的两个实验">光的两个实验<a class="hash-link" href="#光的两个实验" title="标题的直接链接">​</a></h3><ul><li>双缝干涉（杨）</li><li>圆盘衍射（菲涅尔）</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="麦克斯韦的电磁波光被划为其中">麦克斯韦的电磁波（光被划为其中）<a class="hash-link" href="#麦克斯韦的电磁波光被划为其中" title="标题的直接链接">​</a></h3>]]></content>
        <category label="笔记" term="笔记"/>
        <category label="科学" term="科学"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[mac VSCode报错]]></title>
        <id>/2019/vscode/vscode</id>
        <link href="https://danyow.github.io/blog/2019/vscode/vscode"/>
        <updated>2019-06-19T22:20:03.000Z</updated>
        <summary type="html"><![CDATA[Title: mac VSCode 更新失败，提示 Permission denied 解决办法]]></summary>
        <content type="html"><![CDATA[<p>Title: <em>mac VSCode</em> 更新失败，提示 <em>Permission denied</em> 解决办法</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="1-针对右下提示如下">1. 针对右下提示如下<a class="hash-link" href="#1-针对右下提示如下" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_CBWl language-error theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-error codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">Could not create temporary directory: Permission denied</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="解决办法">解决办法<a class="hash-link" href="#解决办法" title="标题的直接链接">​</a></h3><ol><li><p>完全关闭 <em>VSCode</em></p></li><li><p>终端输入</p><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#8250DF">sudo</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">chown</span><span class="token plain"> -R </span><span class="token environment constant" style="color:#005CC5">$USER</span><span class="token plain"> ~/Library/Caches/com.microsoft.VSCode.ShipIt/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">xattr -dr com.apple.quarantine /Applications/Visual</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"> Studio</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"> Code.app</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>完成</p></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="多去-vscode-底下的提交问题">多去 <em><a href="https://github.com/microsoft/vscode" target="_blank" rel="noopener noreferrer">VSCode</a></em> 底下的提交问题<a class="hash-link" href="#多去-vscode-底下的提交问题" title="标题的直接链接">​</a></h2><p><a href="https://github.com/Microsoft/vscode/issues/7426" target="_blank" rel="noopener noreferrer">原issues地址</a>
<a href="https://github.com/microsoft/vscode" target="_blank" rel="noopener noreferrer">Github地址</a></p>]]></content>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[常用命令]]></title>
        <id>/2019/command</id>
        <link href="https://danyow.github.io/blog/2019/command"/>
        <updated>2019-06-16T21:03:12.000Z</updated>
        <summary type="html"><![CDATA[Title: 记录下自己经常上网查的命令。]]></summary>
        <content type="html"><![CDATA[<p>Title: 记录下自己经常上网查的命令。</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="nginx">Nginx<a class="hash-link" href="#nginx" title="标题的直接链接">​</a></h2><ul><li>查看是否还在运行</li></ul><p><code>ps -ef|grep nginx</code></p><ul><li><p>重启</p><ol><li>验证 <code>nginx.conf</code> 是否正确。 <code>nginx -t</code></li><li>重启服务 <code>nginx -s reload</code></li></ol></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="macos">macOS<a class="hash-link" href="#macos" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装-rvm">安装 <em>rvm</em><a class="hash-link" href="#安装-rvm" title="标题的直接链接">​</a></h3><ol><li><p>安装 <em>rvm</em> , 一个基于 <em>ruby</em> 的工具库？</p><p><code>curl -L get.rvm.io | bash -s stable</code></p></li><li><p>安装好 <em>rvm</em> 之后</p><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token builtin class-name" style="color:#116329">source</span><span class="token plain"> ~/.bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name" style="color:#116329">source</span><span class="token plain"> ~/.bash_profile</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>测试安装是否正常</p><p><code>rvm -v</code></p></li><li><p>查看当前 <em>ruby</em> 版本</p><p><code>ruby -v</code></p></li><li><p>列出已知的 <em>ruby</em> 版本</p><p><code>rvm list known</code></p></li><li><p>安装 <em>ruby</em> </p><p><code>rvm install x.x.x</code></p></li><li><p>升级 <em>gem</em> </p><p><code>sudo gem update --system</code></p></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="ssh"><em>SSH</em><a class="hash-link" href="#ssh" title="标题的直接链接">​</a></h3><ol><li><p>查看本地是否生成了 <em>SSH</em></p><p><code>ls -al ~/.ssh</code></p></li><li><p>生成新的 <em>SSH</em> <strong>key</strong></p><p><code>ssh-keygen -t rsa -C "i.zuucol@gmail.com"</code></p></li><li><p>查看公钥</p><p><code>cat ~/.ssh/id_rsa.pub</code></p></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="提示安装文件损坏">提示安装文件损坏<a class="hash-link" href="#提示安装文件损坏" title="标题的直接链接">​</a></h3><p><code>sudo spctl --master-disable</code></p><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="cocoapod-更新"><em>cocoapod</em> 更新<a class="hash-link" href="#cocoapod-更新" title="标题的直接链接">​</a></h3><p><code>pod install --verbose --no-repo-update</code>
<code>pod update --verbose --no-repo-update</code></p><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="xcode-无法被检测到时"><em>Xcode</em> 无法被检测到时<a class="hash-link" href="#xcode-无法被检测到时" title="标题的直接链接">​</a></h3><p><code>sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer</code></p>]]></content>
        <category label="笔记" term="笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[fullstack开源库]]></title>
        <id>/2019/fullstack</id>
        <link href="https://danyow.github.io/blog/2019/fullstack"/>
        <updated>2019-06-10T20:10:20.000Z</updated>
        <summary type="html"><![CDATA[Title: 大致就是项目做完没给钱，然后就开源了。]]></summary>
        <content type="html"><![CDATA[<p>Title: 大致就是项目做完没给钱，然后就开源了。</p><p>Github：<a href="https://github.com/TrillCyborg/fullstack" target="_blank" rel="noopener noreferrer">fullstack</a>
提交是 <em>586fe8bea5d5a12406253994bb848c257109eb15</em></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="大致步骤">大致步骤<a class="hash-link" href="#大致步骤" title="标题的直接链接">​</a></h2><ol><li><p>首先准备本地环境</p><ol><li>安装 node 环境 <code>brew install node</code></li><li>安装 yarn <code>brew install yarn</code></li></ol></li><li><p>去准备 api 参数</p><ol><li><p>先去谷歌云平台 <a href="https://console.cloud.google.com/" target="_blank" rel="noopener noreferrer">Google Cloud Platform</a> 里面创建一个凭据，在 <em>API和服务</em> 里面的 <em>凭据</em>, 这时候会获得一个密钥，将其记作 <strong>GOOGLE_MAPS_KEY</strong>。</p></li><li><p>然后到 <em>API和服务</em> 里面的 <em>库</em>，找的地图类别中的 <em>Places API</em>，将其启用，谷歌这边就算是完成了。</p></li><li><p>然后到 <a href="https://plaid.com/" target="_blank" rel="noopener noreferrer">PLAID</a> 上注册账号，这个网站应该是专门获取银行账户内信息的一个聚合平台。完成后找到 <code>Node.js</code> 选项，下面会有对应的信息</p><div class="codeBlockContainer_CBWl language-json theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-json codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#005CC5">"ACCOUNTS_SECRET"</span><span class="token operator" style="color:#D73A49">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"secret"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#005CC5">"PLAID_CLIENT_ID"</span><span class="token operator" style="color:#D73A49">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"xxxxxxxxxxxxxxxxxxxx"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#005CC5">"PLAID_SECRET"</span><span class="token operator" style="color:#D73A49">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"xxxxxxxxxxxxxxxxxxxx"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#005CC5">"PLAID_PUBLIC_KEY"</span><span class="token operator" style="color:#D73A49">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"xxxxxxxxxxxxxxxxxxxx"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#005CC5">"PLAID_PRODUCTS"</span><span class="token operator" style="color:#D73A49">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"transactions"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#005CC5">"PLAID_COUNTRY_CODES"</span><span class="token operator" style="color:#D73A49">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"US"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#005CC5">"PLAID_ENV"</span><span class="token operator" style="color:#D73A49">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"sandbox"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol></li><li><p>填写参数</p><ol><li>将 <strong>GOOGLE_MAPS_KEY</strong> 替换到 <code>/client/src/config/example.env.json</code> 文件内。</li><li>将 <strong>PLAID_PUBLIC_KEY</strong> 也替换到这个文件内。</li><li>将 <strong>PLAID_CLIENT_ID</strong>、<strong>PLAID_SECRET</strong>、<strong>PLAID_PUBLIC_KEY</strong> 替换到 <code>server/config/default.json</code> 文件内。</li></ol></li><li><p>然后启动本地的 mongo</p><p><code>mongod --dbpath /Users/imagons/mongo/data</code></p><p>这个只是我的启动方式。</p></li><li><p>进入到 <code>server</code> 目录, 然后执行 <code>yarn install</code> 和 <code>yarn watch</code></p></li><li><p>另起一个终端，然后进入到 <code>client</code> 目录，然后执行</p><ol><li><code>cp ./src/config/example.env.json ./src/config/development.env.json</code></li><li><code>yarn install</code></li><li><code>yarn start</code></li></ol></li><li><p>（这一步貌似不执行也能运行了）又再起一个终端，继续在 <code>client</code> 目录，执行 <code>yarn gen:types:watch</code></p></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="注意事项">注意事项<a class="hash-link" href="#注意事项" title="标题的直接链接">​</a></h2><ul><li><p>如果遇到 <code>npm</code> 相关的问题，建议重装 <code>node</code> 环境。</p></li><li><p>4000 的端口和 3000 的端口不要被占用。</p></li></ul>]]></content>
        <category label="Github" term="Github"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flask全套组件及原理剖析]]></title>
        <id>/2019/flask</id>
        <link href="https://danyow.github.io/blog/2019/flask"/>
        <updated>2019-06-09T22:31:08.000Z</updated>
        <summary type="html"><![CDATA[Title: Bilibili]]></summary>
        <content type="html"><![CDATA[<p>Title: <a href="https://www.bilibili.com/video/av23109760/?p=1" target="_blank" rel="noopener noreferrer">Bilibili</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="p8">P8<a class="hash-link" href="#p8" title="标题的直接链接">​</a></h2><ul><li>使用字符串来导入类</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token builtin">__import__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">globals</span><span class="token operator" style="color:#D73A49">=</span><span class="token boolean" style="color:#005CC5">None</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">locals</span><span class="token operator" style="color:#D73A49">=</span><span class="token boolean" style="color:#005CC5">None</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fromlist</span><span class="token operator" style="color:#D73A49">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> level</span><span class="token operator" style="color:#D73A49">=</span><span class="token number" style="color:#005CC5">0</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li><code>config</code> 的配置文件路径默认在根目录下，需要更改目录的话，要查看对应的Api文档。</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="p9">P9<a class="hash-link" href="#p9" title="标题的直接链接">​</a></h2><ul><li><code>__name__</code> 函数调用的话，可以获取这个函数的名称。</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="p18">P18<a class="hash-link" href="#p18" title="标题的直接链接">​</a></h2><ul><li>怎么用父类去约束子类必须实现某方法，意指接口（<code>interface</code>）。</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Base</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">play</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#CF222E">raise</span><span class="token plain"> NoImplementedError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'必须实现该方法'</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li><p>顺带一提 <a href="https://www.bilibili.com/video/av23109760/?p=18" target="_blank" rel="noopener noreferrer">P18</a> 这一讲当中大概是 20 几分钟左右讲到的配置去做某事的思路对我启发蛮大。并且有助于理解 <em>Django</em> 的中间件。</p></li><li><p>装饰器可以有多个，下面的会和被装饰的函数当成 inner 加入到上层的装饰器当中去。</p></li><li><p><code>endpoint</code> 的意义目前理解为 <code>id</code>。</p></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="p19">P19<a class="hash-link" href="#p19" title="标题的直接链接">​</a></h2><ul><li>利用 <code>functools.wraps()</code> 来帮助我们设置函数的元信息</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">import</span><span class="token plain"> functools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">wapper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">func</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:#393A34">@functools</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">wapper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">func</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 保存元信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">inner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#D73A49">*</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#D73A49">*</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> inner</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:#393A34">@wapper</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">foo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">foo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__name__</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">如果不设置元信息的话，会导致打印的是 inner</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">设置之后才可以确定是原先的函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="p20">P20<a class="hash-link" href="#p20" title="标题的直接链接">​</a></h2><ul><li><p>闪现：类似于暂时存储部分内容的快照，取出来就没了。（阅后即焚）</p><p>  应用场景：对临时数据的操作，例如错误信息。</p></li><li><p>请求扩展，指的是在请求之前和响应之前的监听，可以有多个监听，请求之前的监听是顺序执行，响应的是倒序执行。</p><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token decorator annotation punctuation" style="color:#393A34">@app</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">before_request</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">before_request_1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#D73A49">*</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"before_request_1 进来了"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:#393A34">@app</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">before_request</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">before_request_2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#D73A49">*</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"before_request_2 进来了"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:#393A34">@app</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">after_request</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">after_request_1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"after_request_1 走了"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:#393A34">@app</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">after_request</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">after_request_2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"after_request_2 走了"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">打印顺序为</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">before_request_1 进来了</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">before_request_2 进来了</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">after_request_2 走了</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">after_request_1 走了</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>  如果请求拦截之后，在他之后的请求就不会执行了，但响应的还是会继续执行。</p></li><li><p>根据状态码定义错误信息</p><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token decorator annotation punctuation" style="color:#393A34">@app</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">errorhandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#005CC5">404</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">error_404</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"404页面没找到"</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p><code>before_first_request</code> 第一个请求</p><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token decorator annotation punctuation" style="color:#393A34">@app</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">before_first_request</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">first</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#D73A49">*</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">## 连接数据库之类的</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">pass</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="p22">P22<a class="hash-link" href="#p22" title="标题的直接链接">​</a></h2><ul><li>中间件的讲解 <a href="https://www.bilibili.com/video/av23109760/?p=22" target="_blank" rel="noopener noreferrer">P22</a></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="p25">P25<a class="hash-link" href="#p25" title="标题的直接链接">​</a></h2><ul><li><code>threading.local()</code> 给每个线程开辟一个内存空间用以对应的线程执行相应操作。达到类似加锁的目的。</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="p36">P36<a class="hash-link" href="#p36" title="标题的直接链接">​</a></h2><ul><li>数据的链接池库采用 <code>DBUtils</code> ，但如果使用的是 <code>PooledDB</code> 模式的话，其中有个参数需要注意 <code>maxshared</code> : 链接池中最多共享的链接数量。0 为全部共享，但这个值设置的时候是由 <code>creator</code> 的 <code>threadsafety</code> 来判别的，也就是说设置后不一定会生效。</li></ul>]]></content>
        <category label="笔记" term="笔记"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[天文与重力测量]]></title>
        <id>/2019/astronomy</id>
        <link href="https://danyow.github.io/blog/2019/astronomy"/>
        <updated>2019-06-09T13:23:22.000Z</updated>
        <summary type="html"><![CDATA[Title: 高等院校测绘工程系列教材]]></summary>
        <content type="html"><![CDATA[<p>Title: 高等院校测绘工程系列教材</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="1-天文测量简介">1. 天文测量简介<a class="hash-link" href="#1-天文测量简介" title="标题的直接链接">​</a></h2><ul><li><p>宇宙的”宙”指的是时间</p></li><li><p>米（m），1791年为海平面上地球赤道到北极点距离的千万分之一作为 1 米，1983 年改为光在真空中的 1/299792458s 的时间间隔所经路程的长度作为 1 米。</p></li><li><p>随后引入天文单位，AU（Astronomical Unit）日地距离</p></li></ul><div class="math math-display"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>1</mn><mi>A</mi><mi>U</mi><mo>=</mo><mn>1.4959787</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>11</mn></msup><mi>m</mi></mrow><annotation encoding="application/x-tex">  1 AU = 1.495 978 7\times10 ^{11} m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em"></span><span class="mord">1</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em">U</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em"></span><span class="mord">1.4959787</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8641em"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em"><span style="top:-3.113em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span></span></span></span></span></div><p>但这个天文单位还是太小，于是引入了光年ly（Light Year），1 光年约等于 9.46 万亿千米。</p><div class="math math-display"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>1</mn><mi>l</mi><mi>y</mi><mo>=</mo><mn>63240</mn><mi>A</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">  1 ly = 63 240 AU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.01968em">l</span><span class="mord mathnormal" style="margin-right:0.03588em">y</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.6833em"></span><span class="mord">63240</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em">U</span></span></span></span></span></div><ul><li><p>质量的天文单位是太阳质量</p></li><li><p>地球自转</p></li></ul><ol><li>恒星日   地球上某点与恒星的周期间隔  真正自转周期 23h56m4s</li><li>太阳日   地球上某点与太阳的周期间隔  昼夜交替周期 24h</li><li>太阴日   地球上某点与月球的周期间隔  潮汐变化周期 24h50m</li></ol><ul><li>开普勒三大定律</li></ul><ol><li>所有行星轨道的形状是一个椭圆，太阳位于椭圆的一个焦点上。</li><li>在相等的时间间隔内，行星与太阳的连线所扫过的面积相等。</li><li>行星运动周期的平方与椭圆长半轴的立方成正比。</li></ol><ul><li>星等 理解为就是亮度</li></ul><p>星等越大亮度越小，连续的星等其亮度成几何级数，而且又 1 等星的亮度正好是 6 等星的 100 倍，<span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mroot><mn>1</mn><mn>5</mn></mroot><mn>00</mn><mo>=</mo><mn>2.512</mn></mrow><annotation encoding="application/x-tex">\sqrt[5]100 = 2.512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.1328em"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7869em"><span style="top:-2.9647em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:0.833em"><span class="mord">1</span></span></span><span style="top:-2.8672em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em"><span></span></span></span></span></span><span class="mord">00</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.6444em"></span><span class="mord">2.512</span></span></span></span></span>，这个数为星等比。目前照相的方式可看到 23 等的暗星。</p><ol><li>北极星 2.12 等</li><li>牛郎星 0.89 等</li><li>月亮 -12.5 等</li><li>太阳 -27 等</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="2-天球坐标系及各坐标系间关系">2. 天球坐标系及各坐标系间关系<a class="hash-link" href="#2-天球坐标系及各坐标系间关系" title="标题的直接链接">​</a></h2><ul><li>坐标系这块过于数学化，认输！</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="3-时间系统及其换算">3. 时间系统及其换算<a class="hash-link" href="#3-时间系统及其换算" title="标题的直接链接">​</a></h2><ul><li><p>首先定义时间（时刻、历元）和（时间间隔），我们通常使用到的是后者。</p></li><li><p>时间的基本单位</p></li></ul><ol><li>地球自转 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>8</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1 \times 10^{-8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8141em"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></span></li><li>行星绕太阳的公转</li><li>原子的谐波振荡 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>13</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1 \times 10^{-13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8141em"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">13</span></span></span></span></span></span></span></span></span></span></span></span></span></li></ol>]]></content>
        <category label="阅读笔记" term="阅读笔记"/>
        <category label="天文" term="天文"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[旅行者一号]]></title>
        <id>/2019/voyager</id>
        <link href="https://danyow.github.io/blog/2019/voyager"/>
        <updated>2019-06-09T11:57:27.000Z</updated>
        <summary type="html"><![CDATA[Title: 旅行者一号]]></summary>
        <content type="html"><![CDATA[<p>Title: 旅行者一号</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="环境">环境<a class="hash-link" href="#环境" title="标题的直接链接">​</a></h2><ol><li>地理位置转空间坐标的规则</li><li><del>星系规模的随机算法</del></li><li>飞船的飞行时间计算</li><li>遭遇当前星系时某星的引力弹弓时间确定</li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="地理位置转空间坐标的规则">地理位置转空间坐标的规则<a class="hash-link" href="#地理位置转空间坐标的规则" title="标题的直接链接">​</a></h3><p>假定以目前地球为例，每个人的坐标是球上的某个点，那么得出来将会是一个点化的世界地图，这就看起来很不合适，所以应当保持其真正的地理坐标？</p><p>简单点，以平行宇宙来算和固定的星系来确定。更加具有真实性和科幻性。</p><blockquote><p>TODO</p></blockquote><ul><li>平行宇宙的数量</li><li>有哪些固定的星系</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="星系规模的随机算法"><del>星系规模的随机算法</del><a class="hash-link" href="#星系规模的随机算法" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="飞船的飞行时间计算">飞船的飞行时间计算<a class="hash-link" href="#飞船的飞行时间计算" title="标题的直接链接">​</a></h3><p>需要收集资料  </p><ol><li>星系之间的距离</li><li>飞船的速度</li><li>时间的缩减方式（以天为基准<ol><li>速度增加？</li><li>距离缩短？</li></ol></li></ol><blockquote><p>TODO</p></blockquote><ul><li>固定星系之间的距离</li><li>飞船的速度</li><li>缩减方式</li><li>黑洞位置的设置</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="遭遇当前星系时某星的引力弹弓时间确定">遭遇当前星系时某星的引力弹弓时间确定<a class="hash-link" href="#遭遇当前星系时某星的引力弹弓时间确定" title="标题的直接链接">​</a></h3><ol><li>以天为单位，一天最多两次，通知用户操作</li><li>数量，依据当前旅行者弹弓次数</li></ol><blockquote><p>TODO</p></blockquote><ul><li>旅行者弹弓次数</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="玩家信息">玩家信息<a class="hash-link" href="#玩家信息" title="标题的直接链接">​</a></h2><ol><li>创建<ol><li>基于地理坐标去生成星系图谱所在位置</li><li>用户名</li></ol></li><li>修改<ol><li>用户名</li><li>地理位置（暂且不做）</li></ol></li><li>查询<ol><li>设计查询方案（暂且不做）</li></ol></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="星球玩法">星球玩法<a class="hash-link" href="#星球玩法" title="标题的直接链接">​</a></h2><ol><li>收集<ol><li>采矿</li><li>冶炼</li><li>制作</li></ol></li><li>剧情<ol><li>人物剧情</li><li>星球剧情</li><li>历史剧情</li></ol></li><li>操作方式<ol><li>点为主</li></ol></li></ol><blockquote><p>TODO</p></blockquote><ul><li>原始掉落飞行器所携带信息清单</li><li>修复飞行器所需物资精简以及清单</li><li>火箭所需物资清单</li><li>飞行器所携带信息限制</li><li>剧情的分配</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="飞行途中">飞行途中<a class="hash-link" href="#飞行途中" title="标题的直接链接">​</a></h2><ol><li>引力弹弓时通知玩家找寻最佳时机</li><li>拍照？</li></ol><p>由于飞行器是不能直接创造出来。
如果需要添加飞行器功能，类似AI，需要在星球的收集过程中添加上去。</p><blockquote><p>TODO</p></blockquote><ul><li>拍照功能确定如何做？</li><li>通知后的操作方式</li><li>操作时间限制</li></ul>]]></content>
        <category label="规划" term="规划"/>
        <category label="后台" term="后台"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python高手之路]]></title>
        <id>/2019/python/inspect</id>
        <link href="https://danyow.github.io/blog/2019/python/inspect"/>
        <updated>2019-06-09T11:28:32.000Z</updated>
        <summary type="html"><![CDATA[Title: 第三版]]></summary>
        <content type="html"><![CDATA[<p>Title: 第三版</p><ul><li>10.1 生成器</li></ul><p>查看一个函数是否是生成器 <code>isgeneratorfunction()</code></p><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">import</span><span class="token plain"> inspect</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">inspect</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isgeneratorfunction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">foo</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>获取生成器的当前状态 <code>getgeneratorstate()</code></p><ol><li><code>GEN_CREATED</code>    等待被第一次执行</li><li><code>GEN_RUNNING</code>    正在被执行</li><li><code>GEN_SUSPENDED</code>  等待被 <code>next()</code> 调用</li><li><code>GEN_CLOSED</code>     结束运行</li></ol>]]></content>
        <category label="笔记" term="笔记"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[对对子]]></title>
        <id>/2019/poetry</id>
        <link href="https://danyow.github.io/blog/2019/poetry"/>
        <updated>2019-05-30T21:24:23.000Z</updated>
        <summary type="html"><![CDATA[花无百日红，却有百态生，一态又一态，毁灭至重生！水有清浊，人有正邪，似清却非清，似邪却非邪，鱼目混珠境，慧眼观，慧眼连慧心，非眼，亦非耳，心净静，心无杂念，方能辨！  —— Elewen]]></summary>
        <content type="html"><![CDATA[<p>花无百日红，却有百态生，一态又一态，毁灭至重生！水有清浊，人有正邪，似清却非清，似邪却非邪，鱼目混珠境，慧眼观，慧眼连慧心，非眼，亦非耳，心净静，心无杂念，方能辨！  —— Elewen</p><p>叶有常青绿，却无诗词颂，顾花忘落叶，花落拂袖去！人有离合，月有圆缺，似离却非离，似缺却非缺，泾渭分明时，现彼岸，彼岸有羞花，无色，亦无叶，花待叶，叶肥花红，登彼岸！  —— Danyow</p><p>Title: 和有钱的文艺青年约会是什么样的体验？（已经被删）</p><p><a href="https://www.youtube.com/watch?v=xJ-wHmfnuek" target="_blank" rel="noopener noreferrer">墙外链接</a></p><p>章台柳，章台柳；昔日青青今在否？
东风恶，欢情薄；一杯愁绪，几年离索。
而今却悔当时错，当时错；
万事休休休莫莫；
一夜湘君白发多，
无人能唱采莲歌；
夜长人奈何。
人成各，今非昨；
今日岱宗夫如何。</p>]]></content>
        <category label="回忆" term="回忆"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[廖雪峰Python学习教程]]></title>
        <id>/2019/python/python</id>
        <link href="https://danyow.github.io/blog/2019/python/python"/>
        <updated>2019-05-29T22:19:59.000Z</updated>
        <summary type="html"><![CDATA[小白入门, 以前的笔记。]]></summary>
        <content type="html"><![CDATA[<p>小白入门, 以前的笔记。</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="函数">函数<a class="hash-link" href="#函数" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="函数的参数">函数的参数<a class="hash-link" href="#函数的参数" title="标题的直接链接">​</a></h3><ul><li>当默认参数为可变对象的时候 eg:</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">add_end</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">L</span><span class="token operator" style="color:#D73A49">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    L</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'END'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> L</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">如果多次调用该函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">就会导致L的值不断递增</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">&gt;&gt;&gt; add_end()</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">['END', 'END']</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">&gt;&gt;&gt; add_end()</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">['END', 'END', 'END']</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">因为L也是一个变量</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">所以最佳做法是将 L=None</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">在函数内部去做判断</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>定义可变参数的的函数</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">calc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#D73A49">*</span><span class="token plain">numbers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">sum</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">for</span><span class="token plain"> n </span><span class="token keyword" style="color:#CF222E">in</span><span class="token plain"> numbers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">sum</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token builtin">sum</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">+</span><span class="token plain"> n </span><span class="token operator" style="color:#D73A49">*</span><span class="token plain"> n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> </span><span class="token builtin">sum</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C"># 当如果要使用list传入的话</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nums </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">calc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#D73A49">*</span><span class="token plain">nums</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>关键字参数的用法和可变参数类似</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 定义</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#调用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> extra </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#E3116C">'city'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'Beijing'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'job'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'Engineer'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> person</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'Jack'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">24</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">extra</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>命名关键字参数</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 无可变参数时 必须加入*分隔</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">person</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> age</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">*</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> job</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> age</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> job</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 有可变参数时 无序理会</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">person</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> age</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">*</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> job</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> age</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> job</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>参数组合</li></ul><p>目前共有五种参数</p><ol><li>必选</li><li>默认</li><li>可变</li><li>关键字</li><li>命名关键字</li></ol><p>定义必须遵循以上顺序</p><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="递归函数">递归函数<a class="hash-link" href="#递归函数" title="标题的直接链接">​</a></h3><ul><li><p>递归需要注意一点就是: 防止函数栈溢出</p></li><li><p>尽可能的采用尾递归方式来处理递归函数</p><ul><li>尾递归：函数返回的时候, 只调用该函数本身, 不能添加其他的表达式.</li></ul></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="高级特性">高级特性<a class="hash-link" href="#高级特性" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="切片">切片<a class="hash-link" href="#切片" title="标题的直接链接">​</a></h3><ul><li>当如果采用-号来进行倒序取数的时候, 并不是取得顺序也是倒的, 而是正序.</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">L </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#E3116C">'Michael'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'Sarah'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'Tracy'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'Bob'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'Jack'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">L</span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#D73A49">-</span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 这个-2指从倒数第二个开始, 继续往后取值, 而不是往前取值.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 即: ['Bob', 'Jack']</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 而不是 ['Bob', 'Tracy', 'Sarah', 'Michael']</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="迭代">迭代<a class="hash-link" href="#迭代" title="标题的直接链接">​</a></h3><ul><li><p>字典直接遍历时取得是所有的键, 需要字典的所有值是 <code>dic.values()</code>, 所有键值对是 <code>dic.items()</code></p></li><li><p><code>Iterable</code>: 可迭代 <code>from collections import Iterable</code></p></li><li><p><code>isinstance</code>: 判断一个对象的类型 <code>isinstance(object, class-or-type-or-tuple)</code></p></li><li><p><code>enumerate</code> 将一个list改变为索引-元素对</p></li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#CF222E">for</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value </span><span class="token keyword" style="color:#CF222E">in</span><span class="token plain"> </span><span class="token builtin">enumerate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#E3116C">'A'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'B'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'C'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">     </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">0</span><span class="token plain"> A</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">1</span><span class="token plain"> B</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">2</span><span class="token plain"> C</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>可以同时引用两个变量</li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#CF222E">for</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y </span><span class="token keyword" style="color:#CF222E">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#005CC5">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">9</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">     </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">1</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">2</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">3</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">9</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li><code>for ... in</code> 是不支持直接遍历字典的时候, 同时取到键和值需要以下方法</li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 会报错</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">d </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#E3116C">'key_1'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#E3116C">'1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'key_2'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#E3116C">'2'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'key_3'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#E3116C">'3'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">for</span><span class="token plain"> key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value </span><span class="token keyword" style="color:#CF222E">in</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key </span><span class="token operator" style="color:#D73A49">+</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 加上items这样就不会报错了</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">d </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#E3116C">'key_1'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#E3116C">'1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'key_2'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#E3116C">'2'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'key_3'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#E3116C">'3'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">for</span><span class="token plain"> key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value </span><span class="token keyword" style="color:#CF222E">in</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">items</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key </span><span class="token operator" style="color:#D73A49">+</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="列表生成器">列表生成器<a class="hash-link" href="#列表生成器" title="标题的直接链接">​</a></h3><ul><li><code>[]</code></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="生成器-generator">生成器: generator<a class="hash-link" href="#生成器-generator" title="标题的直接链接">​</a></h3><ul><li><code>()</code> 或者 <code>yield</code></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="迭代器-iterator">迭代器: Iterator<a class="hash-link" href="#迭代器-iterator" title="标题的直接链接">​</a></h3><ul><li>凡是可作用于<code>for</code>循环的对象都是<code>Iterable</code>类型；</li><li>凡是可作用于<code>next()</code>函数的对象都是<code>Iterator</code>类型，它们表示一个惰性计算的序列；</li><li>集合数据类型如<code>list、dict、str</code>等是<code>Iterable</code>但不是<code>Iterator</code>，不过可以通过<code>iter()</code>函数获得一个<code>Iterator</code>对象。</li><li><code>for</code>循环本质上就是通过不断调用<code>next()</code>函数实现的</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="函数式编程">函数式编程<a class="hash-link" href="#函数式编程" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="builtins-内置函数">builtins: 内置函数<a class="hash-link" href="#builtins-内置函数" title="标题的直接链接">​</a></h3><ul><li><code>abs</code>就在<code>import builtins</code></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="高阶函数">高阶函数<a class="hash-link" href="#高阶函数" title="标题的直接链接">​</a></h3><ul><li><p><code>map</code> 对每个数进行一次函数算法, 然后重新组装为一个数组.</p></li><li><p><code>reduce</code> 从 0, 1 每两个, 直到最后一个数进行一次函数算法, 然后返回.</p></li><li><p><code>filter</code> 遍历每个数对其进行过滤 真保存, 假删除.</p></li></ul><blockquote><p>以上都是返回的是 <code>Iterator</code> 类型 需要用<code>list()</code>让其算完.</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="模块">模块<a class="hash-link" href="#模块" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="使用模块">使用模块<a class="hash-link" href="#使用模块" title="标题的直接链接">​</a></h3><ul><li><p><code>sys.argv</code>存储了命令行输入参数, 当长度为1时没有输入参数.</p></li><li><p><code>if __name__=='__main__':</code> 被引入使用时失效, 仅在运行当前文件时生效, 主要用于测试.</p></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="安装第三方模块">安装第三方模块<a class="hash-link" href="#安装第三方模块" title="标题的直接链接">​</a></h3><ul><li>模块搜索路径 环境修改<code>PYTHONPATH</code></li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 仅仅在运行时添加</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'/Users/michael/my_py_scripts'</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="面向对象编程">面向对象编程<a class="hash-link" href="#面向对象编程" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="获取对象信息">获取对象信息<a class="hash-link" href="#获取对象信息" title="标题的直接链接">​</a></h3><ul><li><p>获取对象所有方法 <code>dir()</code></p></li><li><p>类似OC动态运行时 <code>getattr()</code> <code>setattr()</code> <code>hasattr()</code></p></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="面向对象高级编程">面向对象高级编程<a class="hash-link" href="#面向对象高级编程" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="使用slots">使用<strong>slots</strong><a class="hash-link" href="#使用slots" title="标题的直接链接">​</a></h3><ul><li>python的动态能力很强, 甚至可以给类添加绑定一个方法, 或者是给对象绑定一个参数. 但有问题就是想起限制作用, 这时候就可以使用到了<strong>slots</strong></li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Student</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    __slots__ </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'name'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'age'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 用tuple定义允许绑定的属性名称</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">这里补充下网友发现的一些现象</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">1. 如果设置了__slots__ 但是给类直接绑定新的值, 还是可行 eg: Student.score = 99</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">2. 如果采用了__slots__内含有双下划线的变量时, 在继承的时候该 变量会变形 eg: Person __slots__('__name') Student(Person) __slots__() 这时候的Student的name在用的时候会报错. 由于其没有改写本身的__name, 所以已经变形为_Persion__name</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="定制类">定制类<a class="hash-link" href="#定制类" title="标题的直接链接">​</a></h3><ul><li><code>__init__</code>    初始化的时候使用</li><li><code>__len__</code>     <code>len()</code>方法的时候</li><li><code>__str__</code>     <code>print()</code>方法的时候</li><li><code>__repr__</code>    命令行直接输出的时候</li><li><code>__iter__</code>    返回迭代所需要的对象</li><li><code>__next__</code>    返回下一个取出来的值</li><li><code>__getitem__</code> <code>[::]</code>的方式取下标</li><li><code>__getattr__</code> 通常用作获取一个没有的值得属性的时候</li><li><code>__call__</code>    判断是否可调用的具体条件<code>callable()</code></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="元类">元类<a class="hash-link" href="#元类" title="标题的直接链接">​</a></h3><ul><li>类可以通过 <code>type()</code> 直接去创建.</li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">fn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">'world'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 先定义函数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'Hello, %s.'</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">%</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hello </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token builtin">type</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'Hello'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">,</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">dict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hello</span><span class="token operator" style="color:#D73A49">=</span><span class="token plain">fn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 创建Hello class</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>而<code>metaclass</code>本质上就是监听创建这个类时的回调, 从而在本源上大规模的去改动这个类的创建形式.</li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">ListMetaclass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">type</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__new__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cls</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bases</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        attrs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#E3116C">'add'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token keyword" style="color:#CF222E">lambda</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> </span><span class="token builtin">type</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__new__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cls</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bases</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">MyList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">list</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> metaclass</span><span class="token operator" style="color:#D73A49">=</span><span class="token plain">ListMetaclass</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">&gt;&gt;&gt; L = MyList()</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">&gt;&gt;&gt; L.add(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">&gt;&gt; L</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">[1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="io编程">IO编程<a class="hash-link" href="#io编程" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="序列化">序列化<a class="hash-link" href="#序列化" title="标题的直接链接">​</a></h3><ul><li>模型转json</li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 自定义模式</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">student2dict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">std</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#E3116C">'name'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> std</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#E3116C">'age'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> std</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">age</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#E3116C">'score'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> std</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">score</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> default</span><span class="token operator" style="color:#D73A49">=</span><span class="token plain">student2dict</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 偷懒模式</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> default</span><span class="token operator" style="color:#D73A49">=</span><span class="token keyword" style="color:#CF222E">lambda</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__dict__</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>json转模型</li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">dict2student</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> Student</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#E3116C">'name'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#E3116C">'age'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#E3116C">'score'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">json_str</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> object_hook</span><span class="token operator" style="color:#D73A49">=</span><span class="token plain">dict2student</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="进程和线程">进程和线程<a class="hash-link" href="#进程和线程" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="多线程">多线程<a class="hash-link" href="#多线程" title="标题的直接链接">​</a></h3><ul><li><p>GIL</p><p>  启动与CPU核心数量相同的N个线程，在4核CPU上可以监控到CPU占用率仅有102%，也就是仅使用了一核。</p><p>  但是用C、C++或Java来改写相同的死循环，直接可以把全部核心跑满，4核就跑到400%，8核就跑到800%，为什么Python不行呢？</p><p>  因为Python的线程虽然是真正的线程，但解释器执行代码时，有一个GIL锁：Global Interpreter Lock，任何Python线程执行前，必须先获得GIL锁，然后，每执行100条字节码，解释器就自动释放GIL锁，让别的线程有机会执行。这个GIL全局锁实际上把所有线程的执行代码都给上了锁，所以，多线程在Python中只能交替执行，即使100个线程跑在100核CPU上，也只能用到1个核。</p><p>  GIL是Python解释器设计的历史遗留问题，通常我们用的解释器是官方实现的CPython，要真正利用多核，除非重写一个不带GIL的解释器。</p><p>  所以，在Python中，可以使用多线程，但不要指望能有效利用多核。如果一定要通过多线程利用多核，那只能通过C扩展来实现，不过这样就失去了Python简单易用的特点。</p><p>  不过，也不用过于担心，Python虽然不能利用多线程实现多核任务，但可以通过多进程实现多核任务。多个Python进程有各自独立的GIL锁，互不影响。</p></li></ul>]]></content>
        <category label="笔记" term="笔记"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 内置函数]]></title>
        <id>/2019/python/eval</id>
        <link href="https://danyow.github.io/blog/2019/python/eval"/>
        <updated>2019-05-28T22:28:38.000Z</updated>
        <summary type="html"><![CDATA[eval()]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="eval"><code>eval()</code><a class="hash-link" href="#eval" title="标题的直接链接">​</a></h2><p><code>eval(expression[, globals[, locals]])</code></p><ul><li>expression -- 表达式。</li><li>globals -- 变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。</li><li>locals -- 变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain">x </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">7</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> </span><span class="token builtin">eval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'3 * x'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">21</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> </span><span class="token builtin">eval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'pow(2,2)'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> </span><span class="token builtin">eval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'2 + 2'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> n</span><span class="token operator" style="color:#D73A49">=</span><span class="token number" style="color:#005CC5">81</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#D73A49">&gt;&gt;</span><span class="token operator" style="color:#D73A49">&gt;</span><span class="token plain"> </span><span class="token builtin">eval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"n + 4"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#005CC5">85</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><blockquote><p>就好像是在 <em>python</em> 语言里面自建了一个 <em>python</em> 解析器。</p></blockquote>]]></content>
        <category label="笔记" term="笔记"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python3面向对象编程]]></title>
        <id>/2019/python/object</id>
        <link href="https://danyow.github.io/blog/2019/python/object"/>
        <updated>2019-05-27T22:33:07.000Z</updated>
        <summary type="html"><![CDATA[Title: 第二版]]></summary>
        <content type="html"><![CDATA[<p>Title: 第二版</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="2-python-对象">2. Python 对象<a class="hash-link" href="#2-python-对象" title="标题的直接链接">​</a></h2><ul><li>自我解释 -&gt; 在规范自己所编写的类的时候，应该加入详尽的注释。</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Point</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#E3116C">'这段是类注释，建议用单引号'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token operator" style="color:#D73A49">=</span><span class="token number" style="color:#005CC5">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token operator" style="color:#D73A49">=</span><span class="token number" style="color:#005CC5">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:#E3116C">'''多行文档注释'''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#CF222E">pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">foo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#E3116C">'单行文档注释'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#CF222E">pass</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>双下划线的命名的变量，是会对其实施<strong>命名改装</strong>。会自动封装 _(类名)</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="3-对象相似时">3. 对象相似时<a class="hash-link" href="#3-对象相似时" title="标题的直接链接">​</a></h2><ul><li>如果一个类继承了多个类，那么在初始化其父类时，可以采用如下方式。</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 分别调用父类</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Teacher</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Person</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Title</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> title</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> studens</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Person</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Title</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> title</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">studens </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> studens</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">以上就是简单定义了一个多继承关系的类，这么看来是没什么问题的</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">但作者提到了一个问题，如果在定义模型的时候，需要连接数据库，那么每次都是连接两次数据库。</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">这里可以采用 __mro__ 来修改方法的调用顺序</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 采用super() 和 **kw 的方式</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Person</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Title</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> title</span><span class="token operator" style="color:#D73A49">=</span><span class="token string" style="color:#E3116C">''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">title </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> title</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Teacher</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Person</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Title</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> studens</span><span class="token operator" style="color:#D73A49">=</span><span class="token plain">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#D73A49">**</span><span class="token plain">kw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">studens </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> studens</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">super() 的方式可以确保object只初始化一次。</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">**kw 的方式可以解决多父类情况下 参数不一致的问题</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>如果定义了一个抽象基类 <code>abc</code> 而且这个类重写了 <code>__subclasshook__(cls, C)</code> 的时候，需要注意</li></ul><p>任意类的实例在被调用 <code>insubclass</code> 和 <code>ininstance</code> 是会去调用抽象基类重写的 <code>__subclasshook__</code> 这个方法的，如果他说的是那么就是。</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="4-异常捕获">4. 异常捕获<a class="hash-link" href="#4-异常捕获" title="标题的直接链接">​</a></h2><ul><li><p><code>else</code> 和 <code>finally</code> 的调用是，没有异常时前者会执行，后者无论如何都会执行。</p></li><li><p>异常的层级</p></li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">    BaseException   &lt;---    KeybordInterrupt, SystemExit</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">                    &lt;---    Exception   &lt;---    其他所有的异常</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="6-python-数据结构">6. Python 数据结构<a class="hash-link" href="#6-python-数据结构" title="标题的直接链接">​</a></h2><ul><li>无法给内置类实例添加属性，但可以给自定义类添加属性。</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">o </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">👆会报错</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">👇正常运行</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">MyClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">m </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> MyClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">1</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>命名元组相当于字典</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">from</span><span class="token plain"> collections </span><span class="token keyword" style="color:#CF222E">import</span><span class="token plain"> namedtuple</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Stock </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> namedtuple</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"Stock"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"symbol current high low"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Stock = namedtuple("Stock", "symbol, current, high, low")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">stock </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> Stock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"FB"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">75.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">75.3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">74.2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 可以使用点语法</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">stock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">symbol</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li><p><code>total_ordering</code> 对应着 <code>&gt;, &lt;, ==, !=, &gt;=, &lt;=</code> 逻辑运算符</p></li><li><p><code>operator.itemgetter</code> 可以对元组排序时，直接修改所要比较时用到的是第几个属性</p></li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">from</span><span class="token plain"> operator </span><span class="token keyword" style="color:#CF222E">import</span><span class="token plain"> itemgetter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'h'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'n'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">6</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'o'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'p'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'t'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'y'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 这里直接采用第二个键来做比较的项</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token operator" style="color:#D73A49">=</span><span class="token plain">itemgetter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li>队列有三种</li></ul><ol><li><p>FIFO 队列（<em>First In First Out</em>）</p><p><code>from queue import Queue</code></p></li><li><p>LIFO 队列（<em>Last In First Out</em>）</p><p><code>from queue import LifoQueue</code></p></li><li><p>优先级队列</p><p><code>from queue import PriorityQueue</code></p></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="7-python-面向对象的捷径">7. Python 面向对象的捷径<a class="hash-link" href="#7-python-面向对象的捷径" title="标题的直接链接">​</a></h2><ul><li><p>上下文管理器，判断一个对象能否执行 <code>with</code> 语句，可以用哪个 <code>dir()</code> 查看里面是否有 <code>__ennter__</code> 和 <code>__exit__</code></p></li><li><p>参数解包，对于列表对象的解包是加 <code>*</code>, 字典的解包是 <code>**</code></p></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="8-字符串与序列化">8. 字符串与序列化<a class="hash-link" href="#8-字符串与序列化" title="标题的直接链接">​</a></h2><ul><li>占位值改变打印样式</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">{0:10s}     s字符串，然后是占10个字节。</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">{1:^9d}     d整形，然后占9个字节，^(脱字符)表示居中对齐。</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">{2:&lt;8.2f}   f浮点型，然后占8个字节，&lt;表示向左对齐，.2省略两位小数</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">{3:&gt;7.2f}   f浮点型，然后占7个字节，&gt;表示向右对齐，.2省略两位小数</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">orders </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'burger'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'fries'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">3.5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">'cola'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">1.75</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"PRODUCT    QUANTITY   PRICE    SUBTOTAL"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">for</span><span class="token plain"> product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> price</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> quantity </span><span class="token keyword" style="color:#CF222E">in</span><span class="token plain"> orders</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    subtotal </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> price </span><span class="token operator" style="color:#D73A49">*</span><span class="token plain"> quantity</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"{0:10s}{1:^9d}   ${2:&lt;8.2f}${3:&gt;7.2f}"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> quantity</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> price</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> subtotal</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">PRODUCT    QUANTITY   PRICE    SUBTOTAL</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">burger        5       $2.00    $  10.00</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">fries         1       $3.50    $   3.50</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">cola          3       $1.75    $   5.25</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="9-迭代器模式">9. 迭代器模式<a class="hash-link" href="#9-迭代器模式" title="标题的直接链接">​</a></h2><ul><li>协程</li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">tally</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    score </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">while</span><span class="token plain"> </span><span class="token boolean" style="color:#005CC5">True</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        increment </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token keyword" style="color:#CF222E">yield</span><span class="token plain"> score</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"increment : {}, score : {}"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">increment</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> score</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        score </span><span class="token operator" style="color:#D73A49">+=</span><span class="token plain"> increment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">white_sox </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> tally</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">white_sox</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">white_sox</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#005CC5">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">increment : 3, score : 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ol><li><code>yield</code> 的出现和生成器暂停。</li><li>在函数外执行 <code>send()</code> 方法，且激活了生成器。</li><li>发送的值赋给了 <code>yield</code> 语句左侧的变量。</li><li>生成器继续执行，直至遇到下一个 <code>yield</code> 语句。</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="10-python-设计模式-i">10. Python 设计模式 I<a class="hash-link" href="#10-python-设计模式-i" title="标题的直接链接">​</a></h2><ul><li><p>观察者模式在执行起来需要以下两个步骤</p><ol><li><p>被观察者主动通知观察者 通过 <code>_update_observers</code></p><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Inventory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">observers </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">_update_observers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#CF222E">for</span><span class="token plain"> observer </span><span class="token keyword" style="color:#CF222E">in</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">observers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            observer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>观察者自身现实被调用方法 通过 <code>__call__</code></p><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">class</span><span class="token plain"> </span><span class="token class-name" style="color:#116329">Observer</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> inventory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">inventory </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> inventory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">__call__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#E3116C">"观察成功！"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="12-测试面向对象程序">12. 测试面向对象程序<a class="hash-link" href="#12-测试面向对象程序" title="标题的直接链接">​</a></h2><ul><li><p><code>unittest</code> 的 <code>setUp()</code> 是用于每次执行测试时，都会调用该方法用以保证数据被污染 和 <code>tearDown()</code> 是用来保证每次测试结束后调用。</p></li><li><p><code>py.test</code> 与之相对应的有类似几个。</p><ol><li><code>setup_module</code></li><li><code>teardown_module</code></li><li><code>setup_class</code></li><li><code>teardown_class</code></li><li><code>setup_method</code></li><li><code>teardown_method</code></li></ol></li><li><p><code>pytest_funcarg__&lt;idenntifier&gt;</code> 和被测试函数需要接受的参数作为测试</p></li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">pytest_funcarg__numbers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#005CC5">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">def</span><span class="token plain"> </span><span class="token function" style="color:#8250DF">test_sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">numbers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#CF222E">assert</span><span class="token plain"> </span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">numbers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#D73A49">==</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">6</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="13-并发">13. 并发<a class="hash-link" href="#13-并发" title="标题的直接链接">​</a></h2><ul><li>自定义线程再被需要重写 <code>run()</code> 方法，但调用时用到的是 <code>start()</code></li></ul>]]></content>
        <category label="笔记" term="笔记"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python程序设计基础]]></title>
        <id>/2019/python/fundamentals</id>
        <link href="https://danyow.github.io/blog/2019/python/fundamentals"/>
        <updated>2019-05-27T21:06:13.000Z</updated>
        <summary type="html"><![CDATA[Title: 上海市高等学校计算机等级考试（二级）推荐教材]]></summary>
        <content type="html"><![CDATA[<p>Title: 上海市高等学校计算机等级考试（二级）推荐教材</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="2-python程序的基本语法">2. Python程序的基本语法<a class="hash-link" href="#2-python程序的基本语法" title="标题的直接链接">​</a></h2><ul><li>四舍六入五留双 <code>round()</code></li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token builtin">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#005CC5">1.5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#005CC5">2.5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">2</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">2</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="3-python-程序的基本流程控制">3. Python 程序的基本流程控制<a class="hash-link" href="#3-python-程序的基本流程控制" title="标题的直接链接">​</a></h2><ul><li><p>允许 <code>x &gt; y &gt; z</code> <code>x &lt; y &gt; z</code></p></li><li><p><code>while</code> 和 <code>else</code> 可以一起用 在退出循环的时候调用</p></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="4-python的特征数据类型">4. Python的特征数据类型<a class="hash-link" href="#4-python的特征数据类型" title="标题的直接链接">​</a></h2><ul><li>列表和字典的 <code>clear()</code> 方法</li></ul><div class="codeBlockContainer_CBWl language-py theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-py codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">a </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> b </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> d </span><span class="token operator" style="color:#D73A49">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#E3116C">'x'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#005CC5">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">'y'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#005CC5">2</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#CF222E">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">[1, 2, 3] [1, 2, 3]</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">[] []</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">{'x': 1, 'y': 2} {'x': 1, 'y': 2}</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">{} {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">clear可以理解为是清除指针指向所在地址的内存</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#E3116C">'''</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><ul><li><p>集合里面不能包含有列表或字典</p></li><li><p>列表自己 append 自身的时候会无穷递归 <code>lst.append(list)</code></p></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="5-文件">5. 文件<a class="hash-link" href="#5-文件" title="标题的直接链接">​</a></h2><ul><li>在表示路径的字符串中 <code>/</code> 等同于 <code>\</code>，但 <code>\</code> 又必须转义为 <code>\\</code></li></ul><div class="codeBlockContainer_CBWl language-python theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-python codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token string" style="color:#E3116C">"D:\\Dir\\file.txt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#E3116C">"D:/Dir/file.txt"</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="7-面向对象的程序设计">7. 面向对象的程序设计<a class="hash-link" href="#7-面向对象的程序设计" title="标题的直接链接">​</a></h2><ul><li><p><code>dir()</code> 是可以返回当前对象里面的所有参数 包括方法和属性</p></li><li><p>多继承时，如果其父类当做有共同的方法时，子类调用会以第一个为准，即先查找先调用。</p></li></ul>]]></content>
        <category label="笔记" term="笔记"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello World!]]></title>
        <id>/2019/jekyll</id>
        <link href="https://danyow.github.io/blog/2019/jekyll"/>
        <updated>2019-05-26T12:40:24.000Z</updated>
        <summary type="html"><![CDATA[1. jekyll 静态页面框架]]></summary>
        <content type="html"><![CDATA[<ol><li><strong>jekyll</strong> 静态页面框架</li><li><strong>whiteglass</strong> 主题</li><li><strong>Disqus</strong> 评论系统（国内<em>IP</em>应该无法访问）</li><li><strong>Travis CI</strong> 自动构建工具</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="jekyll">jekyll<a class="hash-link" href="#jekyll" title="标题的直接链接">​</a></h2><p>之所以采用 <strong>jekyll</strong> 而没有去使用中文文档更为丰富的 <em>Hexo</em>，是因为 <em>Github</em> 官方推荐的是前者。 同时也有另外一个原因，<strong>jekyll</strong> 看起来会简约许多。</p><p>大致步骤如下:</p><ol><li>安装 <em>bundler</em> 和 <em>jekyll</em><code>gem install bundler jekyll</code></li><li>创建项目
<code>jekyll new blog</code> 和 <code>jekyll new blog --skip-bundle</code>
后者是针对 <strong>whiteglass</strong> 的，后面会讲到。</li><li>进入目录
<code>bundle install</code></li><li>启动本地调试
<code>bundle exec jekyll serve</code></li></ol><p>以上就算是把房子建好了，剩下的就是需要让房客（我的笔记）入住，和让房间更好看些（<strong>whiteglass</strong>）。<br>
<!-- -->这些生成出来的文件直接推送到 <em>Github</em> 时，是可以正常运行的。</p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="whiteglass">whiteglass<a class="hash-link" href="#whiteglass" title="标题的直接链接">​</a></h2><p>这个是在 <a href="https://jekyllthemes.dev/" target="_blank" rel="noopener noreferrer"><em>jekyllthemes</em></a> 主题网站上面找到的。
推荐采用重新建房子的方式。</p><p>大致使用方法:</p><ol><li><p>创建项目 <code>jekyll new blog --skip-bundle</code></p></li><li><p>添加 <code>gem "jekyll-whiteglass"</code> 到 <code>Gemfile</code></p></li><li><p>编辑 <code>_config.yml</code></p><div class="codeBlockContainer_CBWl language-yml theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yml codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">theme</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> jekyll</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">whiteglass</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">plugins</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> jekyll</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">archives</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> jekyll</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">paginate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> jekyll</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sitemap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">permalink</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">year/</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">month/</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">day/</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">title/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">paginate_path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /posts/</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">num/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">paginate</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#005CC5">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">jekyll-archives</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">enabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> categories</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> tags</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">layout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> category_archives</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#22863A">permalinks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token key atrule" style="color:#22863A">category</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /categories/</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">name/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">tag</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /tags/</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">name/</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>依次执行以下命令</p><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#8250DF">rm</span><span class="token plain"> index.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#8250DF">curl</span><span class="token plain"> -L -O </span><span class="token string" style="color:#E3116C">"https://github.com/yous/whiteglass/raw/master/{index.html,about.md,archives.md,feed.xml}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#8250DF">curl</span><span class="token plain"> -L --create-dirs -o _data/navigation.yml https://github.com/yous/whiteglass/raw/master/_data/navigation.yml</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>安装所需文件和启动</p><div class="codeBlockContainer_CBWl language-shell theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-shell codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">bundle </span><span class="token function" style="color:#8250DF">install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bundle </span><span class="token builtin class-name" style="color:#116329">exec</span><span class="token plain"> jekyll serve</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><p>但这里做完之后直接推送到 <em>Github</em> 上时是没有任何反应，看不到任何界面。
这时需要 <strong>Travis CI</strong></p><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="travis-ci">Travis CI<a class="hash-link" href="#travis-ci" title="标题的直接链接">​</a></h2><p>由于主题用到了 <em>gem</em> 包，而 <em>Github</em> 又并不能直接支持去操作 <em>gem</em>，所以需要一个类似 <em>Jenkins</em> 的持续集成工具来完成该操作。<br>
<strong>Travis</strong> 会根据当前 <em>master</em> 分支下的 <code>.travis.yml</code> 这个文件去执行相应操作。<br>
<!-- -->根目录下新建 <code>.travis.yml</code> 或者去 <a href="https://github.com/yous/whiteglass/blob/master/.travis.yml" target="_blank" rel="noopener noreferrer">下载最新的文件</a>  </p><div class="codeBlockContainer_CBWl language-yml theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yml codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#22863A">language</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ruby</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">sudo</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#005CC5">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">cache</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bundler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">rvm</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 2.6.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">before_install</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> gem update </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> gem install bundler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">script</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> rm </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">rf _site</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> bundle exec jekyll build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">branches</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">only</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">deploy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">provider</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">skip-cleanup</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#005CC5">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">github-token</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $GITHUB_TOKEN  </span><span class="token comment" style="color:#999988;font-style:italic"># &lt;-- 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">keep-history</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#005CC5">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">local-dir</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> _site</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">target-branch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> gh</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pages   </span><span class="token comment" style="color:#999988;font-style:italic"># &lt;-- 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#22863A">on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#22863A">branch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p><em>yml</em> 区别于 <em>xml</em>，其中 <em>tab</em> 键以两个空格为主，可读性很高。</p><p>有几点说明:</p><ol><li>这个参数不需要修改，但是需要在 <em>Github</em> 的设置（<em>Settings</em>）后台的（<em>Developer settings</em>）上添加一个（<em>Personal access tokens</em>）. 得到这个 <em>key</em> 后添加到 <strong>Travis</strong> 的对应仓库的设置后台。 在 <em>Environment Variables</em> 键入 <em>GITHUB_TOKEN</em> 为 <em>Name</em>，<em>key</em> 为 <em>Value</em>。 然后直接 <em>Add</em> 即可。</li><li>这里需要新建一个名为 <em>gh-pages</em> 的分支，主要是给 <strong>Travis</strong> 自动构建完后推送用。</li></ol><p>做完这些，新建一个新的提交，<strong>Travis</strong> 就会自动开始运行，然后就可以查看网页了。</p><ul><li>可能这里也并不能直接的查看网页，需要修改 <code>_config.yml</code></li></ul><div class="codeBlockContainer_CBWl language-yml theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yml codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#22863A">baseurl</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"/blog"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 为你的项目名</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"https://xxx.github.io"</span><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># xxx为你的 Github 用户名</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="disqus">Disqus<a class="hash-link" href="#disqus" title="标题的直接链接">​</a></h2><p>这个会比较简单:</p><ol><li>新建目录和文件 <code>_includes/custom_comments_provider.html</code></li><li>添加 <code>comments: true</code> 到 <code>_config.yml</code></li></ol><p>然后去到 <strong>Disqus</strong> 的后台，新建站点，然后选择 <strong>jekyll</strong>，把他的通用代码全部拷贝到刚刚新建的 <em>html</em> 文件当中。</p><h3 class="anchor anchorWithHideOnScrollNavbar_c5FC" id="其他">其他<a class="hash-link" href="#其他" title="标题的直接链接">​</a></h3><blockquote><p>自定义域名</p></blockquote><ol><li><p>自定义域名解析三处。</p><div class="codeBlockContainer_CBWl language-text theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token plain">*.xxx.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">www.xxx.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@.xxx.com</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p><em>ip</em> 地址的获取 <code>ping xxx.github.io</code></p></li><li><p>由于变成了子域名，需要更改<code>_config.xml</code></p><div class="codeBlockContainer_CBWl language-yml theme-code-block"><div class="codeBlockContent_vhl8" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yml codeBlock_w2AC thin-scrollbar"><code class="codeBlockLines_OfWd"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#22863A">baseurl</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#22863A">url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#E3116C">"https://blog.xxx.com"</span><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># blog作为子域名放在前面 xxx为你的 Github 用户名</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_R7VQ clean-btn"><span class="copyButtonIcons_Uqyx" aria-hidden="true"><svg class="copyButtonIcon_CtfL" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Mq1p" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li></ol><blockquote><p>Ps: 2019年8月2日更新</p></blockquote><p>由于最近在 <em>Windows</em> 平台上开发, 所以遇到一个问题.
<em>Travis CI</em> 不会自动运行构建了. 应该说每次运行都会报错.
查找发现有个回答</p><p><code>啊，我明白了。您正在使用Windows计算机进行开发，但构建将在Linux上运行。如果您无法访问Linux机器，我认为最好不要Gemfile.lock登录您的Git存储库。</code></p>]]></content>
        <category label="jekyll" term="jekyll"/>
        <category label="whiteglass" term="whiteglass"/>
        <category label="Disqus" term="Disqus"/>
        <category label="Travis" term="Travis"/>
    </entry>
</feed>